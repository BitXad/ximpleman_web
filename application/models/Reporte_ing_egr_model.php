<?php

/* 

 * Generated by CRUDigniter v3.2 

 * www.crudigniter.com

 */

 

class Reporte_ing_egr_model extends CI_Model

{

    function __construct()

    {

        parent::__construct();

    }

function get_reportes($fecha1, $fecha2, $usuario_id)
{

    if($usuario_id == 0){
      $cadusuario1 = "";
      $cadusuario2 = "";
      $cadusuario3 = "";
      $cadusuario4 = "";
      $cadusuario5 = "";
      $cadusuario6 = "";
      $cadusuario10 = "";
      $cadusuario11 = "";
      $cadusuario12 = "";

    }else{
        $cadusuario1 = " and v.usuario_id = ".$usuario_id." ";
        $cadusuario2 = " and c.usuario_id = ".$usuario_id." ";
        $cadusuario3 = " and i.usuario_id = ".$usuario_id." ";
        $cadusuario4 = " and e.usuario_id = ".$usuario_id." ";
        $cadusuario5 = " and c.usuario_id = ".$usuario_id." ";
        $cadusuario6 = " and c.usuario_id = ".$usuario_id." ";
        $cadusuario10 = " and op.usuario_id2 = ".$usuario_id." ";
        $cadusuario11 = " and d.usuario_id = ".$usuario_id." ";
        $cadusuario12 = " and d.usuariopsaldo_id = ".$usuario_id." ";

    }

        $ingresos = $this->db->query("
     
      (select
            i.ingreso_id as id, i.ingreso_fecha as fecha, concat('ingreso N°: ', i.ingreso_numero, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), i.ingreso_nombre, ', ', if(i.ingreso_categoria !='', concat(i.ingreso_categoria,', '),''), i.ingreso_concepto) as detalle,
            i.ingreso_monto as ingreso, 0 as egreso,
            0 as utilidad, 1 as tipo
      from
            ingresos i
      left join factura f on i.ingreso_id = f.ingreso_id
      where
            date(i.ingreso_fecha) >= '".$fecha1."'
            and date(i.ingreso_fecha) <= '".$fecha2."'
            ".$cadusuario3."
      order by i.ingreso_fecha desc)
      UNION
      (select
            d.detalleven_id as id, concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('VENTA(EFECTIVO) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Sr(a): ', c.cliente_nombre, ', ', ifnull(concat(d.detalleven_cantidad, ' ', p.producto_nombre), 'ESTA VENTA NO TIENE DETALLES')) as detalle,
            ifnull(d.detalleven_total, 0) as ingreso, 0 as egreso,
            ifnull(d.detalleven_total-(d.detalleven_costo * d.detalleven_cantidad), 0) as utilidad, 2 as tipo
      from
            venta v 
      left join detalle_venta d on v.venta_id = d.venta_id
      left join producto p on d.producto_id = p.producto_id
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 1
            and v.tipotrans_id = 1
            and v.estado_id = 1 
            ".$cadusuario1." 
            order by v.venta_fecha desc, v.venta_hora desc)

      UNION
      (select 
            d.detalleven_id as id, concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('VENTA(TARJ.DEBITO) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Sr(a): ', c.cliente_nombre, ', ', ifnull(concat(d.detalleven_cantidad, ' ', p.producto_nombre), 'ESTA VENTA NO TIENE DETALLES')) as detalle,
            ifnull(d.detalleven_total, 0) as ingreso, 0 as egreso,
            ifnull(d.detalleven_total-(d.detalleven_costo * d.detalleven_cantidad), 0) as utilidad, 21 as tipo
      from
            venta v
      left join detalle_venta d on v.venta_id = d.venta_id
      left join producto p on d.producto_id = p.producto_id
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 2 
            ".$cadusuario1." 
            order by v.venta_fecha desc, v.venta_hora desc)
      UNION
      (select 
            d.detalleven_id as id, concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('VENTA(TRANS. BANCARIA) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Sr(a): ', c.cliente_nombre, ', ', ifnull(concat(d.detalleven_cantidad, ' ', p.producto_nombre), 'ESTA VENTA NO TIENE DETALLES')) as detalle,
            ifnull(d.detalleven_total, 0) as ingreso, 0 as egreso,
            ifnull(d.detalleven_total-(d.detalleven_costo * d.detalleven_cantidad), 0) as utilidad, 22 as tipo
      from
            venta v
      left join detalle_venta d on v.venta_id = d.venta_id
      left join producto p on d.producto_id = p.producto_id
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 3
            ".$cadusuario1." 
            order by v.venta_fecha desc, v.venta_hora desc)
      UNION
      (select 
            d.detalleven_id as id, concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('VENTA(TARJ. CREDITO) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Sr(a): ', c.cliente_nombre, ', ', ifnull(concat(d.detalleven_cantidad, ' ', p.producto_nombre), 'ESTA VENTA NO TIENE DETALLES')) as detalle,
            ifnull(d.detalleven_total, 0) as ingreso, 0 as egreso,
            ifnull(d.detalleven_total-(d.detalleven_costo * d.detalleven_cantidad), 0) as utilidad, 23 as tipo
      from
            venta v
      left join detalle_venta d on v.venta_id = d.venta_id
      left join producto p on d.producto_id = p.producto_id
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 4
            ".$cadusuario1." 
            order by v.venta_fecha desc, v.venta_hora desc)
      UNION
      (select 
            d.detalleven_id as id, concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('VENTA(CHEQUE) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Sr(a): ', c.cliente_nombre, ', ', ifnull(concat(d.detalleven_cantidad, ' ', p.producto_nombre), 'ESTA VENTA NO TIENE DETALLES')) as detalle,
            ifnull(d.detalleven_total, 0) as ingreso, 0 as egreso,
            ifnull(d.detalleven_total-(d.detalleven_costo * d.detalleven_cantidad), 0) as utilidad, 24 as tipo
      from
            venta v
      left join detalle_venta d on v.venta_id = d.venta_id
      left join producto p on d.producto_id = p.producto_id
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 5 
            ".$cadusuario1." 
            order by v.venta_fecha desc, v.venta_hora desc)
      UNION
      (select 
            d.detalleven_id as id, concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('PAGO INICIAL POR VENTA(CREDITO) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Sr(a): ', c.cliente_nombre, ', ', ifnull(concat(d.detalleven_cantidad, ' ', p.producto_nombre), 'ESTA VENTA NO TIENE DETALLES'), ', CRED.N°:', cr.credito_id, ', SALDO POR COBRAR: ', cr.credito_monto) as detalle,
            cr.credito_cuotainicial as ingreso, 0 as egreso,
            ifnull(d.detalleven_total-(d.detalleven_costo * d.detalleven_cantidad), 0) as utilidad, 7 as tipo
      from
            venta v
      left join detalle_venta d on v.venta_id = d.venta_id
      left join producto p on d.producto_id = p.producto_id
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      left join credito cr on v.venta_id = cr.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.tipotrans_id = 2 
            ".$cadusuario1." 
            order by v.venta_fecha desc, v.venta_hora desc)
      UNION
      (select 
            d.detalleven_id as id, concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('VENTA(CONSIGNACION) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Sr(a): ', c.cliente_nombre, ', ', ifnull(concat(d.detalleven_cantidad, ' ', p.producto_nombre), 'ESTA VENTA NO TIENE DETALLES')) as detalle,
            ifnull(d.detalleven_total, 0) as ingreso, 0 as egreso,
            ifnull(d.detalleven_total-(d.detalleven_costo * d.detalleven_cantidad), 0) as utilidad, 8 as tipo
      from
            venta v
      left join detalle_venta d on v.venta_id = d.venta_id
      left join producto p on d.producto_id = p.producto_id
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.tipotrans_id = 3 
            ".$cadusuario1." 
            order by v.venta_fecha desc, v.venta_hora desc)
      UNION
      (select 
            d.detalleven_id as id, concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('VENTA(TRASPASO) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Sr(a): ', c.cliente_nombre, ', ', ifnull(concat(d.detalleven_cantidad, ' ', p.producto_nombre), 'ESTA VENTA NO TIENE DETALLES')) as detalle,
            ifnull(d.detalleven_total, 0) as ingreso, 0 as egreso,
            ifnull(d.detalleven_total-(d.detalleven_costo * d.detalleven_cantidad), 0) as utilidad, 9 as tipo
      from
            venta v
      left join detalle_venta d on v.venta_id = d.venta_id
      left join producto p on d.producto_id = p.producto_id
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.tipotrans_id = 4 
            ".$cadusuario1." 
            order by v.venta_fecha desc, v.venta_hora desc)
      UNION
      (select 
            cuota_id as id, concat(c.cuota_fecha, ' ', c.cuota_hora) as fecha, concat('Cobro por CREDITO N°: ', c.credito_id, ', Cliente: ', cl.cliente_nombre, ', ', c.cuota_glosa) as detalle,
            c.cuota_cancelado as ingreso, 0 as egreso,
            c.cuota_interes as utilidad, 3 as tipo
      from
            cuota c, credito cr, cliente cl, venta v
      where
            date(c.cuota_fecha) >= '".$fecha1."'
            and date(c.cuota_fecha) <= '".$fecha2."'
            and c.credito_id = cr.credito_id
            and cr.venta_id = v.venta_id
            and cl.cliente_id = v.cliente_id
            and c.estado_id = 9
            and (cr.venta_id > 0 or cr.venta_id is not null )
            ".$cadusuario6."
            order by c.cuota_fecha desc, c.cuota_hora desc)
      UNION
      (select 
            e.egreso_id as id, e.egreso_fecha as fecha, concat('Egreso N°: ', e.egreso_numero, ', ', e.egreso_nombre, ', ', if(e.egreso_categoria !='', concat(e.egreso_categoria,', '),''), e.egreso_concepto) as detalle,
            0 as ingreso, e.egreso_monto as egreso,
            0 as utilidad, 4 as tipo
      from
            egresos e
      where
            date(e.egreso_fecha) >= '".$fecha1."'
            and date(e.egreso_fecha) <= '".$fecha2."'
            ".$cadusuario4." 
            order by e.egreso_fecha desc)
      UNION
      (select
            c.compra_id as id, concat(c.compra_fecha, ' ', c.compra_hora) as fecha, concat('Egreso por compra N°: ', c.compra_id, ', Proveedor: ', pv.proveedor_nombre) as detalle,
            0 as ingreso, ifnull(c.compra_totalfinal, 0) as egreso,
            0 as utilidad, 5 as tipo
      from
            compra c, proveedor pv
      where
            date(c.compra_fecha) >= '".$fecha1."'
            and date(c.compra_fecha) <= '".$fecha2."'
            and c.compra_caja = 1
            and c.tipotrans_id = 1
            and c.proveedor_id = pv.proveedor_id
            ".$cadusuario2." 
            order by c.compra_fecha desc, c.compra_hora desc)
      UNION
      (select
            c.compra_id as id, concat(c.compra_fecha, ' ', c.compra_hora) as fecha, concat('Egreso por compra a CREDITO N°: ', c.compra_id, ', Proveedor: ', pv.proveedor_nombre, ', Total: ', c.compra_totalfinal, ', a cuenta: ', cr.credito_cuotainicial, ', saldo: ', cr.credito_monto) as detalle,
            0 as ingreso, ifnull(cr.credito_cuotainicial, 0) as egreso,
            0 as utilidad, if(cr.credito_cuotainicial>0, 5, 0) as tipo
      from
            compra c
      left join proveedor pv on c.proveedor_id = pv.proveedor_id
      left join credito cr on c.compra_id = cr.compra_id
      where
            date(c.compra_fecha) >= '".$fecha1."'
            and date(c.compra_fecha) <= '".$fecha2."'
            and c.tipotrans_id = 2 
            ".$cadusuario2." 
            order by c.compra_fecha desc, c.compra_hora desc)
      UNION
      (select 
            c.cuota_id as id, concat(c.cuota_fecha, ' ', c.cuota_hora) as fecha, concat('Proveedor: ',p.proveedor_nombre,', Pago por credito N°: ', c.credito_id,', ', c.cuota_glosa) as detalle,
            0 as ingreso, c.cuota_cancelado as egreso,
            0 as utilidad, 6 as tipo
      from
            cuota c, credito cr, proveedor p, compra co
      where
            date(c.cuota_fecha) >= '".$fecha1."'
            and date(c.cuota_fecha) <= '".$fecha2."'
            and c.credito_id = cr.credito_id
            and c.estado_id = 9
            and cr.compra_id = co.compra_id
            and p.proveedor_id = co.proveedor_id
            and (c.cuota_ordenpago = 0 or c.cuota_ordenpago is null)
            and (cr.compra_id > 0 or cr.compra_id  <> null )
            ".$cadusuario5."
            order by c.cuota_fecha desc, c.cuota_hora desc)
       UNION
      (select 
            op.orden_id as id, concat(op.orden_fechapago, ' ', op.orden_horapago) as fecha, concat(op.orden_motivo, ', Empresa:', op.orden_destinatario,', Cobrado por: ', op.orden_cobradapor, ' C.I.:', op.orden_ci) as detalle,
            0 as ingreso, op.orden_cancelado as egreso,
            0 as utilidad, 10 as tipo
      from
            orden_pago op
      where
            date(op.orden_fechapago) >= '".$fecha1."'
            and date(op.orden_fechapago) <= '".$fecha2."'
            and op.estado_id = 9
            ".$cadusuario10."
            order by op.orden_fechapago desc, op.orden_horapago desc)
        UNION
        (SELECT
                d.detalleserv_id as id,
                concat(s.servicio_fecharecepcion, ' ', s.servicio_horarecepcion) as fecha, 
                concat('Servicio N°: ', s.servicio_id, ', Cliente: ', c.cliente_nombre, ', ',  d.detalleserv_descripcion, ', A.C.:', d.detalleserv_acuenta ) as detalle,
                d.detalleserv_acuenta as ingreso,
                0 as egreso,  0 as utilidad, 11 as tipo
            
            FROM
                detalle_serv d
            LEFT JOIN servicio s on d.servicio_id = s.servicio_id
            LEFT JOIN cliente c on s.cliente_id = c.cliente_id
            LEFT JOIN estado e on s.estado_id = e.estado_id

           WHERE
                date(s.servicio_fecharecepcion) >= '".$fecha1."'
                and date(s.servicio_fecharecepcion) <= '".$fecha2."' ".$cadusuario11."
                order by s.servicio_fecharecepcion desc, s.servicio_horarecepcion desc)
        UNION
        (SELECT
                d.detalleserv_id as id,
                concat(d.detalleserv_fechaentregado, ' ', d.detalleserv_horaentregado) as fecha, 
                concat('Servicio N°: ', s.servicio_id, ', Cliente: ', c.cliente_nombre, ', ',  d.detalleserv_descripcion, ', SALDO:', d.detalleserv_saldo) as detalle,
                d.detalleserv_saldo as ingreso,
                0 as egreso, (select
                       (d.detalleserv_total-sum(dv.detalleven_total)-d.detalleserv_acuenta) as total_insumo
                  from
                       detalle_venta dv, producto p
                 where
                       dv.producto_id = p.producto_id
                       and dv.detalleserv_id = d.detalleserv_id) as utilidad, 12 as tipo
            
            FROM
                detalle_serv d
            LEFT JOIN servicio s on d.servicio_id = s.servicio_id
            LEFT JOIN cliente c on s.cliente_id = c.cliente_id
            LEFT JOIN estado e on s.estado_id = e.estado_id

           WHERE
                date(d.detalleserv_fechaentregado) >= '".$fecha1."'
                and date(d.detalleserv_fechaentregado) <= '".$fecha2."' ".$cadusuario12."
                order by d.detalleserv_fechaentregado desc, d.detalleserv_horaentregado desc)
            
        ")->result_array();

        return $ingresos;

    }
    
    function get_reportemovimiento($fecha1, $fecha2, $usuario_id){

          if($usuario_id == 0){
                $cadusuario1 = "";
          }else{
                $cadusuario1 = " and usuario_id = ".$usuario_id." ";
          }
          $sql = "SELECT c.*
                from consreporte c
                where c.fecha >='$fecha1' 
                and c.fecha<='$fecha2'  
                $cadusuario1";

          $ingresos = $this->db->query($sql)->result_array();
          return $ingresos;
    }
    
    function get_totalesmovimiento($fecha1, $fecha2, $usuario_id){

          if($usuario_id == 0){
                $cadusuario1 = "";
          }else{
                $cadusuario1 = " and usuario_id = ".$usuario_id." ";
          }
          
          $sql = "select * from
                    ((select c.forma,c.transaccion, c.banco, sum(c.`ingresos`) as ingresos, 0 as egresos,c.forma_id,c.tipotrans_id, 1 as tipo

                    from consreporte c
                    where c.fecha >='$fecha1' and c.fecha<='$fecha2' and c.ingresos>0 $cadusuario1

                    group by c.tipotrans_id, c.forma_id, c.banco_id
                    order by forma_id)

                    UNION

                    (select c.forma,c.transaccion, c.banco, 0 as ingresos, sum(c.`egresos`) as egresos,c.forma_id,c.tipotrans_id, 2 as tipo
                    from consreporte c
                    where c.fecha >='$fecha1' and c.fecha<='$fecha2' and c.egresos>0 $cadusuario1

                    group by c.tipotrans_id, c.forma_id, c.banco_id
                    order by c.forma_id)) as t1

                    order by tipo,forma_id, tipotrans_id asc";        

          //echo $sql;
          
          $totales = $this->db->query($sql)->result_array();
          
          
          return $totales;
    }
      
    function get_reportemovimientodia()
    {
//
//        if($usuario_id == 0)
//        {
//            $cadusuario1 = "";
//        }
//        else
//        {
//            $cadusuario1 = " and usuario_id = ".$usuario_id." ";
//        }

        $sql = "select * from consreportediario";

        $ingresos = $this->db->query($sql)->result_array();
        return $ingresos;

    }
    
    function get_reptotaling_efectivo($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and i.usuario_id = ".$usuario_id." ";
        }
        $ingresos = $this->db->query("
          select 
                SUM(i.ingreso_monto) as total
          from
                ingresos i
          where
                date(i.ingreso_fecha) >= '".$fecha1."'
                and date(i.ingreso_fecha) <= '".$fecha2."'
                ".$cadusuario."
          order by i.ingreso_fecha desc
        ")->row_array();
        
        return $ingresos['total'];
    }
    
    /* *******************Obtiene la sumatoria de las ventas************************ */
    function get_reptotal_ventas($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and i.usuario_id = ".$usuario_id." ";
        }
        $ingresos = $this->db->query("
          select
                SUM(d.detalleven_total) as total
      from

            venta v, detalle_venta d, producto p

      where

            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 1
            and v.venta_id = d.venta_id
            and d.producto_id = p.producto_id 
            ".$cadusuario." 
            order by v.venta_fecha desc, v.venta_hora desc
        ")->row_array();
        
        return $ingresos['total'];
    }
    
    /* *******************Obtiene la sumatoria de los cobros a Credito************************ */
    function get_reptotal_cobroscredito($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and i.usuario_id = ".$usuario_id." ";
        }
        $ingresos = $this->db->query("
          select
                SUM(c.cuota_cancelado) as total
      from

            cuota c, credito cr

      where

            date(c.cuota_fecha) >= '".$fecha1."'

            and date(c.cuota_fecha) <= '".$fecha2."'

            and c.credito_id = cr.credito_id
            and c.estado_id = 9

            and (cr.venta_id > 0 or cr.venta_id <>null )

            ".$cadusuario."
      order by c.cuota_fecha desc, c.cuota_hora desc
        ")->row_array();
        
        return $ingresos['total'];
    }
    /* ********************Obtiene la suma total de reporte de egreso ******************************************* */
    function get_reptotalegr_efectivo($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and i.usuario_id = ".$usuario_id." ";
        }
        $egresos = $this->db->query("
          select 
                SUM(e.egreso_monto) as total
          from
                egresos e
          where
            date(e.egreso_fecha) >= '".$fecha1."'
            and date(e.egreso_fecha) <= '".$fecha2."'
            ".$cadusuario." 
            order by e.egreso_fecha desc
        ")->row_array();
        
        return $egresos['total'];
    }
    /* ********************Obtiene la suma total de reporte de compras ******************************************* */
    function get_reptotalegr_compras($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and i.usuario_id = ".$usuario_id." ";
        }
        $egresos = $this->db->query("
          select
                SUM(c.compra_totalfinal) as total
          from
                compra c, proveedor pv
          where
            date(c.compra_fecha) >= '".$fecha1."'
            and date(c.compra_fecha) <= '".$fecha2."'
            and c.compra_caja = 1
            and c.tipotrans_id = 1
            and c.proveedor_id = pv.proveedor_id
            ".$cadusuario." 
            order by c.compra_fecha desc, c.compra_hora desc
        ")->row_array();
        
        return $egresos['total'];
    }
    /* ********************Obtiene los reportes de Ventas por Efectivo ******************************************* */
    /*function get_repefectivo_ventas($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and v.usuario_id = ".$usuario_id." ";
        }
        $ingresos = $this->db->query("
         select 
            concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('Venta(EFECTIVO) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Cliente: ', c.cliente_nombre) as detalle,
            v.venta_total as ingreso, 0 as egreso,
            0 as utilidad, 22 as tipo
      from
            venta v
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 1
            and v.tipotrans_id = 1
            and v.estado_id = 1 
            ".$cadusuario." 
            order by v.venta_fecha desc, v.venta_hora desc
        ")->result_array();
        
        return $ingresos;
    }*/
    /* ********************Obtiene los reportes de Ventas por tarjeta de debito ******************************************* */
    function get_repdebito_ventas($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and v.usuario_id = ".$usuario_id." ";
        }
        $egresos = $this->db->query("
         select 
            concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('Venta(TARJ. DEBITO) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Cliente: ', c.cliente_nombre) as detalle,
            v.venta_total as ingreso, 0 as egreso,
            0 as utilidad, 22 as tipo
      from
            venta v
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 2 
            ".$cadusuario." 
            order by v.venta_fecha desc, v.venta_hora desc
        ")->result_array();
        
        return $egresos;
    }
    
    /* ********************Obtiene los reportes de Ventas por transaccion bancaria ******************************************* */
    function get_reptransban_ventas($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and v.usuario_id = ".$usuario_id." ";
        }
        $egresos = $this->db->query("
         select 
            concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('Venta(TRANS. BANCARIA) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Cliente: ', c.cliente_nombre) as detalle,
            v.venta_total as ingreso, 0 as egreso,
            0 as utilidad, 22 as tipo
      from
            venta v
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 3
            ".$cadusuario." 
            order by v.venta_fecha desc, v.venta_hora desc
        ")->result_array();
        
        return $egresos;
    }
    
    /* ********************Obtiene los reportes de Ventas por tarjetas de credito ******************************************* */
    function get_reptarjcredito_ventas($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and v.usuario_id = ".$usuario_id." ";
        }
        $egresos = $this->db->query("
         select 
            concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('Venta(TARJ. CREDITO) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Cliente: ', c.cliente_nombre) as detalle,
            v.venta_total as ingreso, 0 as egreso,
            0 as utilidad, 22 as tipo
      from
            venta v
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 4
            ".$cadusuario." 
            order by v.venta_fecha desc, v.venta_hora desc
        ")->result_array();
        
        return $egresos;
    }
    
    /* ********************Obtiene los reportes de Ventas por transaccion bancaria ******************************************* */
    function get_repcheque_ventas($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and v.usuario_id = ".$usuario_id." ";
        }
        $egresos = $this->db->query("
         select 
            concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('Venta(CHEQUE) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Cliente: ', c.cliente_nombre) as detalle,
            v.venta_total as ingreso, 0 as egreso,
            0 as utilidad, 22 as tipo
      from
            venta v
      left join cliente c on v.cliente_id = c.cliente_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 5
            ".$cadusuario." 
            order by v.venta_fecha desc, v.venta_hora desc
        ")->result_array();
        
        return $egresos;
    }
    /* ********************Obtiene los reportes de Ventas al Credito ******************************************* */
    function get_repcredito_ventas($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id == 0){
          $cadusuario = "";
        }else{
          $cadusuario = " and v.usuario_id = ".$usuario_id." ";
        }
        $egresos = $this->db->query("
         select 
            concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('Venta(CREDITO) N°: ', v.venta_id, ', ', if(f.factura_numero>0, concat('Fact.: ',f.factura_numero, ', '),''), 'Cliente: ', c.cliente_nombre, ', Total: ', v.venta_total, ', a cuenta: ', cr.credito_cuotainicial, ', Saldo: ', cr.credito_monto) as detalle,
            cr.credito_cuotainicial as ingreso, 0 as egreso,
            0 as utilidad, 22 as tipo
      from
            venta v
      left join cliente c on v.cliente_id = c.cliente_id
      left join credito cr on v.venta_id = cr.venta_id
      left join factura f on v.venta_id = f.venta_id
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.tipotrans_id = 2 
            ".$cadusuario." 
            order by v.venta_fecha desc, v.venta_hora desc
        ")->result_array();
        
        return $egresos;
    }
    
    function get_egresoreportes($fecha1, $fecha2, $usuario_id)
    {
        $cadusuario2  = " and c.usuario_id = ".$usuario_id." ";
        $cadusuario4  = " and e.usuario_id = ".$usuario_id." ";
        $cadusuario5  = " and c.usuario_id = ".$usuario_id." ";
        $cadusuario10 = " and op.usuario_id2 = ".$usuario_id." ";

        $egresos = $this->db->query("
      
      (select 
            e.egreso_fecha as fecha, concat(e.egreso_nombre, ', ', e.egreso_concepto) as detalle,
            0 as ingreso, e.egreso_monto as egreso,
            0 as utilidad, 4 as tipo
      from
            egresos e
      where
            date(e.egreso_fecha) >= '".$fecha1."'
            and date(e.egreso_fecha) <= '".$fecha2."'
            ".$cadusuario4." 
            order by e.egreso_fecha desc)
      UNION
      (select 
            concat(c.compra_fecha, ' ', c.compra_hora) as fecha, concat('Proveedor: ', pv.proveedor_nombre) as detalle,
            0 as ingreso, ifnull(c.compra_totalfinal, 0) as egreso,
            0 as utilidad, 5 as tipo
      from
            compra c, proveedor pv
      where
            date(c.compra_fecha) >= '".$fecha1."'
            and date(c.compra_fecha) <= '".$fecha2."'
            and c.compra_caja = 1
            and c.tipotrans_id = 1
            and c.proveedor_id = pv.proveedor_id
            ".$cadusuario2." 
            order by c.compra_fecha desc, c.compra_hora desc)
      UNION
      (select 
            concat(c.cuota_fecha, ' ', c.cuota_hora) as fecha, concat('Pago por credito N°: ', c.credito_id) as detalle,
            0 as ingreso, c.cuota_cancelado as egreso,
            0 as utilidad, 6 as tipo
      from
            cuota c, credito cr
      where
            date(c.cuota_fecha) >= '".$fecha1."'
            and date(c.cuota_fecha) <= '".$fecha2."'
            and c.credito_id = cr.credito_id
            and c.estado_id = 9
            and (cr.compra_id > 0 or cr.compra_id <>null )
            ".$cadusuario5."
            order by c.cuota_fecha desc, c.cuota_hora desc)
        UNION

      (select 
            concat(op.orden_fechapago, ' ', op.orden_horapago) as fecha, concat(op.orden_motivo, ', Empresa:', op.orden_destinatario,', Cobrado por: ', op.orden_cobradapor, ' C.I.:', op.orden_ci) as detalle,
            0 as ingreso, op.orden_cancelado as egreso,
            0 as utilidad, 10 as tipo
      from
            orden_pago op
      where
            date(op.orden_fechapago) >= '".$fecha1."'
            and date(op.orden_fechapago) <= '".$fecha2."'
            and op.estado_id = 9
            ".$cadusuario10."
            order by op.orden_fechapago desc, op.orden_horapago desc)   
        ")->result_array();
        return $egresos;
    }
    
    function get_ingresoreportes($fecha1, $fecha2, $usuario_id)
    {
        if($usuario_id > 0){
            $cadusuario1 = " and v.usuario_id = ".$usuario_id." ";
            $cadusuario3 = " and i.usuario_id = ".$usuario_id." ";
            $cadusuario6 = " and c.usuario_id = ".$usuario_id." ";
        }else{
            $cadusuario1 = "";
            $cadusuario3 = "";
            $cadusuario6 = "";
        }
        $ingresos = $this->db->query("
     
      (select 
            i.ingreso_fecha as fecha, concat(i.ingreso_nombre, ', ', i.ingreso_concepto) as detalle,
            i.ingreso_monto as ingreso, 0 as egreso,
            0 as utilidad, 1 as tipo
      from
            ingresos i
      where
            date(i.ingreso_fecha) >= '".$fecha1."'
            and date(i.ingreso_fecha) <= '".$fecha2."'
            ".$cadusuario3."
      order by i.ingreso_fecha desc)
      UNION
      (select 
            concat(v.venta_fecha, ' ', v.venta_hora) as fecha, concat('(', d.detalleven_cantidad, ')', '(', p.producto_codigo, ') ', p.producto_nombre) as detalle,
            d.detalleven_total as ingreso, 0 as egreso,
            d.detalleven_total-(d.detalleven_costo * d.detalleven_cantidad) as utilidad, 2 as tipo
      from
            venta v, detalle_venta d, producto p
      where
            date(v.venta_fecha) >= '".$fecha1."'
            and date(v.venta_fecha) <= '".$fecha2."'
            and v.forma_id = 1
            and v.tipotrans_id = 1
            and v.estado_id = 1
            and v.venta_id = d.venta_id
            and d.producto_id = p.producto_id 
            ".$cadusuario1." 
            order by v.venta_fecha desc, v.venta_hora desc )
      UNION
      (select 
            concat(c.cuota_fecha, ' ', c.cuota_hora) as fecha, concat('Cuota credito Nro.: ', c.credito_id) as detalle,
            c.cuota_cancelado as ingreso, 0 as egreso,
            c.cuota_interes as utilidad, 3 as tipo
      from
            cuota c, credito cr
      where
            date(c.cuota_fecha) >= '".$fecha1."'
            and date(c.cuota_fecha) <= '".$fecha2."'
            and c.credito_id = cr.credito_id
            and c.estado_id = 9
            and (cr.venta_id > 0 or cr.venta_id <>null )
            ".$cadusuario6."
      order by c.cuota_fecha desc, c.cuota_hora desc)

        ")->result_array();

        return $ingresos;

    }
    /* obtiene las ventas totales de los clientes.. */
    function getall_ventaagrupado_porcliente($fecha_desde, $fecha_hasta)
    {
        $venta_porusuario = $this->db->query("
            SELECT
                vs.cliente_id, c.`cliente_nombre`, SUM(vs.detalleven_total) as 'totalventas',
                SUM(vs.`detalleven_costo`* vs.`detalleven_cantidad`) as totalcosto,
                avg(vs.detalleven_tc) as tipo_cambio
            FROM
                `ventas` vs
            left join `cliente` c on vs.cliente_id = c.cliente_id
            where
            	date(vs.venta_fecha) >= '$fecha_desde'
                and date(vs.venta_fecha) <= '$fecha_hasta'
            group by c.`cliente_id`
            order by totalventas DESC
        ")->result_array();

        return $venta_porusuario;
    }
    /* obtener reporte agrupado por categoria */
    function reporteventas_prodagrupados($filtro)
    {
        $reporte = $this->db->query(
            "SELECT
		vs.producto_id, vs.`producto_codigo`, vs.`producto_nombre`,
                vs.producto_unidad, sum(vs.detalleven_cantidad) as total_cantidad,
                (sum(`vs`.`detalleven_total`) / sum(vs.detalleven_cantidad)) as total_punitario, 
                sum(`vs`.`detalleven_descuento`*`vs`.`detalleven_cantidad`) as total_descuento,
                sum(`vs`.`detalleven_total`) as total_venta,
                (sum(`vs`.`detalleven_costo`*`vs`.`detalleven_cantidad`)) as total_costo,
                (sum(`vs`.`detalleven_total`)-SUM(vs.`detalleven_costo`*`vs`.`detalleven_cantidad`)) as total_utilidad
            FROM
                ventas vs
            WHERE
                $filtro
            group by `vs`.producto_id
            order by total_venta desc
        ")->result_array();
        return $reporte;
    }
    
    function get_totalventasfecha($usuario_id, $lafecha)
    {
        $ventatotal = $this->db->query("
            select 
                SUM(v.venta_total) as total
            from
                venta v
            where
                date(v.venta_fecha) = '".$lafecha."'
                and v.usuario_id = ".$usuario_id."
        ")->row_array();
        
        return $ventatotal;
    }
    
    function getall_totalventasfecha($fecha_desde, $fecha_hasta, $usuario_id)
    {
        $venta_porusuariototal = $this->db->query("
            SELECT
                SUM(v.venta_total) as todototal
            FROM
                `venta` v
            where
            	date(v.venta_fecha) >= '$fecha_desde'
                and date(v.venta_fecha) <= '$fecha_hasta'
                and v.usuario_id = ".$usuario_id."
        ")->row_array();

        return $venta_porusuariototal;
    }
    function reporte_general($filtro)
    {
        $reporte = $this->db->query(
        "SELECT vs.*, fa.factura_id, fa.factura_numero, cr.credito_cuotainicial
                FROM ventas vs
                LEFT JOIN factura fa on vs.venta_id = fa.venta_id
                LEFT JOIN credito cr on vs.venta_id = cr.venta_id
                WHERE  ".$filtro."
                ORDER BY vs.venta_fecha DESC, vs.venta_hora DESC
        ")->result_array();
        return $reporte;
    }
    function reporte_generalinsumo($filtro)
    {
        $reporte = $this->db->query(
        "select ci.*, u.usuario_nombre, f.factura_id, f.factura_numero, cr.credito_cuotainicial
		from consinsumos ci
                left join usuario u on ci.usuariopsaldo_id = u.usuario_id
                left join factura f on ci.servicio_id = f.servicio_id
                LEFT JOIN credito cr on ci.servicio_id = cr.servicio_id
                where ".$filtro."
                ORDER BY ci.detalleserv_fechaentregado DESC, ci.detalleserv_horaentregado DESC
        ")->result_array();
        return $reporte;
    }
    function reporte_generalproduccion($filtro)
    {
        $reporte = $this->db->query(
        "select pr.*
		from consproduccion pr
                where ".$filtro."
                ORDER BY pr.produccion_fecha DESC, pr.produccion_hora DESC
        ")->result_array();
        return $reporte;
    }
    function reporte_generalfecha_usuario($fecha_inicio, $fecha_fin, $filtro)
    {
        $reporte = $this->db->query(
        "select sum(v.venta_total) as venta_total, v.venta_fecha, z.zona_nombre
            from venta v
            left join cliente c on v.cliente_id = c.cliente_id
            left join zona z on c.zona_id = z.zona_id
        where
            v.venta_fecha >= '".$fecha_inicio."' and 
            v.venta_fecha <= '".$fecha_fin."' 
            ".$filtro."
        group by v.`venta_fecha`
            
        ")->result_array();
        return $reporte;
    }
    function reporte_generalutilidadmes($fecha_inicial, $fecha_final, $filtro)
    {
        $reporte = $this->db->query(
        "SELECT 
                v.venta_fecha,
                sum((d.detalleven_total - d.detalleven_costo*d.detalleven_cantidad)) AS utilidad
              FROM
                venta v
            left join detalle_venta d on v.venta_id = d.venta_id
            left join cliente c on v.cliente_id = c.cliente_id
            left join zona z on c.zona_id = z.zona_id
              WHERE
                v.venta_fecha >= ".$fecha_inicial." and 
                v.venta_fecha <= ".$fecha_final."
                ".$filtro."
              GROUP BY
                v.venta_fecha
        ")->result_array();
        return $reporte;
    }
}

?>