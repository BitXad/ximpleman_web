<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Parametro_model extends CI_Model
{
//    function __construct()
//    {
//        parent::__construct();
//    }
    
    private $session_data = "";
    function __construct()
    {
        parent::__construct();
        $this->load->model('Cliente_model');
        $this->load->model('Compra_model');
        $this->load->model('Categoria_clientezona_model');
        
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }
    }    
    /*
     * Get parametro by parametro_id
     */
    function get_parametro($parametro_id)
    {
        
        if (isset($this->session_data['usuario_id'])){
        
            $usuario_id = $this->session_data['usuario_id'];  
            $sql = "select p.*,m.moneda_tc, m.moneda_descripcion from parametros p, usuario u, moneda m  where p.parametro_id = u.parametro_id and p.moneda_id = m.moneda_id and u.usuario_id = ".$usuario_id;
        
        }else{
            $sql = "select p.*,m.moneda_tc, m.moneda_descripcion  from parametros p, moneda m where p.moneda_id = m.moneda_id and parametro_id = (select min(parametro_id) from parametros)";
        }        
        //return $this->db->get_where('parametros',array('parametro_id'=>$parametro_id))->row_array();
        return $this->db->query($sql)->row_array();
    }
        
    /*
     * Get all parametros
     */
    function get_all_parametro()
    {
         
//        $limit_condition = "";
//        if(isset($params) && !empty($params))
//            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
//        
//        $parametros = $this->db->query("
//           SELECT
//                *
//
//            FROM
//                `parametros`
//
//            WHERE
//                1 = 1
//
//            ORDER BY `parametro_id` DESC
//
//            " . $limit_condition . "
//        ")->result_array();
//        return $parametros;

        if (isset($this->session_data['usuario_id'])){
        
            $usuario_id = $this->session_data['usuario_id'];  
            //$sql = "select p.* from parametros p, usuario u where p.parametro_id = u.parametro_id and u.usuario_id = ".$usuario_id;
            $sql = "select p.*,m.moneda_tc, m.moneda_descripcion from parametros p, usuario u, moneda m  where p.parametro_id = u.parametro_id and p.moneda_id = m.moneda_id and u.usuario_id = ".$usuario_id;
        
        }else{
            
            //$sql = "select p.* from parametros p where parametro_id = (select min(parametro_id) from parametros)";
            $sql = "select p.*,m.moneda_tc, m.moneda_descripcion  from parametros p, moneda m where p.moneda_id = m.moneda_id and parametro_id = (select min(parametro_id) from parametros)";

        }
        
        return $this->db->query($sql)->result_array();
    }
        
    /*
     * Get all parametros
     */
    function get_parametros()
    {         

        if (isset($this->session_data['usuario_id'])){
        
            $usuario_id = $this->session_data['usuario_id'];  
            
            $sql = "select p.*,m.moneda_tc, m.moneda_descripcion from parametros p, usuario u, moneda m  where p.parametro_id = u.parametro_id and p.moneda_id = m.moneda_id and u.usuario_id = ".$usuario_id;
        
        }else{
            
            $sql = "select p.*,m.moneda_tc, m.moneda_descripcion  from parametros p, moneda m where p.moneda_id = m.moneda_id and parametro_id = (select min(parametro_id) from parametros)";            

        }        
        $parametros = $this->db->query($sql)->result_array();
        return $parametros;
        
    }
 
        
    /*
     * function to add new parametro
     */
    function add_parametro($params)
    {
        $this->db->insert('parametros',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update parametro
     */
    function update_parametro($parametro_id,$params)
    {
        $this->db->where('parametro_id',$parametro_id);
        return $this->db->update('parametros',$params);
    }
    
    /*
     * function to delete parametro
     */
    function delete_parametro($parametro_id)
    {
        return $this->db->delete('parametros',array('parametro_id'=>$parametro_id));
    }
    /*
     * Get parametro servicio
     */
    function get_parametro_servicio()
    {
        
        
//        $parametro = $this->db->query("
//           SELECT
//                p.parametro_diagnostico, p.parametro_solucion, p.parametro_diasentrega
//            FROM
//                parametros p
//            WHERE
//                1 = 1
//        ")->row_array();
//  return $parametro;

        if (isset($this->session_data['usuario_id'])){
        
            $usuario_id = $this->session_data['usuario_id'];  
            $sql = "select p.parametro_diagnostico, p.parametro_solucion, p.parametro_diasentrega from parametros p, usuario u where p.parametro_id = u.parametro_id and u.usuario_id = ".$usuario_id;
        
        }else{
            
            $sql = "select p.parametro_diagnostico, p.parametro_solucion, p.parametro_diasentrega from parametros p where parametro_id = (select min(parametro_id) from parametros)";

        }


        
        return $this->db->query($sql)->row_array();        
              
    }
    /* muestra todos los parametros */
    function get_all_parametros()
    {
        $sql = "select p.*, m.moneda_descripcion
                from parametros p
                left join moneda m on p.moneda_id = m.moneda_id
            ";
        return $this->db->query($sql)->result_array();
    }
    /*
     * Obtiene este parametro dado un parametro_id
     */
    function get_esteparametro($parametro_id)
    {
        $sql = "select p.*, m.moneda_tc, m.moneda_descripcion from parametros p, moneda m where p.moneda_id = m.moneda_id and parametro_id = $parametro_id";
        return $this->db->query($sql)->row_array();
    }
    /**
     * Obtener la modena_id de paramtros que se usa en el sistema
     */
    function get_moneda(){
        return $this->db->query(
            "SELECT p.moneda_id, m.moneda_descripcion,m.moneda_tc 
            from parametros p 
            left join moneda m on m.moneda_id = p.moneda_id
            where p.parametro_id = 1"
            )->row_array();
    }
}
