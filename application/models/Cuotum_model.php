<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Cuotum_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get cuotum by cuota_id
     */
    function get_cuotum($cuota_id)
    {
        $cuotum = $this->db->query("
            SELECT
                *

            FROM
                `cuota`

            WHERE
                `cuota_id` = ?
        ",array($cuota_id))->row_array();

        return $cuotum;
    }
        
    /*
     * Get all cuota
     */
    function get_all_cuota()
    {
        $cuota = $this->db->query("
            SELECT
                *

            FROM
                `cuota`

            WHERE
                1 = 1

            ORDER BY `cuota_id` DESC
        ")->result_array();

        return $cuota;
    }

    function get_cuota_compra()
    {
        $cuota = $this->db->query("
            SELECT
                c.*, cr.compra_id

            FROM
                cuota c, credito cr

            WHERE
                c.credito_id=cr.credito_id
                and cr.compra_id>0
                and c.estado_id=9

            ORDER BY `cuota_id` 
        ")->result_array();

        return $cuota;
    }

    function get_cuota_venta()
    {
        $cuota = $this->db->query("
            SELECT
                c.*, cr.venta_id

            FROM
                cuota c, credito cr

            WHERE
                c.credito_id=cr.credito_id
                and cr.venta_id>0
                and c.estado_id=9

            ORDER BY `cuota_id` 
        ")->result_array();

        return $cuota;
    }

     function get_all_deuda($credito_id)
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $credito = $this->db->query("
                SELECT 
                `c`.*,
                `p`.*,
                `co`.*,
                `k`.*,
                `e`.*,
                `u`.`usuario_nombre`,
                `fp`.`forma_nombre`, b.banco_nombre
            FROM `credito` as c 
                LEFT JOIN `compra` as co ON c.`compra_id` = co.`compra_id`
                LEFT JOIN `proveedor` as p ON  p.`proveedor_id` = co.`proveedor_id`
                LEFT JOIN `cuota` as k ON k.`credito_id` = c.`credito_id`
                LEFT JOIN `estado` as e ON k.`estado_id` = e.`estado_id`
                LEFT JOIN `usuario` as u ON k.`usuario_id` = u.`usuario_id`
                LEFT JOIN `forma_pago` as fp on `fp`.`forma_id` = k.`forma_id`
                left join banco b on b.banco_id = k.`banco_id`
            WHERE
                c.`credito_id` = k.`credito_id` AND
                ".$credito_id." = k.credito_id

            ORDER BY `cuota_numcuota` ASC

            " . $limit_condition . "
        ")->result_array();

        return $credito;
    }
        
    function get_pendientes($credito_id)
    {
        $credito = $this->db->query("
            SELECT
                k.*
            FROM cuota k
            WHERE
             
                 k.credito_id = ".$credito_id." 
                 and k.estado_id = 8

            ORDER BY `cuota_id` ASC

          
        ")->result_array();

        return $credito;
    }

    function get_all_cuentas($credito_id){
        $credito = $this->db->query(
            "SELECT
                m.moneda_tc ,c.*, p.*, ve.*, k.cuota_fecha as fechacu, k.*, e.*, u.usuario_nombre, f.factura_id, fp.forma_nombre, b.banco_nombre
            FROM cuota k
            LEFT JOIN credito c on k.credito_id = c.credito_id 
            LEFT JOIN venta ve on c.venta_id = ve.venta_id
            LEFT JOIN cliente p on p.cliente_id = ve.cliente_id
            LEFT JOIN estado e on k.estado_id = e.estado_id
            LEFT JOIN usuario u on k.usuario_id = u.usuario_id
            LEFT JOIN factura f on k.cuota_id=f.cuota_id
            LEFT JOIN forma_pago fp on k.`forma_id` = fp.forma_id
            left join moneda m on m.moneda_id != ve.moneda_id  
            left join banco b on b.banco_id = k.banco_id  
            where k.credito_id = $credito_id
            and m.moneda_id = 2
            ORDER BY k.cuota_numcuota, `cuota_id` ASC")->result_array();

        return $credito;
    }
    
    function get_all_cuenta_serv($credito_id){
        $credito = $this->db->query(
            "SELECT
                c.*, p.*, ve.*, k.cuota_fecha as fechacu, k.*, e.*, u.usuario_nombre, f.factura_id, fp.forma_nombre,b.banco_id, b.banco_nombre 
            FROM
                cuota k
            LEFT JOIN credito c on k.credito_id = c.credito_id 
            LEFT JOIN servicio ve on c.servicio_id = ve.servicio_id
            LEFT JOIN cliente p on p.cliente_id = ve.cliente_id
            LEFT JOIN estado e on k.estado_id = e.estado_id
            LEFT JOIN usuario u on k.usuario_id = u.usuario_id
            LEFT JOIN factura f on k.cuota_id=f.cuota_id
            LEFT JOIN forma_pago fp on k.`forma_id` = fp.forma_id
            LEFT JOIN banco b on b.banco_id = k.banco_id
            WHERE k.credito_id = $credito_id
            ORDER BY `cuota_id` ASC")->result_array();
        return $credito;
    }
    function get_recibo_deuda($cuota_id)
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $cuota_id = $this->db->query("
            SELECT
                c.*, p.*, co.*, k.*, e.*

            FROM
                credito c, proveedor p, compra co, cuota k, estado e

            WHERE
                k.credito_id = c.credito_id 
                and c.compra_id = co.compra_id
                and p.proveedor_id = co.proveedor_id
                and k.estado_id = e.estado_id
                and ".$cuota_id." = k.cuota_id

            ORDER BY `cuota_numcuota` ASC

            " . $limit_condition . "
        ")->result_array();

        return $cuota_id;
    }
    function get_recibo_cuenta($cuota_id)
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $cuota_id = $this->db->query("
            SELECT
                c.*, p.*, co.*, k.*, e.*

            FROM
                credito c, cliente p, venta co, cuota k, estado e

            WHERE
                k.credito_id = c.credito_id 
                and c.venta_id = co.venta_id
                and p.cliente_id = co.cliente_id
                and k.estado_id = e.estado_id
                and ".$cuota_id." = k.cuota_id

            ORDER BY `cuota_numcuota` ASC

            " . $limit_condition . "
        ")->result_array();

        return $cuota_id;
    }

    function get_recibo_cuentaServ($cuota_id)
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $cuota_id = $this->db->query("
            SELECT
                c.*, p.*, co.*, k.*, e.*

            FROM
                credito c, cliente p, servicio co, cuota k, estado e

            WHERE
                k.credito_id = c.credito_id 
                and c.servicio_id = co.servicio_id
                and p.cliente_id = co.cliente_id
                and k.estado_id = e.estado_id
                and ".$cuota_id." = k.cuota_id

            ORDER BY `cuota_numcuota` ASC

            " . $limit_condition . "
        ")->result_array();

        return $cuota_id;
    }
    
    /*
     * function to add new cuotum
     */
    function add_cuotum($params)
    {
        $this->db->insert('cuota',$params);
        return $this->db->insert_id();
    }
    function numero()
    {
        
        $num = $this->db->query("SELECT * FROM parametros")->result_array();
        return $num;
    }  

    function interes($credito_id)
    {
        
     
        $credito = $this->db->query("
            SELECT
                credito_interesproc

            FROM
                credito

            WHERE
                `credito_id` = ?
        ",array($credito_id))->row_array();

        return $credito;
    } 

    function get_tipo($cuota_id)
    {
        $cuotum = $this->db->query("
            SELECT
                cr.venta_id, cr.servicio_id, cu.credito_id

            FROM
                credito cr, cuota cu

            WHERE
            cr.credito_id=cu.credito_id
            and cu.cuota_id = ".$cuota_id."
        ")->row_array();

        return $cuotum;
    }
    
    /*
     * function to update cuotum
     */
    function update_cuotum($cuota_id,$params)
    {
        $this->db->where('cuota_id',$cuota_id);
        return $this->db->update('cuota',$params);
    }
    
    /*
     * function to delete cuotum
     */
    function delete_cuotum($cuota_id)
    {
        return $this->db->delete('cuota',array('cuota_id'=>$cuota_id));
    }
    
    /* funcion para modificar todas las cuotas de un credito (de compras) */
    function updatecuotum_decredito($credito_id,$params)
    {
        $this->db->where('credito_id',$credito_id);
        return $this->db->update('cuota',$params);
    }
    /* Funcion para obtener todos las ventas con mora */
    function get_moras($consulta_usuario = "",$condicion1="",$condicion2=""){
        return $this->db->query(
            "SELECT c.credito_id,c.credito_numpagos , min(c2.cuota_numcuota),count(c2.cuota_id) as cuotas, m.dias_mora,
                if(v.venta_id is null,s.servicio_id ,v.venta_id) as venta_id , if(v.venta_id is null,'Servicio' ,'Venta') as razon,
                if(c3.cliente_nombre is null,if(c6.cliente_nombre is null,'No asignado cliente', c6.cliente_nombre),c3.cliente_nombre) as cliente_nombre,c.credito_monto,
                if(c3.cliente_celular is null,if(c6.cliente_celular is null,'No celular', c6.cliente_celular),c3.cliente_celular) as cliente_celular,
                if((c2.cuota_interes*m.dias_mora)/30 > 0,(c2.cuota_interes*m.dias_mora)/30,0) as multa,1,c2.*
            from credito c 
            left join (
            select if(if(adeu.cuotas_adeudadas is null,0,adeu.cuotas_adeudadas) - ul_pago.ultimo_pago_cuota > 0, if(adeu.cuotas_adeudadas is null,0,adeu.cuotas_adeudadas) - ul_pago.ultimo_pago_cuota,1) as deudas_mora 
                ,if(if(adeu.cuotas_adeudadas is null,0,adeu.cuotas_adeudadas ) - ul_pago.ultimo_pago_cuota > 0, (if(adeu.cuotas_adeudadas is null,0,adeu.cuotas_adeudadas)-ul_pago.ultimo_pago_cuota)*cu.cuota_total ,cu.cuota_total    ) as monto_deuda	
                ,if(adeu.cuotas_adeudadas is null,0,adeu.cuotas_adeudadas) as sig_cuota,ul_pago.ultimo_pago_cuota 
                ,cu.*
                from cuota cu 
                right join (
                    select min(cu2.cuota_numcuota) as ultimo_pago_cuota, cu2.credito_id
                    from cuota cu2  
                    where cu2.estado_id = 8
                    group by cu2.credito_id
                ) as ul_pago on ul_pago.credito_id = cu.credito_id
                left join (
                    select min(cu3.cuota_numcuota) as cuotas_adeudadas, cu3.credito_id, cu3.estado_id 
                    from cuota cu3
                    where cu3.estado_id = 8
                    and cu3.cuota_fechalimite > now() 
                    group by cu3.credito_id
                ) as adeu on adeu.credito_id = cu.credito_id
                where cu.cuota_fechalimite < now()
                and cu.estado_id = 8
                group by cu.credito_id
            ) c2 on c2.credito_id = c.credito_id
            left join (
                select c5.cuota_id,if(datediff(now(),c5.cuota_fechalimite) is null, 0, datediff(now(),c5.cuota_fechalimite)) as dias_mora
                    ,if(c5.cuota_fechalimite < now(),count(c5.cuota_fechalimite),0) as cuotas_adeudadas, c5.cuota_fechalimite 
                from credito c4 
                left join cuota c5 on c5.credito_id = c4.credito_id
                where c5.estado_id = 8
                and c5.cuota_fechalimite <= now()
                group by c5.credito_id
            ) as m on m.cuota_id = c2.cuota_id 
            left join venta v on c.venta_id = v.venta_id 
            left join servicio s on c.servicio_id = s.servicio_id
            left join cliente c3 on v.cliente_id = c3.cliente_id
            left join cliente c6 on s.cliente_id = c6.cliente_id
            left join detalle_venta dv on dv.venta_id = v.venta_id
            left join producto p on p.producto_id = dv.producto_id 
            where c.venta_id is not null
            and c.estado_id = 8
            and c2.monto_deuda > 0
            $condicion1
            $condicion2
            and c2.cuota_fechalimite < now()
            $consulta_usuario
            group by c.credito_id
            order by c3.cliente_nombre, c2.cuota_numcuota, c.credito_id"
        )->result_array();
    }
    // - cuotas adeudadas cantidad max 3 y el total de las cuotas en reporte de mora
    
    function get_detallesventa($venta_id)
    {
        $venta = $this->db->query("
            SELECT
                dv.producto_id, dv.`detalleven_cantidad`, p.producto_nombre, cp.`categoria_nombre`
            FROM
                detalle_venta dv
            left join producto p on dv.producto_id = p.producto_id
            left join categoria_producto cp on p.`categoria_id` = cp.`categoria_id`
            WHERE
                dv.`venta_id` = $venta_id
            ORDER BY dv.`detalleven_id` ASC
        ")->result_array();
        return $venta;
    }
}
