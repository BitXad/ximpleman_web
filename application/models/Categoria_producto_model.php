<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Categoria_producto_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get categoria_producto by categoria_id
     */
    function get_categoria_producto($categoria_id)
    {
        $categoria_producto = $this->db->query("
            SELECT
                *

            FROM
                `categoria_producto`

            WHERE
                `categoria_id` = ?
        ",array($categoria_id))->row_array();

        return $categoria_producto;
    }
    
    /*
     * Get all categoria_producto count
     */
    function get_all_categoria_producto_count()
    {
        $categoria_producto = $this->db->query("
            SELECT
                count(*) as count

            FROM
                `categoria_producto`
        ")->row_array();

        return $categoria_producto['count'];
    }
        
    /*
     * Get all categoria_producto
     */
    function get_all_categoria_producto()
    {
        $categoria_producto = $this->db->query("
            SELECT
                *
            FROM
                `categoria_producto`
            WHERE
                1 = 1
            ORDER BY `categoria_nombre`
        ")->result_array();

        return $categoria_producto;
    }
        
    /*
     * function to add new categoria_producto
     */
    function add_categoria_producto($params)
    {
        $this->db->insert('categoria_producto',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update categoria_producto
     */
    function update_categoria_producto($categoria_id,$params)
    {
        $this->db->where('categoria_id',$categoria_id);
        return $this->db->update('categoria_producto',$params);
    }
    
    /*
     * function to delete categoria_producto
     */
    function delete_categoria_producto($categoria_id)
    {
        return $this->db->delete('categoria_producto',array('categoria_id'=>$categoria_id));
    }
    
     /*
     * Get all categoria_producto
     */
    function get_all_categoria_de_producto()
    {
        $categoria_producto = $this->db->query("
            SELECT
                *

            FROM
                `categoria_producto`

            WHERE
                1 = 1

            ORDER BY `categoria_nombre`

        ")->result_array();

        return $categoria_producto;
    }
    /*
     * Get all categoria_producto
     */
    function getall_ventapor_categoria($fecha_desde, $fecha_hasta)
    {
        $venta_categoriap = $this->db->query("
            SELECT
                vs.categoria_id, cp.`categoria_nombre`, SUM(vs.detalleven_total) as 'totalventas',
                SUM(vs.`detalleven_costo`* vs.`detalleven_cantidad`) as totalcosto
            FROM
                `ventas` vs
            left join `categoria_producto` cp on vs.categoria_id = cp.categoria_id
            where
            	date(vs.venta_fecha) >= '$fecha_desde'
                and date(vs.venta_fecha) <= '$fecha_hasta'
            group by cp.`categoria_id`
        ")->result_array();

        return $venta_categoriap;
    }
    /* usado en reporte de vetnas por categoria */
    function get_all_categoria_ventaproducto_count($fecha_desde, $fecha_hasta)
    {
        $categoria_producto = $this->db->query("
            SELECT
                `vs`.categoria_id
            FROM
                `ventas` vs
            where
            	date(vs.venta_fecha) >= '$fecha_desde'
                and date(vs.venta_fecha) <= '$fecha_hasta'
            group by vs.`categoria_id`
        ")->result_array();

        return $categoria_producto;
    }
    /* usado en reporte de ventas por usuario */
    function get_all_usuario_ventaproducto_count($fecha_desde, $fecha_hasta, $elusuario)
    {
        $categoria_producto = $this->db->query("
            SELECT
                `vs`.usuario_id
            FROM
                `ventas` vs
            where
            	date(vs.venta_fecha) >= '$fecha_desde'
                and date(vs.venta_fecha) <= '$fecha_hasta'
                ".$elusuario." 
            group by vs.`usuario_id`
        ")->result_array();

        return $categoria_producto;
    }
    /*
     * Get all categoria_producto
     */
    function getall_ventapor_usuario($fecha_desde, $fecha_hasta, $elusuario)
    {
        $venta_porusuario = $this->db->query("
            SELECT
                vs.usuario_id, vs.`usuario_nombre`, SUM(vs.detalleven_total) as 'totalventas',
                SUM(vs.`detalleven_costo`* vs.`detalleven_cantidad`) as totalcosto,
                avg(vs.detalleven_tc) as tipo_cambio
            FROM
                `ventas` vs
            where
            	date(vs.venta_fecha) >= '$fecha_desde'
                and date(vs.venta_fecha) <= '$fecha_hasta'
                ".$elusuario." 
            group by vs.`usuario_id`
            order by totalventas desc
        ")->result_array();

        return $venta_porusuario;
    }
}
