<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Clasificador_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get clasificador by clasificador_id
     */
    function get_clasificador($clasificador_id)
    {
        $clasificador = $this->db->query("
            SELECT
                *

            FROM
                `clasificador`

            WHERE
                `clasificador_id` = ?
        ",array($clasificador_id))->row_array();

        return $clasificador;
    }
    
    /*
     * Get all clasificador count
     */
    function get_all_clasificador_count()
    {
        $clasificador = $this->db->query("
            SELECT
                count(*) as count

            FROM
                `clasificador`
        ")->row_array();

        return $clasificador['count'];
    }
        
    /*
     * Get all clasificador
     */
    function get_all_clasificador($params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $clasificador = $this->db->query("
            SELECT
                *

            FROM
                `clasificador`

            WHERE
                1 = 1

            ORDER BY `clasificador_id` DESC

            " . $limit_condition . "
        ")->result_array();

        return $clasificador;
    }
        
    /*
     * function to add new clasificador
     */
    function add_clasificador($params)
    {
        $this->db->insert('clasificador',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update clasificador
     */
    function update_clasificador($clasificador_id,$params)
    {
        $this->db->where('clasificador_id',$clasificador_id);
        return $this->db->update('clasificador',$params);
    }
    
    /*
     * function to delete clasificador
     */
    function delete_clasificador($clasificador_id)
    {
        return $this->db->delete('clasificador',array('clasificador_id'=>$clasificador_id));
    }
    /*
     * Get all clasificador ASC
     */
    function get_all_clasificador_asc($params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $clasificador = $this->db->query("
            SELECT
                *

            FROM
                `clasificador`

            WHERE
                1 = 1

            ORDER BY `clasificador_id` ASC

            " . $limit_condition . "
        ")->result_array();

        return $clasificador;
    }
    /*
     * Get all clasificadores en orden alfabetico
     */
    function get_all_clasificadores()
    {
        $clasificador = $this->db->query("
            SELECT
                *
            FROM
                `clasificador`
            WHERE
                1 = 1
            ORDER BY `clasificador_nombre`
        ")->result_array();

        return $clasificador;
    }
    
    function get_clasificadorinventario()
    {
        $sql = "select c.*,if(v.ventas>0,v.ventas,0)as ventas from
                (
                select  d.producto_id, t.clasificador_id, sum(t.detalleclas_cantidad) as compras
                from compra c, detalle_compra d, detalle_clasificador t
                where 
                c.compra_id = d.compra_id and
                d.detallecomp_id = t.detallecomp_id
                group by t.producto_id,t.clasificador_id
                ) as c 
                left join 
                (
                select d.producto_id, d.clasificador_id, sum(d.detalleven_cantidad) as ventas
                from venta v, detalle_venta d
                where v.venta_id = d.venta_id and
                d.clasificador_id>0
                group by d.producto_id, d.clasificador_id

                ) as v on c.producto_id = v.producto_id";
        $producto = $this->db->query($sql)->result_array();
        
        //$producto = $this->db->query($sql,array('credito_id'))->row_array();
        return $producto;
    }
    function get_clasificadorinventario_parametro($parametro)
    {
        
        $sql = "select c.*,if(v.ventas>0,v.ventas,0)as ventas from
                (
                select  d.producto_id, t.clasificador_id, sum(t.detalleclas_cantidad) as compras
                from compra c, detalle_compra d, detalle_clasificador t
                where 
                c.compra_id = d.compra_id and
                d.detallecomp_id = t.detallecomp_id
                group by t.producto_id,t.clasificador_id
                ) as c 
                left join 
                (
                select d.producto_id, d.clasificador_id, sum(d.detalleven_cantidad) as ventas
                from venta v, detalle_venta d
                where v.venta_id = d.venta_id and
                d.clasificador_id>0
                group by d.producto_id, d.clasificador_id

                ) as v on c.producto_id = v.producto_id
                
            /*select  p.*,c.categoria_nombre FROM inventario p
                left join categoria_producto c on c.categoria_id = p.categoria_id
                WHERE p.estado_id=1 and p.producto_nombre like '%".$parametro."%' or p.producto_codigobarra like '%".$parametro."%' or p.producto_codigo like '%".$parametro."%'
                GROUP BY p.categoria_id, p.producto_id
                ORDER By c.categoria_nombre, p.producto_nombre asc*/
                ";
        
        $producto = $this->db->query($sql)->result_array();
        return $producto;

    }
    
}
