<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Detalle_serv_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get detalle_serv by detalleserv_id
     */
    function get_detalle_serv($detalleserv_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                ds.*, ss.subcatserv_descripcion, fp.forma_nombre, tt.tipotrans_nombre,
                c.credito_cuotainicial, c.credito_monto
            FROM
                detalle_serv ds
            LEFT JOIN subcategoria_servicio ss on ds.subcatserv_id = ss.subcatserv_id
            LEFT JOIN forma_pago fp on ds.forma_id = fp.forma_id
            LEFT JOIN tipo_transaccion tt on ds.tipotrans_id = tt.tipotrans_id
            LEFT JOIN credito c on ds.servicio_id = c.servicio_id
            WHERE
                `detalleserv_id` = ?
        ",array($detalleserv_id))->row_array();

        return $detalle_serv;
    }


    
    /*
     * Get all detalle_serv count
     */
    function get_all_detalle_serv_count()
    {
        $detalle_serv = $this->db->query("
            SELECT
                count(*) as count

            FROM
                `detalle_serv`
        ")->row_array();

        return $detalle_serv['count'];
    }
        
    /*
     * Get all detalle_serv
     */
    function get_all_detalle_serv($params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $detalle_serv = $this->db->query("
            SELECT
                *

            FROM
                `detalle_serv`

            WHERE
                1 = 1

            ORDER BY `detalleserv_id` DESC

            " . $limit_condition . "
        ")->result_array();

        return $detalle_serv;
    }
        
    /*
     * function to add new detalle_serv
     */
    function add_detalle_serv($params)
    {
        $this->db->insert('detalle_serv',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update detalle_serv
     */
    function update_detalle_serv($detalleserv_id,$params)
    {
        $this->db->where('detalleserv_id',$detalleserv_id);
        return $this->db->update('detalle_serv',$params);
    }
    
    /*
     * function to delete detalle_serv
     */
    function delete_detalle_serv($detalleserv_id)
    {
        return $this->db->delete('detalle_serv',array('detalleserv_id'=>$detalleserv_id));
    }
    /*
     * Eliminar todos los detalles de un servicio
     */
    function delete_detalle_serv_all($servicio_id)
    {
        return $this->db->delete('detalle_serv',array('servicio_id'=>$servicio_id));
    }
    
    /* *****************Normaliza la fecha; es decir lo convierte en formato Y-m-d*********************** */
    function normalize_date($date){
         if(!empty($date)){
              return implode("-", array_reverse(explode("/", $date)));
                 //$var = explode('/',str_replace('-','/',$date));
                // return "$var[2]-$var[1]-$var[0]";
         }else{
             return "0000-00-00";
         }
	 	
    }
    
    /*
     * Obtiene todos los detalles de un servicio especifico(servicio_id)
     */
    function get_detalle_serv_all($servicio_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                ds.*, r.usuario_nombre as respusuario_nombre, u.usuario_nombre, e.estado_id as esteestado,
                e.estado_color, e.estado_descripcion, p.procedencia_descripcion,
                cs.catserv_descripcion, scs.subcatserv_descripcion, ct.cattrab_descripcion,
                tu.tiempouso_descripcion

            FROM
                detalle_serv ds
            LEFT JOIN estado e on ds.estado_id = e.estado_id
            LEFT JOIN usuario r on ds.responsable_id = r.usuario_id
            LEFT JOIN usuario u on ds.usuario_id = u.usuario_id
            LEFT JOIN categoria_servicio cs on ds.catserv_id = cs.catserv_id
            LEFT JOIN servicio s on ds.servicio_id = s.servicio_id
            LEFT JOIN subcategoria_servicio scs on ds.subcatserv_id = scs.subcatserv_id
            LEFT JOIN procedencia p on ds.procedencia_id = p.procedencia_id
            LEFT JOIN categoria_trabajo ct on ds.cattrab_id = ct.cattrab_id
            LEFT JOIN tiempo_uso tu on ds.tiempouso_id = tu.tiempouso_id

            WHERE
                ds.servicio_id = ".$servicio_id."
               
            ORDER BY `detalleserv_id` DESC
            
            /* SELECT
                ds.*, r.usuario_nombre as respusuario_nombre, u.usuario_nombre, e.estado_id as esteestado,
                e.estado_color, e.estado_descripcion, p.procedencia_descripcion,
                cs.catserv_descripcion, scs.subcatserv_descripcion, ct.cattrab_descripcion,
                tu.tiempouso_descripcion

            FROM
                detalle_serv ds, estado e, usuario r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and ds.responsable_id = r.usuario_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.servicio_id = ".$servicio_id."
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id

            ORDER BY `detalleserv_id` DESC */

        ")->result_array();

        return $detalle_serv;
    }
    
    /*
     * ******************Funcion que busca a todos los Productos que tengan un mismo CODIGO**********************
     */
    function buscar_detalle_serv_codigo($codigo)
    {
        $detalle_serv = $this->db->query("
            SELECT
                ds.catserv_id
            FROM
                detalle_serv ds
            WHERE
                ds.detalleserv_codigo =  '".$codigo."'

        ")->result_array();

        return $detalle_serv;
    }
    
    function sumarmontos($servicio_id){
        $sumatotal = $this->db->query("
            SELECT
                  sum(detalleserv_total) as total,
                  sum(detalleserv_acuenta) as acuenta,
                  sum(detalleserv_saldo) as saldo
            FROM 
                detalle_serv
            WHERE
                 servicio_id = '$servicio_id'

        ")->row_array();

        return $sumatotal;
    }
    
    function anular_detalle_serv($servicio_id,$params)
    {
        $this->db->where('servicio_id',$servicio_id);
        return $this->db->update('detalle_serv',$params);
    }
    /*
     * retorna ids de estado deun servicio menos los anulados
     */
    function get_ids_estado_detalle_serv($servicio_id)
    {
        $resestado = $this->db->query("
            SELECT d.`estado_id`
            FROM detalle_serv d
            WHERE 
                 d.`servicio_id` = '$servicio_id'
                 and d.`estado_id` <> 4

        ")->result_array();

        return $resestado;
    }
    /*
     * Obtiene todos los Ids de detalles de un servicio especifico(servicio_id)
     * que no esten Anulados (estado ANULADO = id 4)
     */
    function get_detalle_serv_menos_all($servicio_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                *

            FROM
                detalle_serv ds, estado e

            WHERE
                ds.estado_id = e.estado_id
                and e.estado_id <> 4
                and ds.servicio_id = ".$servicio_id."

        ")->result_array();

        return $detalle_serv;
    }
    /*
     * Obtiene todos los Ids de detalles de un servicio especifico(servicio_id)
     * que esten terminados (estado TERMINADO = id 6)
     */
    function get_detalle_serv_all_terminado($servicio_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                *

            FROM
                detalle_serv ds, estado e

            WHERE
                ds.estado_id = e.estado_id
                and e.estado_id = 6
                and ds.servicio_id = ".$servicio_id."

        ")->result_array();

        return $detalle_serv;
    }
    /*
     * Get all detalle_serv count con un estado especifico(estado_id)
     */
    function get_all_detalle_serv_count_estado($estado_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                count(*) as count
            FROM
                detalle_serv ds, estado e, responsable r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and ds.estado_id = '$estado_id'
                and ds.responsable_id = r.responsable_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id

            ORDER BY `detalleserv_id` DESC
        ")->row_array();

        return $detalle_serv['count'];
    }
    /*
     * Obtiene todos los detalles de servicio dado un estado especifico(estado_id)
     */
    function get_detalle_serv_all_for_estado($estado_id, $params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $detalle_serv = $this->db->query("
            SELECT
                *, e.estado_id as esteestado

            FROM
                detalle_serv ds, estado e, responsable r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and ds.estado_id = '$estado_id'
                and ds.responsable_id = r.responsable_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id

            ORDER BY `detalleserv_id` DESC

            " . $limit_condition . "
        ")->result_array();

        return $detalle_serv;
    }
    /*
     * Get all detalle_serv count con una categoria(tipo) de trabajo especifico(cattrab_id)
     */
    function get_all_detalle_serv_count_ctrabajo($cattrab_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                count(*) as count
            FROM
                detalle_serv ds, estado e, responsable r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and ds.cattrab_id = '$cattrab'
                and ds.responsable_id = r.responsable_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id

            ORDER BY `detalleserv_id` DESC
        ")->row_array();

        return $detalle_serv['count'];
    }
    /*
     * Obtiene todos los detalles de servicios dado la categoria (tipo) de trabajo(cattrab_id)
     */
    function get_detalle_serv_all_for_ctrabajo($cattrab, $params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $detalle_serv = $this->db->query("
            SELECT
                *, e.estado_id as esteestado

            FROM
                detalle_serv ds, estado e, responsable r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and ds.cattrab_id = '$cattrab'
                and ds.responsable_id = r.responsable_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id

            ORDER BY `detalleserv_id` DESC

            " . $limit_condition . "
        ")->result_array();

        return $detalle_serv;
    }
    /*
     * Get all detalle_serv count con una categoria(tipo) de servicio especifico(catserv_id)
     */
    function get_all_detalle_serv_count_cservicio($catserv_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                count(*) as count

            FROM
                detalle_serv ds, estado e, responsable r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and ds.`catserv_id` = '$catserv_id'
                and ds.responsable_id = r.responsable_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id

            ORDER BY `detalleserv_id` DESC
        ")->row_array();

        return $detalle_serv['count'];
    }
    /*
     * Obtiene todos los detalles de servicios dado la categoria (tipo) de trabajo(cattrab_id)
     */
    function get_detalle_serv_all_for_cservicio($catserv_id, $params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $detalle_serv = $this->db->query("
            SELECT
                *, e.estado_id as esteestado

            FROM
                detalle_serv ds, estado e, responsable r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and ds.`catserv_id` = '$catserv_id'
                and ds.responsable_id = r.responsable_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id

            ORDER BY `detalleserv_id` DESC

            " . $limit_condition . "
        ")->result_array();

        return $detalle_serv;
    }
    
    /*
     * cuenta el numero de subcategorias
     */
    function get_all_subcatserv_count($parametro)
    {
        $detalle_serv = $this->db->query("
            SELECT
                count(*) as count

            FROM
                detalle_serv ds, estado e, responsable r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and(ds.detalleserv_codigo like '%".$parametro."%'
                    or scs.subcatserv_descripcion like '%".$parametro."%')
                and ds.responsable_id = r.responsable_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id

        ")->row_array();

        return $detalle_serv['count'];
    }
    /*
     * Obtiene todas las coincidencias de subcategorias de detalles de servicios
     */
    function get_all_subcatserv($parametro, $params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $detalle_serv = $this->db->query("
            SELECT
                ds.*, e.estado_id as esteestado, e.estado_color, e.estado_descripcion, r.responsable_nombres, r.responsable_apellidos,
                u.usuario_nombre, cs.catserv_descripcion, s.servicio_id, scs.subcatserv_descripcion,
                p.procedencia_descripcion, ct.cattrab_descripcion, tu.tiempouso_descripcion

            FROM
                detalle_serv ds, estado e, responsable r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and(ds.detalleserv_codigo like '%".$parametro."%'
                    or scs.subcatserv_descripcion like '%".$parametro."%')
                and ds.responsable_id = r.responsable_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id

            ORDER BY `detalleserv_id` DESC

            " . $limit_condition . "
        ")->result_array();

        return $detalle_serv;
    }
    
    /*
     * cuenta el numero de coincidencias de un cliente
     */
    function get_all_cliente_count($parametro)
    {
        $detalle_serv = $this->db->query("
            SELECT
                count(*) as count

            FROM
                cliente c, servicio s, estado e

            WHERE
                s.estado_id = e.estado_id
                and c.cliente_nombre like '%".$parametro."%'
                and c.cliente_id = s.cliente_id

        ")->row_array();

        return $detalle_serv['count'];
    }
    /*
     * Obtiene todas las coincidencias de subcategorias de detalles de servicios
     */
    function get_all_cliente($parametro)
    {
        $detalle_serv = $this->db->query("
            SELECT
                s.*, c.cliente_nombre, c.cliente_codigo, c.cliente_ci,
                c.cliente_nit, c.cliente_telefono, e.estado_color, e.estado_descripcion

            FROM
                cliente c, servicio s, estado e

            WHERE
                s.estado_id = e.estado_id
                and (c.cliente_nombre like '%".$parametro."%'
                  or c.cliente_codigo like '%".$parametro."%'
                  or c.cliente_ci like '%".$parametro."%')
                and c.cliente_id = s.cliente_id

            ORDER BY `cliente_id` DESC
            
        ")->result_array();

        return $detalle_serv;
    }
    /*
     * cuenta el numero de coincidencias de un cliente
     */
    function get_kardexclienteservicio_count($cliente_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                count(*) as count

            FROM
                cliente c, servicio s, estado e

            WHERE
                s.estado_id = e.estado_id
                and c.cliente_id = s.cliente_id
                and s.cliente_id = $cliente_id

        ")->row_array();

        return $detalle_serv['count'];
    }
    
    /*
     * Obtiene todas las coincidencias de subcategorias de detalles de servicios
     */
    function get_kardexclienteservicio($cliente_id, $params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $detalle_serv = $this->db->query("
            SELECT
                s.*, c.cliente_nombre, c.cliente_codigo, c.cliente_ci,
                c.cliente_nit, c.cliente_telefono, e.estado_color, e.estado_descripcion

            FROM
                cliente c, servicio s, estado e

            WHERE
                s.estado_id = e.estado_id
                and c.cliente_id = s.cliente_id
                and s.cliente_id = $cliente_id

            ORDER BY `cliente_id` DESC

            " . $limit_condition . "
        ")->result_array();

        return $detalle_serv;
    }
    /*
     * Busca los detalles por fechas..
     */
    function get_busqueda_detservicio_parametro($filtro)
    {
        $servicio = $this->db->query("
            SELECT
                *, e.estado_id as esteestado

            FROM
                detalle_serv ds, estado e, responsable r, usuario u, categoria_servicio cs, servicio s,
                subcategoria_servicio scs, procedencia p, categoria_trabajo ct, tiempo_uso tu

            WHERE
                ds.estado_id = e.estado_id
                and ds.responsable_id = r.responsable_id
                and ds.usuario_id = u.usuario_id
                and ds.catserv_id = cs.catserv_id
                and ds.servicio_id = s.servicio_id
                and ds.subcatserv_id = scs.subcatserv_id
                and ds.procedencia_id = p.procedencia_id
                and ds.cattrab_id = ct.cattrab_id
                and ds.tiempouso_id = tu.tiempouso_id
                ".$filtro."

            ORDER BY `detalleserv_id` DESC
        ")->result_array();

        return $servicio;
    }
    /*
     * Get detalle_serv by detalleserv_id para INFORME
     */
    function get_detalle_servinf($detalleserv_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                    ds.*, c.cliente_nombre, s.servicio_id, s.servicio_fecharecepcion,
                    s.servicio_horarecepcion, e.estado_color, e.estado_descripcion,
                    ts.tiposerv_descripcion, r.usuario_nombre as responsable_nombre
            FROM
                    detalle_serv ds, servicio s, estado e,
                    usuario r, cliente c, usuario u, tipo_servicio ts
            WHERE
                    ds.servicio_id = s.servicio_id
                    and ds.estado_id = e.estado_id
                    and ds.responsable_id = r.usuario_id
                    and ds.usuario_id = u.usuario_id
                    and s.cliente_id = c.cliente_id
                    and s.tiposerv_id = ts.tiposerv_id
                    and ds.detalleserv_id = ?
        ",array($detalleserv_id))->row_array();

        return $detalle_serv;
    }
    
    /*
     * Obtiene todos los detalles de un servicio especifico(servicio_id)
     */
    function buscar_detalle_serv_all_codigo($codigo)
    {
        $detalle_serv = $this->db->query("
            SELECT
                ds.*, r.usuario_nombre as respusuario_nombre, u.usuario_nombre, e.estado_id as esteestado,
                e.estado_color, e.estado_descripcion, p.procedencia_descripcion,
                cs.catserv_descripcion, scs.subcatserv_descripcion, ct.cattrab_descripcion,
                tu.tiempouso_descripcion, s.cliente_id
            FROM
                detalle_serv ds
            LEFT JOIN estado e on ds.estado_id = e.estado_id
            LEFT JOIN usuario r on ds.responsable_id = r.usuario_id
            LEFT JOIN usuario u on ds.usuario_id = u.usuario_id
            LEFT JOIN categoria_servicio cs on ds.catserv_id = cs.catserv_id
            LEFT JOIN servicio s on ds.servicio_id = s.servicio_id
            LEFT JOIN subcategoria_servicio scs on ds.subcatserv_id = scs.subcatserv_id
            LEFT JOIN procedencia p on ds.procedencia_id = p.procedencia_id
            LEFT JOIN categoria_trabajo ct on ds.cattrab_id = ct.cattrab_id
            LEFT JOIN tiempo_uso tu on ds.tiempouso_id = tu.tiempouso_id
            WHERE
                ds.detalleserv_codigo = '".$codigo."'
            ORDER BY `detalleserv_id` DESC
        ")->result_array();

        return $detalle_serv;
    }
    /* Obtiene todos los IDS. de detalles de un servicio especifico(servicio_id) */
    function get_ids_detalleserv_all($servicio_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                ds.detalleserv_id
            FROM
                detalle_serv ds
            WHERE
                ds.servicio_id = ".$servicio_id."
        ")->result_array();

        return $detalle_serv;
    }
    
    function get_name_detalle_serv_all($servicio_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                ds.responsable_id,
                ds.detalleserv_id, ds.detalleserv_descripcion, c.cliente_nombre,
                ds.detalleserv_falla, ds.detalleserv_diagnostico, ds.detalleserv_solucion,
                ds.detalleserv_total, ds.detalleserv_acuenta, ds.detalleserv_saldo,
                ds.detalleserv_precioexterno, ds.detalleserv_detalleexterno,
                ds.detalleserv_codigo, ds.estado_id as detallestado_id, ds.servicio_id,
                c.cliente_telefono, c.cliente_celular, e.estado_color, e.estado_descripcion,
                s.servicio_fecharecepcion, s.tiposerv_id, s.servicio_direccion, ts.tiposerv_descripcion,
                s.servicio_horarecepcion, s.servicio_fechafinalizacion, s.servicio_horafinalizacion,
                ds.detalleserv_entregadoa, u.usuario_nombre

            FROM
                detalle_serv ds
            LEFT JOIN servicio s on ds.servicio_id = s.servicio_id
            LEFT JOIN cliente c on s.cliente_id = c.cliente_id
            LEFT JOIN estado e on ds.estado_id = e.estado_id
            LEFT JOIN usuario u on ds.responsable_id = u.usuario_id
            LEFT JOIN tipo_servicio ts on s.tiposerv_id = ts.tiposerv_id
            WHERE
            
                ds.servicio_id = ".$servicio_id."
               
            ORDER BY `detalleserv_id` DESC
            
        ")->result_array();

        return $detalle_serv;
    }
    /*
     * ******************Funcion que busca a todos los Productos de un CLIENTE **********************
     */
    function buscar_detalle_serv_cliente($cliente_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                ds.*, r.usuario_nombre as respusuario_nombre, u.usuario_nombre, e.estado_id as esteestado,
                e.estado_color, e.estado_descripcion, p.procedencia_descripcion,
                cs.catserv_descripcion, scs.subcatserv_descripcion, ct.cattrab_descripcion,
                tu.tiempouso_descripcion, s.cliente_id
            FROM
                detalle_serv ds
            LEFT JOIN estado e on ds.estado_id = e.estado_id
            LEFT JOIN usuario r on ds.responsable_id = r.usuario_id
            LEFT JOIN usuario u on ds.usuario_id = u.usuario_id
            LEFT JOIN categoria_servicio cs on ds.catserv_id = cs.catserv_id
            LEFT JOIN servicio s on ds.servicio_id = s.servicio_id
            LEFT JOIN subcategoria_servicio scs on ds.subcatserv_id = scs.subcatserv_id
            LEFT JOIN procedencia p on ds.procedencia_id = p.procedencia_id
            LEFT JOIN categoria_trabajo ct on ds.cattrab_id = ct.cattrab_id
            LEFT JOIN tiempo_uso tu on ds.tiempouso_id = tu.tiempouso_id
            WHERE
                s.cliente_id = $cliente_id
            ORDER BY `detalleserv_id` DESC

        ")->result_array();

        return $detalle_serv;
    }
    /*
     * Obtiene todos los detalles de un servicio especifico(servicio_id)
     */
    function get_thisdetalle_serv_forfactura($servicio_id)
    {
        $detalle_serv = $this->db->query("
            SELECT
                ds.detalleserv_id, ds.detalleserv_descripcion, ds.detalleserv_solucion, detalleserv_total,
                s.servicio_total, c.cliente_nit, cliente_razon, c.cliente_email,
                ifnull(`c`.`cdi_codigoclasificador`, 5) AS `cdi_codigoclasificador`
            FROM
                detalle_serv ds
            LEFT JOIN servicio s on ds.servicio_id = s.servicio_id
            LEFT JOIN cliente c on s.cliente_id = c.cliente_id
            WHERE
                ds.servicio_id = ".$servicio_id."
        ")->result_array();

        return $detalle_serv;
    }
    /* devuelve todos los detalles con estado_id = 5 (pendiente) */
    function get_name_detalle_serv_allpendiente()
    {
        $detalle_serv = $this->db->query("
            SELECT
                ds.responsable_id,
                ds.detalleserv_id, ds.detalleserv_descripcion, c.cliente_nombre,
                ds.detalleserv_falla, ds.detalleserv_diagnostico, ds.detalleserv_solucion,
                ds.detalleserv_total, ds.detalleserv_acuenta, ds.detalleserv_saldo,
                ds.detalleserv_precioexterno, ds.detalleserv_detalleexterno,
                ds.detalleserv_codigo, ds.estado_id as detallestado_id, ds.servicio_id,
                c.cliente_telefono, c.cliente_celular, e.estado_color, e.estado_descripcion,
                s.servicio_fecharecepcion, s.tiposerv_id, s.servicio_direccion, ts.tiposerv_descripcion,
                s.servicio_horarecepcion, s.servicio_fechafinalizacion, s.servicio_horafinalizacion,
                ds.detalleserv_entregadoa, u.usuario_nombre

            FROM
                detalle_serv ds
            LEFT JOIN servicio s on ds.servicio_id = s.servicio_id
            LEFT JOIN cliente c on s.cliente_id = c.cliente_id
            LEFT JOIN estado e on ds.estado_id = e.estado_id
            LEFT JOIN usuario u on ds.responsable_id = u.usuario_id
            LEFT JOIN tipo_servicio ts on s.tiposerv_id = ts.tiposerv_id
            WHERE
            
                s.estado_id = 5
               
            ORDER BY `detalleserv_id` DESC
            
        ")->result_array();

        return $detalle_serv;
    }
}
