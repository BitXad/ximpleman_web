<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
   
class User_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get usuario by usuario_id
     */
    function get_usuario($usuario_id)
    {
        $usuario = $this->db->query("  SELECT  * FROM  `usuario` WHERE  `usuario_id` = ? ",array($usuario_id))->row_array();

        return $usuario;
    }

    public function get_usuario3($idu)
    {
        $this->db->select('*');
        $this->db->from('usuario');
        $this->db->where('usuario_id', $idu);
        $this->db->limit(1);
        $query = $this->db->get();

        if ($query->num_rows() == 1) {
            return $query->row();
        } else {
            return false;
        }
    }


    public function get_usuario2($usuario_id)
    {
        $this->db->select('*');
        $this->db->from('usuario');
        $this->db->where('usuario_id', $usuario_id);
        $this->db->limit(1);
        $query = $this->db->get();

        if ($query->num_rows() == 1) {
            return $query->row();
        } else {
            return false;
        }
    }

    
    /*
     * Get all usuario count
     */
    function get_all_usuario_count()
    {
        $usuario = $this->db->query(" SELECT count(*) as count FROM  `usuario`")->row_array();
        return $usuario['count'];
    }
        
    /*
     * Get all usuario
     */
    function get_all_usuario($params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $usuario = $this->db->query("SELECT u.*, t.*, e.* FROM usuario u, tipo_usuario t, estado e WHERE u.tipousuario_id=t.tipousuario_id and
                u.estado_id=e.estado_id ORDER BY `usuario_id` DESC " . $limit_condition . "")->result_array();
        return $usuario;
    }
        
    /*
     * function to add new usuario
     */
    function add_usuario($params)
    {
        $this->db->insert('usuario',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update usuario
     */
/*    function update_usuario($usuario_id,$params)
    {
        $this->db->where('usuario_id',$usuario_id);
        return $this->db->update('usuario',$params);
    }*/

    public function update_usuario($data,$idu)
    {
        $this->db->where('usuario_id', $idu);
        $this->db->update('usuario', $data);
    }

    public function getCurrentPassword($usuario_id)
    {
       $query = $this->db->where('usuario_id',$usuario_id)
                        ->get('usuario');
            if ($query->num_rows() > 0) {
                return $query->row();
            }
    }
    public function password($usuario_id, $new_password)
    {
            $data = array(
                    'usuario_clave'=> $new_password
            );
            $this->db->where('usuario_id',$usuario_id);
             return $this->db->update('usuario',$data);
    }
    /*
     * function to delete usuario
     */
    function delete_usuario($usuario_id)
    {
        return $this->db->delete('usuario',array('usuario_id'=>$usuario_id));
    }

    public function hay_login($login, $uid)
    {
        $this->db->select('usuario_id');
        $this->db->from('usuario');
        $this->db->where('usuario_id !=', $uid);
        $this->db->where('usuario_login', $login);
        //$var = $this->db->last_query();
        //return $var;
        $query = $this->db->get();
        if ( $query->num_rows() > 0 ){
            return 1; // si hay
        } else {
            return 0; // no hay
        }

    }

    public function email_repeat2($email,$idu)
    {
        $this->db->select('usuario_id');
        $this->db->from('usuario');
        $this->db->where('usuario_email', $email);
        $this->db->where('usuario_id !=', $idu);
        $query = $this->db->get();
        if ( $query->num_rows() > 0 ){
            //$row = $query->row_array();
            return true;
        }else{
            return false;
        }
    }

    public function login_repeat2($login, $uid)
    {
        $this->db->select('usuario_id');
        $this->db->from('usuario');
        $this->db->where('usuario_id !=', $uid);
        $this->db->where('usuario_login', $login);
        //$var = $this->db->last_query();
        //return $var;
        $query = $this->db->get();
        if ( $query->num_rows() > 0 ){
            return true; // si hay
        } else {
            return false; // no hay
        }
    }

    public function hay_login1($login)
    {
        $this->db->select('usuario_id');
        $this->db->from('usuario');
        $this->db->where('usuario_login', $login);
        //$var = $this->db->last_query();
        //return $var;
        $query = $this->db->get();
        if ( $query->num_rows() > 0 ){
            return 1; // si hay
        } else {
            return 0; // no hay
        }
    }

}
