<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Producto_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
    
    /*
     * Get producto by producto_id
     */
    function get_producto($producto_id)
    {
        $producto = $this->db->query("
            SELECT
                *

            FROM
                `producto`

            WHERE
                `producto_id` = ?
        ",array($producto_id))->result_array();

        return $producto;
    }
    
    /*
     * Get all producto count
     */
    function get_all_producto_count()
    {
        $producto = $this->db->query("
            SELECT
                count(*) as count

            FROM
                producto p, estado e, categoria_producto c, presentacion pr, moneda m

            WHERE
                p.estado_id = e.estado_id
                and p.categoria_id = c.categoria_id
                and p.presentacion_id = pr.presentacion_id
                and p.moneda_id = m.moneda_id

            ORDER BY p.producto_id DESC

        ")->row_array();

        return $producto['count'];
    }
        
    /*
     * Get all producto
     */
    function get_all_producto()
    {
        $producto = $this->db->query("
            SELECT
                *, p.producto_id as miprod_id

            FROM
                producto p, estado e, categoria_producto c, presentacion pr, moneda m

            WHERE
                p.estado_id = e.estado_id
                and p.categoria_id = c.categoria_id
                and p.presentacion_id = pr.presentacion_id
                and p.moneda_id = m.moneda_id

            ORDER BY p.producto_id DESC LIMIT 50

        ")->result_array();

        return $producto;
    }
    
    function get_all_productos($params = array())
    {
        $limit_condition = "";
        if(isset($params) && !empty($params))
            $limit_condition = " LIMIT " . $params['offset'] . "," . $params['limit'];
        
        $producto = $this->db->query("
            SELECT
                *

            FROM
                `producto`

            WHERE
                1 = 1

            ORDER BY producto_id DESC limit 10

            " . $limit_condition . "
        ")->result_array();

        return $producto;
    }
        
    /*
     * function to add new producto
     */
    function add_producto($params)
    {
        $this->db->insert('producto',$params);
        return $this->db->insert_id();
    }
    
    /*
     * function to update producto
     */
    function update_producto($producto_id,$params)
    {
        $this->db->where('producto_id',$producto_id);
        return $this->db->update('producto',$params);
    }
    
    
    /*
     * function unidad de producto
     */
    function get_all_unidad()
    {
        $sql = "select * from unidad";
        $unidades = $this->db->query($sql)->result_array();        
        return $unidades;
    }
    
    /*
     * function to delete producto
     */
    function delete_producto($producto_id)
    {
        return $this->db->delete('producto',array('producto_id'=>$producto_id));
    }
    
    /*
     * Funcion que verifica si un producto fue usado en otros modulos
     */
    function producto_es_usado($producto_id){
        $producto = $this->db->query("
            SELECT sum(
            (SELECT if(count(dc.producto_id) > 0, count(dc.producto_id), 0) AS FIELD_1
             FROM detalle_compra dc
             WHERE dc.producto_id = p.producto_id and dc.producto_id = '$producto_id') +
            (SELECT if(count(ci.producto_id) > 0, count(ci.producto_id), 0) AS FIELD_1
             FROM categoria_insumo ci
             WHERE ci.producto_id = p.producto_id and p.producto_id = '$producto_id') +
            (SELECT if(count(dv.producto_id) > 0, count(dv.producto_id), 0) AS FIELD_1
             FROM detalle_venta dv
             WHERE dv.producto_id = p.producto_id AND p.producto_id = '$producto_id')+
            (SELECT if(count(dp.producto_id) > 0, count(dp.producto_id), 0) AS FIELD_1
             FROM detalle_pedido dp
             WHERE dp.producto_id = p.producto_id AND p.producto_id = '$producto_id')) as res
             FROM
                producto p
              WHERE p.producto_id = '$producto_id'
        ",array($producto_id))->row_array();

        return $producto['res'];
    }
    
    function get_busqueda_producto_parametro($parametro)
    {
        $sql = "SELECT
             p.*, p.producto_id as miprod_id, e.estado_color, e.estado_descripcion,
             c.categoria_nombre, pr.presentacion_nombre, m.moneda_descripcion

              FROM
              producto p, estado e, categoria_producto c, presentacion pr, moneda m
              
              WHERE 
                   p.estado_id = e.estado_id
                   and(p.producto_nombre like '%".$parametro."%' or p.producto_codigobarra like '%".$parametro."%'
                   or producto_codigo like '%".$parametro."%')
                   and p.categoria_id = c.categoria_id
                and p.presentacion_id = pr.presentacion_id
                and p.moneda_id = m.moneda_id
                  
              GROUP BY
                p.producto_id
              ORDER By p.producto_id";

        $producto = $this->db->query($sql)->result_array();
        return $producto;

    }
    /*
     * Get producto by producto_id en ROW
     */
    function get_esteproducto($producto_id)
    {
        $producto = $this->db->query("
            SELECT
                *

            FROM
                `producto`

            WHERE
                `producto_id` = ?
        ",array($producto_id))->row_array();

        return $producto;
    }
    
 function cambiar_ultimocosto($producto_id,$ultimocosto,$producto_precio)
    {

         //Truncar la tabla inventario
       
        //cargar el inventario actualizado
        $sql = "update producto set producto.producto_precio=".$producto_precio.", producto.producto_ultimocosto=".$ultimocosto." where producto_id=".$producto_id."";

        $this->db->query($sql);
    }
     function get_busqueda_producto_limite()
    {
        $sql = "SELECT
             p.*, p.producto_id as miprod_id, e.estado_color, e.estado_descripcion,
             c.categoria_nombre, pr.presentacion_nombre, m.moneda_descripcion

              FROM
              producto p, estado e, categoria_producto c, presentacion pr, moneda m
              
              WHERE 
                   p.estado_id = e.estado_id
                   
                   and p.categoria_id = c.categoria_id
                and p.presentacion_id = pr.presentacion_id
                and p.moneda_id = m.moneda_id
                  
              GROUP BY
                p.producto_id
              ORDER By p.producto_id desc LIMIT 50";

        $producto = $this->db->query($sql)->result_array();
        return $producto;

    }
}
