<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Formula extends CI_Controller{
    
    private $sistema;
    private $parametros;
    
    function __construct()
    {
        parent::__construct();
        $this->load->model('Formula_model');
        $this->load->model('Venta_model');
        $this->load->model('Inventario_model');
        $this->load->model('Pedido_model');
        $this->load->model('Tipo_transaccion_model');
        $this->load->model('Forma_pago_model');
        $this->load->model('Pedido_model');
        $this->load->model('Tipo_cliente_model');
        $this->load->model('Dosificacion_model');
        $this->load->model('Factura_model'); 
        $this->load->library('ControlCode');
        $this->load->model('Empresa_model');
        $this->load->model('Detalle_venta_model');
        $this->load->model('Parametro_model');
        $this->load->model('Estado_model');
        $this->load->model('Usuario_model');
        $this->load->model('Cliente_model');
        $this->load->model('Tipo_servicio_model');
        $this->load->model('Preferencia_model');
        $this->load->model('Credito_model');
        $this->load->model('Categoria_clientezona_model');
        $this->load->model('Promocion_model');
        $this->load->model('Mesa_model');
        $this->load->model('Moneda_model');
                
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
        $this->load->model('Sistema_model');
        $this->sistema = $this->Sistema_model->get_sistema();
        
        $parametro = $this->Parametro_model->get_parametros();
        $this->parametros = $parametro[0];
        
    } 
    
    /* *****Funcion que verifica el acceso al sistema**** */
    private function acceso($id_rol){
        
        $data['sistema'] = $this->sistema;
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
//            $data['_view'] = 'login/mensajeacceso';
//            $this->load->view('layouts/main',$data);
            return false;
        }
    }

    /*
     * Listing of formula
     */
    function index()
    {
        $data['sistema'] = $this->sistema;
        $data['formula'] = $this->Formula_model->get_all_formula();
        
        $data['_view'] = 'formula/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new formula
     */
    function add()
    {   
        $data['sistema'] = $this->sistema;  
        if($this->acceso(12)){
            //**************** inicio contenido ***************               

            $data['categoria_producto'] = $this->Venta_model->get_categoria_producto();
            $fecha = date('Y-m-d');
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
                                    'formula_nombre' => $this->input->post('formula_nombre'),
                                    'formula_unidad' => $this->input->post('formula_unidad'),
                                    'formula_cantidad' => $this->input->post('formula_cantidad'),
                                    'formula_costounidad' => $this->input->post('formula_costounidad'),
                                    'formular_preciounidad' => $this->input->post('formular_preciounidad'),
                                    'formula_fechacreacion' => $fecha,
                );

                $formula_id = $this->Formula_model->add_formula($params);
                redirect('formula/index');
            }
            else
            {
                
                $data['rolusuario'] = $this->session_data['rol'];
                $usuario_id = $this->session_data['usuario_id'];
                $tipousuario_id = $this->session_data['tipousuario_id'];        

                $data['page_title'] = "Formula de ProducciÃ³n";
                $data['dosificacion'] = $this->Dosificacion_model->get_all_dosificacion();
                $data['pedidos'] = $this->Pedido_model->get_pedidos_activos();
                $data['cliente'] = $this->Venta_model->get_cliente_inicial();
                $data['zonas'] = $this->Categoria_clientezona_model->get_all_categoria_clientezona();
                $data['categoria_producto'] = $this->Venta_model->get_categoria_producto();
                $data['tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo();
                $data['forma_pago'] = $this->Forma_pago_model->get_all_forma();
                $data['tipo_cliente'] = $this->Tipo_cliente_model->get_all_tipo_cliente();
                $data['tipo_servicio'] = $this->Tipo_servicio_model->get_all_tipo_servicio();
                $data['parametro'] = $this->parametros;
                $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
                $data['usuario'] = $this->Usuario_model->get_all_usuario_activo();
                $data['preferencia'] = $this->Preferencia_model->get_producto_preferencia();
                $data['promociones'] = $this->Promocion_model->get_promociones();
                $data['mesas'] = $this->Mesa_model->get_all_mesa();
                $data['usuario_id'] = $usuario_id;
                $data['tipousuario_id'] = $tipousuario_id;

        
                $data['_view'] = 'formula/add';
                $this->load->view('layouts/main',$data);
            }
        }
    }  

    /*
     * Editing a formula
     */
    function edit($formula_id)
    {   
        $data['sistema'] = $this->sistema;
        if($this->acceso(12)){
            //**************** inicio contenido ***************        
            $data['rolusuario'] = $this->session_data['rol'];
            $usuario_id = $this->session_data['usuario_id'];
            $tipousuario_id = $this->session_data['tipousuario_id'];           

            // check if the formula exists before trying to edit it
            $data['formula'] = $this->Formula_model->get_formula($formula_id);

            if(isset($data['formula']['formula_id']))
            {
                if(isset($_POST) && count($_POST) > 0)     
                {   
                    $params = array(
                                            'formula_nombre' => $this->input->post('formula_nombre'),
                                            'formula_unidad' => $this->input->post('formula_unidad'),
                                            'formula_cantidad' => $this->input->post('formula_cantidad'),
                                            'formula_costounidad' => $this->input->post('formula_costounidad'),
                                            'formular_preciounidad' => $this->input->post('formular_preciounidad'),
                    );

                    $this->Formula_model->update_formula($formula_id,$params);            
                    redirect('formula/index');
                }
                else
                {
                    $data['categoria_producto'] = $this->Venta_model->get_categoria_producto();
                    $data['_view'] = 'formula/edit';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The formula you are trying to edit does not exist.');

        }
    } 

    /*
     * Deleting formula
     */
    function remove($formula_id)
    {
        $data['sistema'] = $this->sistema;
        $formula = $this->Formula_model->get_formula($formula_id);

        // check if the formula exists before trying to delete it
        if(isset($formula['formula_id']))
        {
            $this->Formula_model->delete_formula($formula_id);
            redirect('formula/index');
        }
        else
            show_error('The formula you are trying to delete does not exist.');
    }
    
    function registrar_formula(){
        
        $data['sistema'] = $this->sistema;
        $usuario_id = $this->session_data['usuario_id'];
        $tipousuario_id = $this->session_data['tipousuario_id'];    
        
        $formula_nombre = $this->input->post("formula_nombre");
        $formula_unidad = $this->input->post("formula_unidad");
        $formula_cantidad = $this->input->post("formula_cantidad");
        $formula_costounidad = $this->input->post("formula_costounidad");
        $formula_preciounidad = $this->input->post("formula_preciounidad");
        $producto_id = $this->input->post("producto_id");
        
        $sql = "insert into formula(formula_nombre, formula_unidad, formula_cantidad, formula_costounidad, formula_preciounidad, producto_id) value(".
                "'".$formula_nombre."','".$formula_unidad."',".$formula_cantidad.",".$formula_costounidad.",".$formula_preciounidad.",".$producto_id.")"; 
        $this->Formula_model->ejecutar($sql);
        
        $sql = "select max(formula_id) as formulaid from formula"; 
        $resultado = $this->Formula_model->consultar($sql);
        $formula_id = $resultado[0]["formulaid"];
        
        $sql = "insert into detalle_formula(producto_id, formula_id, detalleformula_costo, detalleformula_cantidad)
                ( 
                    select d.producto_id, ".$formula_id.", d.detalleven_precio, d.detalleven_cantidad
                    from detalle_venta_aux d
                    where d.usuario_id = ".$usuario_id."
                )";
        $this->Formula_model->ejecutar($sql);
        
        $result = 1;    
        echo '[{"cliente_id":"'.$result.'"}]';
        
    }
    
   function imprimir_formula($formula_id)
    {
       $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
            
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
        $data['parametro'] = $this->Parametro_model->get_parametros();
        $data['formula'] = $this->Formula_model->get_formula($formula_id);
        $data['detalle_venta'] = $this->Formula_model->get_detalle_formula($formula_id);        
        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Formula";

        $data['parametro'] = $this->Parametro_model->get_parametros();
   
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
  
        $data['_view'] = 'formula/formula_carta';
        $this->load->view('layouts/main',$data);
        }
    }  
    
    
}
