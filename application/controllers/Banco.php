<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Banco extends CI_Controller{
    private $sistema;
    private $parametros;
                
    function __construct()
    {
        parent::__construct();
        
        $this->load->model('Banco_model');
        $this->load->model('Parametro_model');
        
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
        $this->load->model('Sistema_model');
        $this->sistema = $this->Sistema_model->get_sistema();
        $parametro = $this->Parametro_model->get_parametros();
        $this->parametros = $parametro[0];
    }
    
    
    private function acceso($id_rol){
        
        $data['sistema'] = $this->sistema;
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Listing of banco
     */
    function index()
    {
        $data['parametro'] =  $this->parametros;
        $data['sistema'] = $this->sistema;
        if($this->acceso(124)){
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('banco/index?');
        $config['total_rows'] = $this->Banco_model->get_all_banco_count();
        $this->pagination->initialize($config);

        $data['banco'] = $this->Banco_model->get_all_banco($params);
        $data['page_title'] = "Banco";
        $data['_view'] = 'banco/index';
        $this->load->view('layouts/main',$data);
    }
}

    /*
     * Adding a new banco
     */
    function add()
    {
        $data['parametro'] =  $this->parametros;
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(124)){
            $this->load->library('form_validation');
            $this->form_validation->set_rules('banco_nombre','Banco Nombre','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('banco_numcuenta','Banco Numero de cuenta','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            if($this->form_validation->run())     
            {
                $estado = 1;
                $params = array(
                    'moneda_id' => $this->input->post('moneda_id'),
                    'estado_id' => $estado,
                    'banco_nombre' => $this->input->post('banco_nombre'),
                    'banco_tipocuenta' => $this->input->post('banco_tipocuenta'),
                    'banco_numcuenta' => $this->input->post('banco_numcuenta'),
                    'banco_monto' => $this->input->post('banco_monto'),
                );
                $banco_id = $this->Banco_model->add_banco($params);
                redirect('banco/index');
            }else{
                $data['page_title'] = "AÃ±adir Banco";
                $this->load->model('Moneda_model');
                $data['all_moneda'] = $this->Moneda_model->get_all_moneda();
                
                $data['_view'] = 'banco/add';
                $this->load->view('layouts/main',$data);
            }
        }  
    }

    /*
     * Editing a banco
     */
    function edit($banco_id)
    {
        $data['parametro'] =  $this->parametros;
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(124)){
            // check if the banco exists before trying to edit it
            $data['banco'] = $this->Banco_model->get_banco($banco_id);
            if(isset($data['banco']['banco_id']))
            {
                $this->load->library('form_validation');
                $this->form_validation->set_rules('banco_nombre','Banco Nombre','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                $this->form_validation->set_rules('banco_numcuenta','Banco Numero de cuenta','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                if($this->form_validation->run())     
                {   
                    $params = array(
                        'moneda_id' => $this->input->post('moneda_id'),
                        'estado_id' => $this->input->post('estado_id'),
                        'banco_nombre' => $this->input->post('banco_nombre'),
                        'banco_tipocuenta' => $this->input->post('banco_tipocuenta'),
                        'banco_numcuenta' => $this->input->post('banco_numcuenta'),
                        'banco_monto' => $this->input->post('banco_monto'),
                    );
                    $this->Banco_model->update_banco($banco_id,$params);            
                    redirect('banco/index');
                }else{
                    $this->load->model('Moneda_model');
                    $data['all_moneda'] = $this->Moneda_model->get_all_moneda();
                    
                    $this->load->model('Estado_model');
                    $data['all_estado'] = $this->Estado_model->get_tipo_estado(1);
                    $data['page_title'] = "Modificar Banco";
                    $data['_view'] = 'banco/edit';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The banco you are trying to edit does not exist.');
        }
    }

    /*
     * Deleting banco
     */
    function remove($banco_id)
    {
        $data['sistema'] = $this->sistema;
        $data['parametro'] =  $this->parametros;
        
        if($this->acceso(124)){
            $banco = $this->Banco_model->get_banco($banco_id);
            // check if the banco exists before trying to delete it
            if(isset($banco['banco_id']))
            {
                $this->Banco_model->delete_banco($banco_id);
                redirect('banco/index');
            }
            else
                show_error('The banco you are trying to delete does not exist.');
        }
    }
}
