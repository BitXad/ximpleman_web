<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Detalle_compra extends CI_Controller{
    private $sistema;
    
    function __construct()
    {
        parent::__construct();
        $this->load->model('Detalle_compra_model');
        $this->load->model('Sistema_model');
	$this->sistema = $this->Sistema_model->get_sistema();
    } 

    /*
     * Listing of detalle_compra
     */
    /*function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('detalle_compra/index?');
        $config['total_rows'] = $this->Detalle_compra_model->get_all_detalle_compra_count();
        $this->pagination->initialize($config);

            $data['detalle_compra'] = $this->Detalle_compra_model->get_all_detalle_compra($params);
            $this->load->model('Producto_model');
            $data['all_producto'] = $this->Producto_model->get_all_producto();

            $this->load->model('Estado_model');
            $data['all_estado'] = $this->Estado_model->get_all_estado();

            $this->load->model('Tipo_transaccion_model');
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();

            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario();

            $this->load->model('Moneda_model');
            $data['all_moneda'] = $this->Moneda_model->get_all_moneda();

            $this->load->model('Proveedor_model');
            $data['all_proveedor'] = $this->Proveedor_model->get_all_proveedor();

            $this->load->model('Forma_pago_model');
            $data['all_forma_pago'] = $this->Forma_pago_model->get_all_forma_pago();
        
        $data['_view'] = 'detalle_compra/index';
        $this->load->view('layouts/main',$data);
    }*/

    /*
     * Adding a new detalle_compra
     */
    /*function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $cambio = 6.96;
            $params = array(
				'compra_id' => $this->input->post('compra_id'),
				
				'producto_id' => $this->input->post('producto_id'),
				'detallecomp_codigo' => $this->input->post('detallecomp_codigo'),
				'detallecomp_cantidad' => $this->input->post('detallecomp_cantidad'),
				'detallecomp_unidad' => $this->input->post('detallecomp_unidad'),
				'detallecomp_costo' => $this->input->post('detallecomp_costo'),
				'detallecomp_precio' => $this->input->post('detallecomp_precio'),
				'detallecomp_subtotal' => $this->input->post('detallecomp_cantidad')*$this->input->post('detallecomp_costo'),
				'detallecomp_descuento' => $this->input->post('detallecomp_descuento'),
				'detallecomp_total' => $this->input->post('detallecomp_total'),
				'detallecomp_descglobal' => $this->input->post('detallecomp_descglobal'),
				'detallecomp_fechavencimiento' => $this->input->post('detallecomp_fechavencimiento'),
				'detallecomp_tipocambio' => $cambio,
            );
            
            $detalle_compra_id = $this->Detalle_compra_model->add_detalle_compra($params);
            redirect('compra/index');
        }
        else
        {
			$this->load->model('Compra_model');
			$data['all_compra'] = $this->Compra_model->get_all_compra();

			$this->load->model('Moneda_model');
			$data['all_moneda'] = $this->Moneda_model->get_all_moneda();

			$this->load->model('Producto_model');
			$data['all_producto'] = $this->Producto_model->get_all_producto();
            
            $data['_view'] = 'compra/index';
            $this->load->view('layouts/main',$data);
        }
    }  */

    /*
     * Editing a detalle_compra
     */
    /*function edit($detallecomp_id)
    {   
        // check if the detalle_compra exists before trying to edit it
        $data['detalle_compra'] = $this->Detalle_compra_model->get_detalle_compra($detallecomp_id);
        
        if(isset($data['detalle_compra']['detallecomp_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'compra_id' => $this->input->post('compra_id'),
					
					'producto_id' => $this->input->post('producto_id'),
					'detallecomp_codigo' => $this->input->post('detallecomp_codigo'),
					'detallecomp_cantidad' => $this->input->post('detallecomp_cantidad'),
					'detallecomp_unidad' => $this->input->post('detallecomp_unidad'),
					'detallecomp_costo' => $this->input->post('detallecomp_costo'),
					'detallecomp_precio' => $this->input->post('detallecomp_precio'),
					'detallecomp_subtotal' => $this->input->post('detallecomp_subtotal'),
					'detallecomp_descuento' => $this->input->post('detallecomp_descuento'),
					'detallecomp_total' => $this->input->post('detallecomp_total'),
					'detallecomp_descglobal' => $this->input->post('detallecomp_descglobal'),
					'detallecomp_fechavencimiento' => $this->input->post('detallecomp_fechavencimiento'),
					'detallecomp_tipocambio' => $this->input->post('detallecomp_tipocambio'),
                );

                $this->Detalle_compra_model->update_detalle_compra($detallecomp_id,$params);            
                redirect('detalle_compra/index');
            }
            else
            {
				$this->load->model('Compra_model');
				$data['all_compra'] = $this->Compra_model->get_all_compra();

				$this->load->model('Moneda_model');
				$data['all_moneda'] = $this->Moneda_model->get_all_moneda();

				$this->load->model('Producto_model');
				$data['all_producto'] = $this->Producto_model->get_all_producto();

                $data['_view'] = 'detalle_compra/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The detalle_compra you are trying to edit does not exist.');
    } */

    /*
     * Deleting detalle_compra
     */
    function quitar($detallecomp_id,$compra_id)
    {
        $data['sistema'] = $this->sistema;
         $bandera = $this->input->post('bandera');    
        $detalle_compra = $this->Detalle_compra_model->get_detalle_compra($detallecomp_id);

        // check if the detalle_compra exists before trying to delete it
        if(isset($detalle_compra['detallecomp_id']))
        {
            $this->Detalle_compra_model->delete_detalle_compra($detallecomp_id);
            redirect('compra/edit/'.$compra_id.'/'.$bandera);
        }
        else
            show_error('El item que quiere eliminar no existe..!!');
    }
    function sacar($detallecomp_id,$cambio_producto_id)
    {
         $data['sistema'] = $this->sistema;
        $detalle_compra = $this->Detalle_compra_model->get_detalle_compra($detallecomp_id);

        // check if the detalle_compra exists before trying to delete it
        if(isset($detalle_compra['detallecomp_id']))
        {
            $this->Detalle_compra_model->delete_detalle_compra($detallecomp_id);
            redirect('cambio_producto/add/'.$cambio_producto_id);
        }
        else
            show_error('El item que quiere eliminar no existe..!!');
    }
   /* function descontar($detalle_compra,$compra_id)
    {
        $detalle_compra = $this->Detalle_compra_model->get_detalle_compra($detallecomp_id);
        $totalfinal = $this->Detalle_compra_model->get_detalle_compra($detallecomp_id);
        $compra_descglobal = $this->Compra_model->get_compra($compra_id);

        $params = array(
        'detallecomp_cantidad' => $this->input->post('detallecomp_cantidad'),
        'detallecomp_costo' => $this->input->post('detallecomp_costo'),
        'detallecomp_descglobal' 
         );
    }*/

    function remove($detallecomp_id)
    {
        $data['sistema'] = $this->sistema;
        $detalle_compra = $this->Detalle_compra_model->get_detalle_compra($detallecomp_id);

        // check if the detalle_compra exists before trying to delete it
        if(isset($detalle_compra['detallecomp_id']))
        {
            $this->Detalle_compra_model->delete_detalle_compra($detallecomp_id);
            redirect('detalle_compra/index');
        }
        else
            show_error('The detalle_compra you are trying to delete does not exist.');
    }
    

    function save_preferenciaCaracteristicas(){
        if($this->input->is_ajax_request()){
            $detallecomp_id = $this->input->post('detcompra');
            // $producto = $this->input->post('producto');
            $series = $this->input->post('series');

            $params = array(
                'detallecomp_series' => $series,
            );
            $this->Detalle_compra_model->update_detalle_compra_aux($detallecomp_id,$params);
        }else{
            show_404();
        }
    }

    function get_compra_serie(){
        if($this->input->is_ajax_request()){
            $detallecomp_id = $this->input->post('detallecomp_id');
            echo json_encode($this->Detalle_compra_model->get_detalle_compra_aux($detallecomp_id));
        }else{
            show_404();
        }
    }
}
