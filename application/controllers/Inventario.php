<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Inventario extends CI_Controller{
    private $session_data = "";
    function __construct()
    {
        parent::__construct();
        $this->load->model('Inventario_model');
        $this->load->model('Empresa_model');
        $this->load->model('Producto_model');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    }
    private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    } 

    /*
     * Listing of producto
     */
    function index()
    {
        

        if($this->acceso(24)){
        //**************** inicio contenido ***************
            $data['rolusuario'] = $this->session_data['rol'];
        $empresa_id = 1;
        $data['page_title'] = "Inventario";
        $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
        $data['_view'] = 'inventario/index';
        $this->load->view('layouts/main',$data);
		
        //**************** fin contenido ***************
			}
			
    }

    /*
     * Kadex de producto
     */
    function kardex($producto_id)
    {

        if($this->acceso(29)){
        //**************** inicio contenido ***************
		  
                
        $empresa_id = 1;
        //$producto_id = $this->input->post('producto_id');
        
        $data['page_title'] = "Kardex";
        $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
        $data['producto'] = $this->Producto_model->get_producto($producto_id);
        $data['producto_id'] = $producto_id;
        

        $data['_view'] = 'inventario/kardex';
        $this->load->view('layouts/main',$data);
//        
        
	
        //**************** fin contenido ***************
			}
			 
        
    }
    /*
     * Kadex de producto
     */
    function buscar_kardex()
    {

        if($this->acceso(29)){
        //**************** inicio contenido ***************
		  
                
        $empresa_id = 1;
        $producto_id = $this->input->post('producto_id');
        $hasta = $this->input->post('hasta');
        $desde = $this->input->post('desde');
        
        $kardex = $this->Inventario_model->mostrar_kardex($desde, $hasta, $producto_id);
        echo json_encode($kardex);
          
        
	
        //**************** fin contenido ***************
			}
			      
        
    }

    /*
     * Elimina el contenido de la tabla inventario y lo carga nuevamente
     */
    function actualizar_inventario()
    {   

        if($this->acceso(26)){
        //**************** inicio contenido ***************
		       
        $usuario_id = 1;
        
        $this->Inventario_model->actualizar_inventario();
        redirect('inventario/index');
		
        //**************** fin contenido ***************
			}
			
    }  

    /*
     * muestra inventario por parametro
     */
    function mostrar_inventario()
    {      
       

        if($this->acceso(25)){
        //**************** inicio contenido ***************
		
            $parametro = $this->input->post("parametro");
            if ($parametro=="" || $parametro==null)
                $resultado = $this->Inventario_model->get_inventario();                
            else
                $resultado = $this->Inventario_model->get_inventario_parametro($parametro);
            
            echo json_encode($resultado);            
		
        //**************** fin contenido ***************
			}
			
    }

    function mostrar_inventario_existencia()
    {      
       

        if($this->acceso(25)){
        //**************** inicio contenido ***************
        
            $parametro = $this->input->post("parametro");
            if ($parametro=="" || $parametro==null)
                $resultado = $this->Inventario_model->get_inventario_existencia();                
            else
                $resultado = $this->Inventario_model->get_inventario_parametro_existencia($parametro);
            
            echo json_encode($resultado);            
        
        //**************** fin contenido ***************
            }
            
    }    
    
    /*
     * Adding a new producto
     */
    function actualizar_cantidad_inventario()
    {   

        if($this->acceso(26)){
        //**************** inicio contenido ***************
		       
        $usuario_id = 1;
        
        $this->Inventario_model->actualizar_cantidad_inventario();
        redirect('inventario/index');
		
        //**************** fin contenido ***************
			}
			
    }  
    
    /*
     * muestra los productos duplicados en inventario
     */
    function mostrar_duplicados()
    {
     

        if($this->acceso(28)){
        //**************** inicio contenido ***************
		        
        if($this->input->is_ajax_request()){
            
            $resultado = $this->Inventario_model->mostrar_duplicados_inventario();
            echo json_encode($resultado);      
            
        }
        else echo false;
		
        //**************** fin contenido ***************
			}

    }

    function generar_excel()
    {
            $llamadas = $this->Inventario_model->get_inventario();
    if(count($llamadas) > 0){
        //Cargamos la librería de excel.
        $this->load->library('excel'); $this->excel->setActiveSheetIndex(0);
        $this->excel->getActiveSheet()->setTitle('inventario');
        //Contador de filas
        $contador = 1;
        
        //Le aplicamos ancho las columnas(OPCIONAL).
       /* $this->excel->getActiveSheet()->getColumnDimension('A')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('B')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('D')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('E')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('F')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('G')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('H')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('I')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('J')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('K')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('L')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('M')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('N')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('O')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('P')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('Q')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('R')->setWidth(30);
        //Le aplicamos negrita a los títulos de la cabecera(OPCIONAL).
        $this->excel->getActiveSheet()->getStyle("A{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("B{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("C{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("D{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("F{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("G{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("H{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("I{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("J{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("K{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("L{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("M{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("N{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("O{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("P{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("Q{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("R{$contador}")->getFont()->setBold(true);*/
        //Definimos los títulos de la cabecera.
        $this->excel->getActiveSheet()->setCellValue("A{$contador}", 'N°');
        $this->excel->getActiveSheet()->setCellValue("B{$contador}", 'DESCRIPCION');
        $this->excel->getActiveSheet()->setCellValue("C{$contador}", 'CODIGO');
        $this->excel->getActiveSheet()->setCellValue("D{$contador}", 'CATEGORIA');
        $this->excel->getActiveSheet()->setCellValue("E{$contador}", 'UNIDAD');
        $this->excel->getActiveSheet()->setCellValue("F{$contador}", 'COSTO');
        $this->excel->getActiveSheet()->setCellValue("G{$contador}", 'SALDO');
        $this->excel->getActiveSheet()->setCellValue("H{$contador}", 'TOTAL');
        //Definimos la data del cuerpo.        
        foreach($llamadas as $l){
           //Incrementamos una fila más, para ir a la siguiente.
           $contador++;
           //Informacion de las filas de la consulta.
         
           $this->excel->getActiveSheet()->setCellValue("A{$contador}", $contador-1);
           $this->excel->getActiveSheet()->setCellValue("B{$contador}", $l['producto_nombre']);
           $this->excel->getActiveSheet()->setCellValue("C{$contador}", $l['producto_codigo']); 
           $this->excel->getActiveSheet()->setCellValue("D{$contador}", $l['categoria_nombre']);
           $this->excel->getActiveSheet()->setCellValue("E{$contador}", $l['producto_unidad']);
           $this->excel->getActiveSheet()->setCellValue("F{$contador}", $l['producto_costo']);
           $this->excel->getActiveSheet()->setCellValue("G{$contador}", $l['existencia']);
           $this->excel->getActiveSheet()->setCellValue("H{$contador}", ($l['producto_costo']*$l['existencia']));
        }
        //Le ponemos un nombre al archivo que se va a generar.
        $hoy = date('d/m/Y H:i:s');
        $archivo = "Inventario".$hoy.".xls";
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="'.$archivo.'"');
        header('Cache-Control: max-age=0');
        $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');
        //Hacemos una salida al navegador con el archivo Excel.
        $objWriter->save('php://output');
     }else{
        echo 'No se han encontrado ventas';
        exit;        
     }
    }
    
    
}
