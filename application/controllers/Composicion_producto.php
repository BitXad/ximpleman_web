<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Composicion_producto extends CI_Controller{
    private $sistema;
    function __construct()
    {
        parent::__construct();
        $this->load->model('Composicion_producto_model');
        $this->load->model('Sistema_model');
        $this->sistema = $this->Sistema_model->get_sistema();
    } 

    /*
     * Listing of composicion_producto
     */
    function index()
    {
        $data['sistema'] = $this->sistema;
        $data['composicion_producto'] = $this->Composicion_producto_model->get_all_composicion_producto();
        
        $data['_view'] = 'composicion_producto/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new composicion_producto
     */
    function add()
    {
        $data['sistema'] = $this->sistema;
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'composicionproducto_id' => $this->input->post('composicionproducto_id'),
				'producto_id' => $this->input->post('producto_id'),
				'composicion_cantidad' => $this->input->post('composicion_cantidad'),
				'composicion_precio' => $this->input->post('composicion_precio'),
            );
            
            $composicion_producto_id = $this->Composicion_producto_model->add_composicion_producto($params);
            redirect('composicion_producto/index');
        }
        else
        {
			$this->load->model('Producto_model');
			$data['all_producto'] = $this->Producto_model->get_productos();
			$data['all_producto'] = $this->Producto_model->get_productos();
            
            $data['_view'] = 'composicion_producto/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a composicion_producto
     */
    function edit($composicion_id)
    {
        $data['sistema'] = $this->sistema;
        // check if the composicion_producto exists before trying to edit it
        $data['composicion_producto'] = $this->Composicion_producto_model->get_composicion_producto($composicion_id);
        
        if(isset($data['composicion_producto']['composicion_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'composicionproducto_id' => $this->input->post('composicionproducto_id'),
					'producto_id' => $this->input->post('producto_id'),
					'composicion_cantidad' => $this->input->post('composicion_cantidad'),
					'composicion_precio' => $this->input->post('composicion_precio'),
                );

                $this->Composicion_producto_model->update_composicion_producto($composicion_id,$params);            
                redirect('composicion_producto/index');
            }
            else
            {
				$this->load->model('Producto_model');
				$data['all_producto'] = $this->Producto_model->get_productos();
				$data['all_producto'] = $this->Producto_model->get_productos();

                $data['_view'] = 'composicion_producto/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The composicion_producto you are trying to edit does not exist.');
    } 

    /*
     * Deleting composicion_producto
     */
    function remove($composicion_id)
    {
        $data['sistema'] = $this->sistema;
        $composicion_producto = $this->Composicion_producto_model->get_composicion_producto($composicion_id);

        // check if the composicion_producto exists before trying to delete it
        if(isset($composicion_producto['composicion_id']))
        {
            $this->Composicion_producto_model->delete_composicion_producto($composicion_id);
            redirect('composicion_producto/index');
        }
        else
            show_error('The composicion_producto you are trying to delete does not exist.');
    }
    
}
