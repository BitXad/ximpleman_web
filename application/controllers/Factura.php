<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
            //require __DIR__ . '/vendor/autoload.php';

        use Mike42\Escpos\Printer;
        use Mike42\Escpos\PrintConnectors\FilePrintConnector;
        use Mike42\Escpos\CapabilityProfile;
    
class Factura extends CI_Controller{
    private $session_data = "";
    private $configuracion;
    private $sistema;
    private $parametros;
    private $caja_id = 0;
    private $empresa;

    function __construct()
    {
        parent::__construct();
        $this->load->model([
            'Factura_model',
            'Empresa_model',
            'Detalle_venta_model',
            'Parametro_model',
            'Tipo_servicio_model',
            'Dosificacion_model',
            'Pedido_model',
            'Venta_model',
            'Tipo_transaccion_model',
            'Forma_pago_model',
            'Tipo_cliente_model',
            'Usuario_model',
            'Preferencia_model',
            'Moneda_model',
            'Caja_model',
            'Factura_datos_model',
        ]);
        
        $this->load->library('ControlCode');

        $this->load->helper([
            'xml',
            'numeros_helper',// Helper para convertir numeros a letras
            'validacionxmlxsd_helper',
        ]);
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
        
        $parametro = $this->Parametro_model->get_parametros();
        $this->parametros = $parametro[0];
        
        $this->load->model('Sistema_model');
        $this->sistema = $this->Sistema_model->get_sistema();
        
        $this->configuracion = $parametro[0];
        
        $empresa = $this->Empresa_model->get_empresa(1);
        $this->empresa = $empresa[0];
                
        //*********** Administracion de caja *********
                $usuario_id = $this->session_data['usuario_id'];
                $caja = $this->Caja_model->get_caja_usuario($usuario_id);
                
                if (!sizeof($caja)>0){ // si la caja no esta iniciada
                    //iniciar caja y dejarla en pendiente
                    $this->caja_id = 0;
                }else{
                    $this->caja_id = $caja[0]["caja_id"];
                    
                }
                
                
        //*********** FIN Administracion de caja *********
        
    }
    /* *****Funcion que verifica el acceso al sistema**** */
    private function acceso($id_rol){
        
        $data['sistema'] = $this->sistema;
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Listing of factura
     */
    function index()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(152)){
        //**************** inicio contenido ***************            
        $rolusuario = $this->session_data['rol'];
        $data['rolusuario_asignado'] = $rolusuario[154-1]['rolusuario_asignado'];
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('factura/index?');
        $config['total_rows'] = $this->Factura_model->get_all_factura_count();
        $this->pagination->initialize($config);

        $data['page_title'] = "Libro de Ventas";
        $data['factura'] = $this->Factura_model->get_all_factura($params);
        $data['configuracion'] = $this->configuracion;
        $data['motivos'] = $this->Factura_model->get_all_motivos();
        $data['empresa'] = $this->Empresa_model->get_all_empresa();
        $data['all_documentosector'] = $this->Dosificacion_model->get_documento_sector();
        $data['dosificacion'] = $this->Dosificacion_model->get_dosificacion(1);
        
        $data['_view'] = 'factura/index';
        $this->load->view('layouts/main',$data);
        		
        //**************** fin contenido ***************
        }
    }


    /*
     * Listing of factura
     */
    
    
//     public function random($num){
// $characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
// $string = '';
// for ($i = 0; $i < $num; $i++) {
//      $string .= $characters[rand(0, strlen($characters) - 1)];
// }
// return $string;
// }

    function factura_compra()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(153)){
        //**************** inicio contenido ***************            
        
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('factura/index?');
        $config['total_rows'] = $this->Factura_model->get_all_factura_count();
        $this->pagination->initialize($config);

        $data['factura'] = $this->Factura_model->get_all_factura($params);
        
        $data['_view'] = 'factura/factura_compra';
        $this->load->view('layouts/main',$data);
                
        //**************** fin contenido ***************
        }
    }

    function factura_carta($venta_id,$tipo)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(17)){
            
        //**************** inicio contenido ***************
            //$parametros = $this->Parametro_model->get_parametros();
        $parametros = $this->parametros;
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        //$data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
        $data['detalle_factura'] = $this->Detalle_venta_model->get_detalle_factura($venta_id);
        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Factura";
        $factura = $this->Factura_model->get_factura_venta($venta_id);
        $data['factura'] = $factura;
        $data['parametro'] = $this->parametros;
        $data['tipo'] = $tipo;
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
        
             
        $dosificacion = $this->Dosificacion_model->get_dosificacion(1);
        if(sizeof($factura)>=1){
            if (isset($factura[0]['datos_id'])){
                $data['datos_factura'] = $this->Factura_datos_model->get_factura_datos($factura[0]['datos_id']);
            }
            
            $data['decimales'] = $parametros["parametro_decimales"];
            $data['dos_decimales'] = 2;
        $nit_emisor    = $factura[0]['factura_nitemisor'];
        $num_fact      = $factura[0]['factura_numero'];
        $autorizacion  = $factura[0]['factura_autorizacion'];
        $fecha_factura = $factura[0]['factura_fechaventa'];
        $total         = $factura[0]['factura_total'];
        $codcontrol    = $factura[0]['factura_codigocontrol'];
        $nit           = $factura[0]['factura_nit'];
        
        if($parametros['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            // Antiguo
            $cadenaQR = $nit_emisor.'|'.$num_fact.'|'.$autorizacion.'|'.$fecha_factura.'|'.$total.'|'.$total.'|'.$codcontrol.'|'.$nit.'|0|0|0|0';
        }else{
            $ruta      = $factura[0]['factura_ruta'];
            $cuf       = $factura[0]['factura_cuf'];
            $tamanio   = $factura[0]['factura_tamanio'];
            // nuevo
            $cadenaQR = $ruta.'nit='.$nit_emisor.'&cuf='.$cuf.'&numero='.$num_fact.'&t='.$tamanio;
        }
        
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
        //Generador de Codigo QR
                //cargamos la libreria	
         $this->load->library('ciqrcode');
                 
         //hacemos configuraciones
         $params['data'] = $cadenaQR;//$this->random(30);
         $params['level'] = 'H';
         $params['size'] = 5;
         //decimos el directorio a guardar el codigo qr, en este 
         //caso una carpeta en la raí­z llamada qr_code
         $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
         
         //generamos el código qr
         $this->ciqrcode->generate($params); 
         //echo '<img src="'.base_url().'resources/images/qrcode.png" />';
        //fin generador de codigo QR        
        
        $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');
        $data['cadenaqr'] = $cadenaQR;
        
        
        if($parametros['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            $data['_view'] = 'factura/factura_carta';
        }else{
            $data['motivos'] = $this->Factura_model->get_all_motivos();
            
            // 1 FACTURA COMPRA-VENTA, 2 FACTURA DE ALQUILER DE BIENES INMUEBLES, 8 FACTURA DE TASA CERO POR VENTA DE LIBROS Y TRANSPORTE INTERNACIONAL DE CARGA
            // 12 FACTURA DE COMERCIALIZACIÓN DE HIDROCARBUROS 13 FACTURA DE SERVICIOS BASICOS
            // 22 FACTURA TELECOMUNICACIONES
            
            $documentos_sector1 = array(1,2,8,12,13,16,17,22);
            
            if(in_array($dosificacion['docsec_codigoclasificador'], $documentos_sector1 )){ //FACTURA COMPRA VENTA/ ALQUILERES
//                $data['_view'] = 'factura/factura_carta_servicios';
                $data['_view'] = 'factura/factura_carta_new';
            }
//            if($dosificacion['docsec_codigoclasificador'] == 8){ //FACTURA COMPRA VENTA
////                $data['_view'] = 'factura/factura_carta_servicios';
//                $data['_view'] = 'factura/factura_carta_new';
//            }
//            if($dosificacion['docsec_codigoclasificador'] == 12){ // FACTURA SECTOR EDUCATIVO
//                $data['_view'] = 'factura/factura_carta_new';
//            }
//            if($dosificacion['docsec_codigoclasificador'] == 13){ // FACTURA SERVICIOS
//            
//                $data['_view'] = 'factura/factura_carta_new';
//                //$data['_view'] = 'factura/factura_carta_servicios';
//            }
//            
            
            if($dosificacion['docsec_codigoclasificador'] == 11){ // FACTURA SECTOR EDUCATIVO
                $data['_view'] = 'factura/factura_carta_servicios';
            }
                       
            if($dosificacion['docsec_codigoclasificador'] == 23){ // FACTURA PREVALORADA
                $data['_view'] = 'factura/factura_carta_prev';
            }
            
            
            
        }
        $this->load->view('layouts/main',$data);        
        
        }
        else
        {
            echo "<script type='text/javascript>alert('La venta no contiene una factura asociada...!'); </script>'";
            redirect('venta');
        }
        		
        //**************** fin contenido ***************
        }
    }    
    
    
       
    function factura_carta_id($factura_id,$tipo)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(17)){
            
        //**************** inicio contenido ***************           
            //$parametros = $this->Parametro_model->get_parametros();
            $parametros = $this->parametros;
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        
        
        
//        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
//        
        // se usa detalle_venta para no modifcar el detalle de factura que ya estaba echo
        $data['detalle_factura'] = $this->Detalle_venta_model->get_detalle_factura_id($factura_id);
        $data['empresa'] = $this->Empresa_model->get_empresa(1);
        $data['page_title'] = "Factura";
        $factura = $this->Factura_model->get_factura_id($factura_id);
        $data['factura'] = $factura;
        $data['tipo'] = $tipo;
        $data['parametro'] = $this->parametros;
        $data['venta'] = $this->Detalle_venta_model->get_venta($factura[0]["venta_id"]);
        
        
        if(sizeof($factura)>=1){
            
            $data['decimales'] = $parametros["parametro_decimales"];
            $data['dos_decimales'] = 2;
        $nit_emisor    = $factura[0]['factura_nitemisor'];
        $num_fact      = $factura[0]['factura_numero'];
        $autorizacion  = $factura[0]['factura_autorizacion'];
        $fecha_factura = $factura[0]['factura_fechaventa'];
        $total         = $factura[0]['factura_total'];
        $codcontrol    = $factura[0]['factura_codigocontrol'];
        $nit           = $factura[0]['factura_nit'];
        
             
            if (isset($factura[0]['datos_id'])){            
            
                $data['datos_factura'] = $this->Factura_datos_model->get_factura_datos($factura[0]['datos_id']);
            }
            
        
        
        if($parametros['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            // Antiguo
            $cadenaQR = $nit_emisor.'|'.$num_fact.'|'.$autorizacion.'|'.$fecha_factura.'|'.$total.'|'.$total.'|'.$codcontrol.'|'.$nit.'|0|0|0|0';
        }else{
            $ruta      = $factura[0]['factura_ruta'];
            $cuf       = $factura[0]['factura_cuf'];
            $tamanio   = $factura[0]['factura_tamanio'];
            // nuevo
            //$cadenaQR = $ruta.'nit='.$nit.'&cuf='.$cuf.'&numero='.$num_fact.'&t='.$tamanio;
            $cadenaQR = $ruta.'nit='.$nit_emisor.'&cuf='.$cuf.'&numero='.$num_fact.'&t='.$tamanio;
        }
         
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
        //Generador de Codigo QR
                //cargamos la libreri­a	
         $this->load->library('ciqrcode');
                  
         //hacemos configuraciones
         $params['data'] = $cadenaQR;//$this->random(30);
         $params['level'] = 'H';
         $params['size'] = 5;
         //decimos el directorio a guardar el codigo qr, en este 
         //caso una carpeta en la raí­z llamada qr_code
         $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
         //generamos el cÃ³digo qr
         $this->ciqrcode->generate($params); 
         //echo '<img src="'.base_url().'resources/images/qrcode.png" />';
        //fin generador de codigo QR
         
        
        $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');
        $data['cadenaqr'] = $cadenaQR;
        
        if($parametros['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            $data['_view'] = 'factura/factura_carta';
        }else{
            $dosificacion = $this->Dosificacion_model->get_dosificacion(1);
            $data['motivos'] = $this->Factura_model->get_all_motivos();
            if($dosificacion['docsec_codigoclasificador'] == 1){ //FACTURA COMPRA VENTA
//                $data['_view'] = 'factura/factura_carta_servicios';
                $data['_view'] = 'factura/factura_carta_new';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 8){ //FACTURA COMPRA VENTA
//                $data['_view'] = 'factura/factura_carta_servicios';
                $data['_view'] = 'factura/factura_carta_new';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 11){ // FACTURA SECTOR EDUCATIVO
                $data['_view'] = 'factura/factura_carta_new';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 22){ // FACTURA SECTOR EDUCATIVO
                $data['_view'] = 'factura/factura_carta_new';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 23){ // FACTURA PREVALORADA
                $data['_view'] = 'factura/factura_carta_prev';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 13){ // FACTURA servicios
                $data['_view'] = 'factura/factura_carta_servicios';
            }
            
            /*$data['motivos'] = $this->Factura_model->get_all_motivos();
            $data['_view'] = 'factura/factura_carta_servicios'; */
        }
        $this->load->view('layouts/main',$data);
        
        }
        else
        {
            echo "<script type='text/javascript>alert('La venta no contiene una factura asociada...!'); </script>'";
            redirect('venta');
        }
        		
        //**************** fin contenido ***************
        }
    }
    
    function factura_boucher($venta_id,$tipo)
    {
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(17)){
        //**************** inicio contenido ***************           
    
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
       // $data['venta'] = $this->Detalle_venta_model->get_venta_id($venta_id);
        $data['detalle_factura'] = $this->Detalle_venta_model->get_detalle_factura($venta_id);        
        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Factura";
        $factura = $this->Factura_model->get_factura_venta($venta_id);
        $data['factura'] = $factura;
        $data['parametro'] = $this->parametros;
        $parametros = $this->parametros;
        $data['tipo'] = $tipo;
        
        if(sizeof($factura)>=1){
            
            if (isset($factura[0]['datos_id'])){            
            
                $data['datos_factura'] = $this->Factura_datos_model->get_factura_datos($factura[0]['datos_id']);
            }
            
            $data['decimales'] = $parametros["parametro_decimales"];
            $data['dos_decimales'] = 2;
        
        $nit_emisor    = $factura[0]['factura_nitemisor'];
        $num_fact      = $factura[0]['factura_numero'];
        $autorizacion  = $factura[0]['factura_autorizacion'];
        $fecha_factura = $factura[0]['factura_fechaventa'];
        $total         = $factura[0]['factura_total'];
        $codcontrol    = $factura[0]['factura_codigocontrol'];
        $nit           = $factura[0]['factura_nit'];
        
        if($parametros['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            // Antiguo
            $cadenaQR = $nit_emisor.'|'.$num_fact.'|'.$autorizacion.'|'.$fecha_factura.'|'. number_format($total, 2,".",",").'|'.number_format($total, 2,".",",").'|'.$codcontrol.'|'.$nit.'|0|0|0|0';
        }else{
            $ruta      = $factura[0]['factura_ruta'];
            $cuf       = $factura[0]['factura_cuf'];
            $tamanio   = $factura[0]['factura_tamanio'];
            // nuevo
            //$cadenaQR = $ruta.'nit='.$nit.'&cuf='.$cuf.'&numero='.$num_fact.'&t='.$tamanio;
            $cadenaQR = $ruta.'nit='.$nit_emisor.'&cuf='.$cuf.'&numero='.$num_fact.'&t='.$tamanio;
        }
        
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
        //Generador de Codigo QR
                //cargamos la librería	
         $this->load->library('ciqrcode');
                  
         //hacemos configuraciones
         $params['data'] = $cadenaQR;//$this->random(30);
         $params['level'] = 'H';
         $params['size'] = 5;
         //decimos el directorio a guardar el codigo qr, en este 
         //caso una carpeta en la raíz llamada qr_code
         $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
         //generamos el código qr
         $this->ciqrcode->generate($params); 
         //echo '<img src="'.base_url().'resources/images/qrcode.png" />';
        //fin generador de codigo QR
         
        
        $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');
        $data['cadenaqr'] = $cadenaQR;
        
        if($data['parametro']['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            $data['_view'] = 'factura/factura_boucher';
        }else{
            
            $dosificacion = $this->Dosificacion_model->get_dosificacion(1); 
            $data['motivos'] = $this->Factura_model->get_all_motivos();
            if($dosificacion['docsec_codigoclasificador'] <= 2){ //FACTURA COMPRA VENTA
//                $data['_view'] = 'factura/factura_carta_servicios';
                $data['_view'] = 'factura/factura_bouchern';
            }
            if($dosificacion['docsec_codigoclasificador'] == 8){ //FACTURA COMPRA VENTA
//                $data['_view'] = 'factura/factura_carta_servicios';
                $data['_view'] = 'factura/factura_bouchern';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 11){ // FACTURA SECTOR EDUCATIVO
                $data['_view'] = 'factura/factura_bouchern';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 12){ // FACTURA SECTOR EDUCATIVO
                $data['_view'] = 'factura/factura_bouchern';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 23){ // FACTURA PREVALORADA
                $data['_view'] = 'factura/factura_boucher_prev';
            }

            if($dosificacion['docsec_codigoclasificador'] == 13){ // FACTURA servicios
                $data['_view'] = 'factura/factura_bouchern';
            }
            
        }
        //$data['_view'] = 'factura/factura_bouchern';
        $this->load->view('layouts/main',$data);
        
        
        }
        else
        {
            echo "<script type='text/javascript>alert('La venta no contiene una factura asociada...!'); </script>'";
            redirect('venta');
        }
        		
        //**************** fin contenido ***************
        }
    }
    
    function factura_recibo_boucher($venta_id,$tipo)
    {
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(17)){
        //**************** inicio contenido ***************           
    
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
       // $data['venta'] = $this->Detalle_venta_model->get_venta_id($venta_id);
        $data['detalle_factura'] = $this->Detalle_venta_model->get_detallerecibo_factura($venta_id);        
        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Factura";
        
        $factura = $this->Factura_model->get_facturarecibo_venta($venta_id);
        
        $data['factura'] = $factura;
        $data['parametro'] = $this->parametros;
        $parametros = $this->parametros;
        $data['tipo'] = $tipo;
        
        if(sizeof($factura)>=1){
            $data['datos_factura'] = $this->Factura_datos_model->get_factura_datos($factura[0]['datos_id']);
            $data['decimales'] = $parametros["parametro_decimales"];
            $data['dos_decimales'] = 2;
        
            $nit_emisor    = $factura[0]['factura_nitemisor'];
            $num_fact      = $factura[0]['factura_numero'];
            $autorizacion  = $factura[0]['factura_autorizacion'];
            $fecha_factura = $factura[0]['factura_fechaventa'];
            $total         = $factura[0]['factura_total'];
            $codcontrol    = $factura[0]['factura_codigocontrol'];
            $nit           = $factura[0]['factura_nit'];
        
        if($parametros['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            // Antiguo
            $cadenaQR = $nit_emisor.'|'.$num_fact.'|'.$autorizacion.'|'.$fecha_factura.'|'.$total.'|'.$total.'|'.$codcontrol.'|'.$nit.'|0|0|0|0';
        }else{
            $ruta      = $factura[0]['factura_ruta'];
            $cuf       = $factura[0]['factura_cuf'];
            $tamanio   = $factura[0]['factura_tamanio'];
            // nuevo
            //$cadenaQR = $ruta.'nit='.$nit.'&cuf='.$cuf.'&numero='.$num_fact.'&t='.$tamanio;
            $cadenaQR = $ruta.'nit='.$nit_emisor.'&cuf='.$cuf.'&numero='.$num_fact.'&t='.$tamanio;
        }
        
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
        //Generador de Codigo QR
                //cargamos la librería	
         $this->load->library('ciqrcode');
                  
         //hacemos configuraciones
         $params['data'] = $cadenaQR;//$this->random(30);
         $params['level'] = 'H';
         $params['size'] = 5;
         //decimos el directorio a guardar el codigo qr, en este 
         //caso una carpeta en la raíz llamada qr_code
         $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
         //generamos el código qr
         $this->ciqrcode->generate($params); 
         //echo '<img src="'.base_url().'resources/images/qrcode.png" />';
        //fin generador de codigo QR
         
        
        $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');
        $data['cadenaqr'] = $cadenaQR;
        
        if($data['parametro']['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            $data['_view'] = 'factura/factura_boucher';
        }else{
            $dosificacion = $this->Dosificacion_model->get_dosificacion(1); 
            $data['motivos'] = $this->Factura_model->get_all_motivos();
            if($dosificacion['docsec_codigoclasificador'] == 1){ //FACTURA COMPRA VENTA
//                $data['_view'] = 'factura/factura_carta_servicios';
                $data['_view'] = 'factura/factura_bouchern';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 8){ //FACTURA COMPRA VENTA
//                $data['_view'] = 'factura/factura_carta_servicios';
                $data['_view'] = 'factura/factura_bouchern';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 11){ // FACTURA SECTOR EDUCATIVO
                $data['_view'] = 'factura/factura_bouchern';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 23){ // FACTURA PREVALORADA
                $data['_view'] = 'factura/factura_boucher_prev';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 13){ // FACTURA SERVICIOS            
                $data['_view'] = 'factura/factura_bouchern';
            }
            
        }
        //$data['_view'] = 'factura/factura_bouchern';
        $this->load->view('layouts/main',$data);
        
        
        }
        else
        {
            echo "<script type='text/javascript>alert('La venta no contiene una factura asociada...!'); </script>'";
            redirect('venta');
        }
        		
        //**************** fin contenido ***************
        }
    }

    
    function factura_boucher_id($factura_id,$tipo)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(17)){
        //**************** inicio contenido ***************           
    
        $usuario_id = $this->session_data['usuario_id'];
        $factura = $this->Factura_model->get_factura_id($factura_id);
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        
        $data['venta'] = $this->Detalle_venta_model->get_venta($factura[0]["venta_id"]);

//        
        // se usa detalle_venta para no modifcar el detalle de factura que ya estaba echo
        $data['detalle_factura'] = $this->Detalle_venta_model->get_detalle_factura_id($factura_id);
        $data['empresa'] = $this->Empresa_model->get_empresa(1);
        $data['page_title'] = "Factura";
        $data['factura'] = $factura;
        $data['tipo'] = $tipo;
        $data['parametro'] = $this->parametros;
        $parametros = $this->parametros;
        if(sizeof($factura)>=1){
            $data['decimales'] = $parametros["parametro_decimales"];
            $data['dos_decimales'] = 2;
        $nit_emisor    = $factura[0]['factura_nitemisor'];
        $num_fact      = $factura[0]['factura_numero'];
        $autorizacion  = $factura[0]['factura_autorizacion'];
        $fecha_factura = $factura[0]['factura_fechaventa'];
        $total         = $factura[0]['factura_total'];
        $codcontrol    = $factura[0]['factura_codigocontrol'];
        $nit           = $factura[0]['factura_nit'];
        
        if($parametros['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            // Antiguo
            $cadenaQR = $nit_emisor.'|'.$num_fact.'|'.$autorizacion.'|'.$fecha_factura.'|'.$total.'|'.$total.'|'.$codcontrol.'|'.$nit.'|0|0|0|0';
        }else{
            $ruta      = $factura[0]['factura_ruta'];
            $cuf       = $factura[0]['factura_cuf'];
            $tamanio   = $factura[0]['factura_tamanio'];
            // nuevo
            //$cadenaQR = $ruta.'nit='.$nit.'&cuf='.$cuf.'&numero='.$num_fact.'&t='.$tamanio;
            $cadenaQR = $ruta.'nit='.$nit_emisor.'&cuf='.$cuf.'&numero='.$num_fact.'&t='.$tamanio;
        }
            
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
        //Generador de Codigo QR
                //cargamos la librería	
         $this->load->library('ciqrcode');
                  
         //hacemos configuraciones
         $params['data'] = $cadenaQR;//$this->random(30);
         $params['level'] = 'H';
         $params['size'] = 5;
         //decimos el directorio a guardar el codigo qr, en este 
         //caso una carpeta en la raíz llamada qr_code
         $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
         //generamos el código qr
         $this->ciqrcode->generate($params); 
         //echo '<img src="'.base_url().'resources/images/qrcode.png" />';
        //fin generador de codigo QR
         
        
        $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');
        $data['cadenaqr'] = $cadenaQR;
        
        if($data['parametro']['parametro_tiposistema'] == 1){// 1 = Sistema de facturacion computarizado
            $data['_view'] = 'factura/factura_boucher';
        }else{
            $dosificacion = $this->Dosificacion_model->get_dosificacion(1); 
            $data['motivos'] = $this->Factura_model->get_all_motivos();
            
            if($dosificacion['docsec_codigoclasificador'] == 1){ //FACTURA COMPRA VENTA
//                $data['_view'] = 'factura/factura_carta_servicios';
                $data['_view'] = 'factura/factura_bouchern';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 8){ //FACTURA COMPRA VENTA
//                $data['_view'] = 'factura/factura_carta_servicios';
                $data['_view'] = 'factura/factura_bouchern';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 11){ // FACTURA SECTOR EDUCATIVO
                $data['_view'] = 'factura/factura_bouchern';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 23){ // FACTURA PREVALORADA
                $data['_view'] = 'factura/factura_boucher_prev';
            }
            
            if($dosificacion['docsec_codigoclasificador'] == 13){ //FACTURA SERVICIOS
                $data['_view'] = 'factura/factura_bouchern';
            }
            
        }
        
        $this->load->view('layouts/main',$data);
        
        }
        else
        {
            echo "<script type='text/javascript>alert('La venta no contiene una factura asociada...!'); </script>'";
            redirect('venta');
        }
        		
        //**************** fin contenido ***************
        }
    }

 

    function recibo_boucher($venta_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
        //**************** inicio contenido ***************           
    
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
        $data['detalle_venta'] = $this->Detalle_venta_model->get_detalle_venta($venta_id);        
        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Recibo";

        $data['parametro'] = $this->parametros;
        $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
   
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
  
        $data['_view'] = 'factura/recibo_boucher';
        $this->load->view('layouts/main',$data);       

        		
        //**************** fin contenido ***************
        }
    }

    function comanda_boucher($venta_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
        //**************** inicio contenido ***************           
    
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta_comanda($venta_id);
        $data['detalle_venta'] = $this->Detalle_venta_model->get_detalle_venta($venta_id);
        //var_dump($this->Detalle_venta_model->get_detalle_venta($venta_id));
        
        $data['empresa'] = $this->Empresa_model->get_empresa(1);  
        
        $data['tipo_servicio'] = $this->Tipo_servicio_model->get_tipo_servicios();        
        $data['page_title'] = "Recibo";

        $data['parametro'] = $this->Parametro_model->get_parametros();
   
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
  
        $data['_view'] = 'factura/comanda_boucher';
        $this->load->view('layouts/main',$data);       

        		
        //**************** fin contenido ***************
        }
    }   
    
    function recibo_carta($venta_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
        //**************** inicio contenido ***************           
    
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
        $data['detalle_venta'] = $this->Detalle_venta_model->get_detalle_venta($venta_id);        
        $data['empresa'] = $this->Empresa_model->get_empresa(1); 
        $data['parametro'] = $this->Parametro_model->get_parametros();
        $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
        $data['page_title'] = "Recibo";

        //$data['parametro'] = $this->Parametro_model->get_parametros();
   
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
  
        $data['_view'] = 'factura/recibo_carta';
        $this->load->view('layouts/main',$data);       

        		
        //**************** fin contenido ***************
        }
    }
    
    function certificado_garantia($venta_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
        //**************** inicio contenido ***************           
    
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
        $data['detalle_venta'] = $this->Detalle_venta_model->get_detalle_venta($venta_id);        
        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Recibo";

        $data['parametro'] = $this->Parametro_model->get_parametros();
   
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
  
        $data['_view'] = 'factura/certificado_garantia';
        $this->load->view('layouts/main',$data);       

        		
        //**************** fin contenido ***************
        }
    }
    
    
//    function nota_garantia($venta_id)
//    {
//        if($this->acceso(21)){
//        //**************** inicio contenido ***************           
//    
//        $usuario_id = $this->session_data['usuario_id'];
//        
//        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
//        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
//        $data['detalle_venta'] = $this->Detalle_venta_model->get_detalle_venta($venta_id);        
//        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
//        $data['page_title'] = "Recibo";
//
//        $data['parametro'] = $this->Parametro_model->get_parametros();
//   
//        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
//  
//        $data['_view'] = 'venta/nota_garantia';
//        $this->load->view('layouts/main',$data);       
//
//        		
//        //**************** fin contenido ***************
//        }
//    }

    /*
     * Adding a new factura
     */
    function add()
    {   
        $data['sistema'] = $this->sistema;
        if($this->acceso(154)){
        //**************** inicio contenido ***************   
                
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'estado_id' => $this->input->post('estado_id'),
				'venta_id' => $this->input->post('venta_id'),
				'factura_fecha' => $this->input->post('factura_fecha'),
				'factura_hora' => $this->input->post('factura_hora'),
				'factura_subtotaltotal' => $this->input->post('factura_subtotaltotal'),
				'factura_ice' => $this->input->post('factura_ice'),
				'factura_exento' => $this->input->post('factura_exento'),
				'factura_descuento' => $this->input->post('factura_descuento'),
				'factura_total' => $this->input->post('factura_total'),
				'factura_numero' => $this->input->post('factura_numero'),
				'factura_autorizacion' => $this->input->post('factura_autorizacion'),
				'factura_llave' => $this->input->post('factura_llave'),
				'factura_fechalimite' => $this->input->post('factura_fechalimite'),
				'factura_codigocontrol' => $this->input->post('factura_codigocontrol'),
				'factura_leyenda' => $this->input->post('factura_leyenda'),
            );
            
            $factura_id = $this->Factura_model->add_factura($params);
            redirect('factura/index');
        }
        else
        {
			$this->load->model('Estado_model');
			$data['all_estado'] = $this->Estado_model->get_all_estado();

			$this->load->model('Venta_model');
			$data['all_venta'] = $this->Venta_model->get_all_venta();
            
            $data['_view'] = 'factura/add';
            $this->load->view('layouts/main',$data);
        }
        		
        //**************** fin contenido ***************
        }
    }


    /*
     * Editing a factura
     */
    function edit($factura_id)
    {   
        $data['sistema'] = $this->sistema;
        if($this->acceso(154)){
        //**************** inicio contenido ***************   
        
        // check if the factura exists before trying to edit it
        $data['factura'] = $this->Factura_model->get_factura($factura_id);
        
        if(isset($data['factura']['factura_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'estado_id' => $this->input->post('estado_id'),
					'venta_id' => $this->input->post('venta_id'),
					'factura_fecha' => $this->input->post('factura_fecha'),
					'factura_hora' => $this->input->post('factura_hora'),
					'factura_subtotaltotal' => $this->input->post('factura_subtotaltotal'),
					'factura_ice' => $this->input->post('factura_ice'),
					'factura_exento' => $this->input->post('factura_exento'),
					'factura_descuento' => $this->input->post('factura_descuento'),
					'factura_total' => $this->input->post('factura_total'),
					'factura_numero' => $this->input->post('factura_numero'),
					'factura_autorizacion' => $this->input->post('factura_autorizacion'),
					'factura_llave' => $this->input->post('factura_llave'),
					'factura_fechalimite' => $this->input->post('factura_fechalimite'),
					'factura_codigocontrol' => $this->input->post('factura_codigocontrol'),
					'factura_leyenda' => $this->input->post('factura_leyenda'),
                );

                $this->Factura_model->update_factura($factura_id,$params);            
                redirect('factura/index');
            }
            else
            {
				$this->load->model('Estado_model');
				$data['all_estado'] = $this->Estado_model->get_all_estado();

				$this->load->model('Venta_model');
				$data['all_venta'] = $this->Venta_model->get_all_venta();

                $data['_view'] = 'factura/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The factura you are trying to edit does not exist.');
        		
        //**************** fin contenido ***************
        }
    }

    /*
     * Deleting factura
     */
    function remove($factura_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(154)){
        //**************** inicio contenido ***************   
                
        $factura = $this->Factura_model->get_factura($factura_id);

        // check if the factura exists before trying to delete it
        if(isset($factura['factura_id']))
        {
            $this->Factura_model->delete_factura($factura_id);
            redirect('factura/index');
        }
        else
            show_error('The factura you are trying to delete does not exist.');
        		
        //**************** fin contenido ***************
        }
    }


    public function generar_excel(){

    $data['sistema'] = $this->sistema;
    $fecha_desde = $this->input->post('fecha_desde');
    $fecha_hasta = $this->input->post('fecha_hasta');
    $opcion = $this->input->post('opcion');
    $cf=0.13;
    if ($opcion == 1) {

    $llamadas = $this->Factura_model->get_factura_ventas($fecha_desde, $fecha_hasta);
    if(count($llamadas) > 0){
        //Cargamos la librería de excel.
        $this->load->library('excel'); 
        $this->excel->setActiveSheetIndex(0);
        $this->excel->getActiveSheet()->setTitle('ventas');
        //Contador de filas
        $contador = 1;
        
        //Le aplicamos ancho las columnas(OPCIONAL).
       /* $this->excel->getActiveSheet()->getColumnDimension('A')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('B')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('D')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('E')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('F')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('G')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('H')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('I')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('J')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('K')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('L')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('M')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('N')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('O')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('P')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('Q')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('R')->setWidth(30);
        //Le aplicamos negrita a los títulos de la cabecera(OPCIONAL).
        $this->excel->getActiveSheet()->getStyle("A{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("B{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("C{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("D{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("F{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("G{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("H{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("I{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("J{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("K{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("L{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("M{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("N{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("O{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("P{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("Q{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("R{$contador}")->getFont()->setBold(true);*/
        //Definimos los títulos de la cabecera.
        $this->excel->getActiveSheet()->setCellValue("A{$contador}", 'ESPECIFICACION');
        $this->excel->getActiveSheet()->setCellValue("B{$contador}", 'N°');
        $this->excel->getActiveSheet()->setCellValue("C{$contador}", 'FECHA');
        $this->excel->getActiveSheet()->setCellValue("D{$contador}", 'N° DE LA FACTURA');
        $this->excel->getActiveSheet()->setCellValue("E{$contador}", 'N° DE AUTORIZACION');
        $this->excel->getActiveSheet()->setCellValue("F{$contador}", 'ESTADO');
        $this->excel->getActiveSheet()->setCellValue("G{$contador}", 'NIT/CI CLIENTE');
        $this->excel->getActiveSheet()->setCellValue("H{$contador}", 'NOMBRE O RAZON SOCIAL');
        $this->excel->getActiveSheet()->setCellValue("I{$contador}", 'IMPORTE TOTAL DE LA VENTA');
        $this->excel->getActiveSheet()->setCellValue("J{$contador}", 'IMPORTE ICE/IEHD/TASAS');
        $this->excel->getActiveSheet()->setCellValue("K{$contador}", 'EXPORTACIONES Y OPERACIONES EXENTAS');
        $this->excel->getActiveSheet()->setCellValue("L{$contador}", 'VENTAS GRAVADAS A TASA CERO');
        $this->excel->getActiveSheet()->setCellValue("M{$contador}", 'SUBTOTAL');
        $this->excel->getActiveSheet()->setCellValue("N{$contador}", 'DESCUENTOS BONIFICACIONES Y REBAJAS OTORGADAS');
        $this->excel->getActiveSheet()->setCellValue("O{$contador}", 'IMPORTE BASE PARA DEBITO FISCAL');
        $this->excel->getActiveSheet()->setCellValue("P{$contador}", 'DEBITO FISCAL');
        $this->excel->getActiveSheet()->setCellValue("Q{$contador}", 'CODIGO DE CONTROL');
        $this->excel->getActiveSheet()->setCellValue("R{$contador}", 'TRANSACCION');
        //Definimos la data del cuerpo.        
        foreach($llamadas as $l){
           //Incrementamos una fila más, para ir a la siguiente.
           $contador++;
           //Informacion de las filas de la consulta.
         
           $this->excel->getActiveSheet()->setCellValue("A{$contador}", $l['factura_ice']);
           $this->excel->getActiveSheet()->setCellValue("B{$contador}", $contador-1);
           $this->excel->getActiveSheet()->setCellValue("C{$contador}", date('d/m/Y', strtotime($l['factura_fecha']))); 
           $this->excel->getActiveSheet()->setCellValue("D{$contador}", $l['factura_numero']);
           $this->excel->getActiveSheet()->setCellValue("E{$contador}", $l['factura_autorizacion']);
           
           $estado_factura = "";
           if($l['estado_id']==1){ $estado_factura="V";}
           else { $estado_factura="A";}
           
           $this->excel->getActiveSheet()->setCellValue("F{$contador}", $estado_factura);
           $this->excel->getActiveSheet()->setCellValue("G{$contador}", $l['factura_nit']);
           $this->excel->getActiveSheet()->setCellValue("H{$contador}", $l['factura_razonsocial']);
           $this->excel->getActiveSheet()->setCellValue("I{$contador}", $l['factura_total']);
           $this->excel->getActiveSheet()->setCellValue("J{$contador}", $l['factura_ice']);
           $this->excel->getActiveSheet()->setCellValue("K{$contador}", $l['factura_exento']);
           $this->excel->getActiveSheet()->setCellValue("L{$contador}", $l['factura_ice']);
           $this->excel->getActiveSheet()->setCellValue("M{$contador}", $l['factura_subtotal']);
           $this->excel->getActiveSheet()->setCellValue("N{$contador}", $l['factura_descuento']);
           $this->excel->getActiveSheet()->setCellValue("O{$contador}", $l['factura_subtotal']);
           $this->excel->getActiveSheet()->setCellValue("P{$contador}", $cf*$l['factura_subtotal']);
           $this->excel->getActiveSheet()->setCellValue("Q{$contador}", $l['factura_codigocontrol']);
           $this->excel->getActiveSheet()->setCellValue("R{$contador}", $l['venta_id']);
        }
        //Le ponemos un nombre al archivo que se va a generar.
        $hoy = date('d/m/Y H:i:s');
        $archivo = "Ventas".$hoy.".xls";
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="'.$archivo.'"');
        header('Cache-Control: max-age=0');
        $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');
        //Hacemos una salida al navegador con el archivo Excel.
        $objWriter->save('php://output');
     }else{
        echo 'No se han encontrado ventas';
        exit;        
     }
 } else{
         $llamadas = $this->Factura_model->get_factura_compras($fecha_desde, $fecha_hasta);
    if(count($llamadas) > 0){
        //Cargamos la librería de excel.
        $this->load->library('excel'); $this->excel->setActiveSheetIndex(0);
        $this->excel->getActiveSheet()->setTitle('Llamadas');
        //Contador de filas
        $contador = 1;
        //Le aplicamos ancho las columnas(OPCIONAL).
       /* $this->excel->getActiveSheet()->getColumnDimension('A')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('B')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('C')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('D')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('E')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('F')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('G')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('H')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('I')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('J')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('K')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('L')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('M')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('N')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('O')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('P')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('Q')->setWidth(30);
        $this->excel->getActiveSheet()->getColumnDimension('R')->setWidth(30);
        //Le aplicamos negrita a los títulos de la cabecera(OPCIONAL).
        $this->excel->getActiveSheet()->getStyle("A{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("B{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("C{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("D{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("F{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("G{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("H{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("I{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("J{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("K{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("L{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("M{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("N{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("O{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("P{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("Q{$contador}")->getFont()->setBold(true);
        $this->excel->getActiveSheet()->getStyle("R{$contador}")->getFont()->setBold(true);*/
        //Definimos los títulos de la cabecera.
        $this->excel->getActiveSheet()->setCellValue("A{$contador}", 'TIPO');
        $this->excel->getActiveSheet()->setCellValue("B{$contador}", 'NIT');
        $this->excel->getActiveSheet()->setCellValue("C{$contador}", 'FACTURA');
        $this->excel->getActiveSheet()->setCellValue("D{$contador}", 'POLIZA');
        $this->excel->getActiveSheet()->setCellValue("E{$contador}", 'AUTORIZACION');
        $this->excel->getActiveSheet()->setCellValue("F{$contador}", 'FECHA');
        $this->excel->getActiveSheet()->setCellValue("G{$contador}", 'IMPORTE');
        $this->excel->getActiveSheet()->setCellValue("H{$contador}", 'ICE');
        $this->excel->getActiveSheet()->setCellValue("I{$contador}", 'EXCENTO');
        $this->excel->getActiveSheet()->setCellValue("J{$contador}", 'NETO');
        $this->excel->getActiveSheet()->setCellValue("K{$contador}", 'CREDITO FISCAL');
        $this->excel->getActiveSheet()->setCellValue("L{$contador}", 'CODIGO DE CONTROL');
       
        
        //Definimos la data del cuerpo.        
        foreach($llamadas as $l){
           //Incrementamos una fila más, para ir a la siguiente.
           $contador++;
           //Informacion de las filas de la consulta.
         
           $this->excel->getActiveSheet()->setCellValue("A{$contador}", $l['factura_id']);
           $this->excel->getActiveSheet()->setCellValue("B{$contador}", $l['factura_nit']);
           $this->excel->getActiveSheet()->setCellValue("C{$contador}", $l['factura_id']);
           $this->excel->getActiveSheet()->setCellValue("D{$contador}", $l['factura_numero']);
           $this->excel->getActiveSheet()->setCellValue("E{$contador}", $l['factura_autorizacion']);
           $this->excel->getActiveSheet()->setCellValue("F{$contador}", $l['factura_fecha']);
           $this->excel->getActiveSheet()->setCellValue("G{$contador}", $l['factura_total']);
           $this->excel->getActiveSheet()->setCellValue("H{$contador}", $l['factura_ice']);
           $this->excel->getActiveSheet()->setCellValue("I{$contador}", $l['factura_exento']);
           $this->excel->getActiveSheet()->setCellValue("J{$contador}", $l['factura_total']);
           $this->excel->getActiveSheet()->setCellValue("K{$contador}", $cf*$l['factura_total']);
           $this->excel->getActiveSheet()->setCellValue("L{$contador}", $l['factura_codigocontrol']);
           
        }
        //Le ponemos un nombre al archivo que se va a generar.
        $hoy = date('d/m/Y H:i:s');
        $archivo = "Compras".$hoy.".xls";
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="'.$archivo.'"');
        header('Cache-Control: max-age=0');
        $objWriter = PHPExcel_IOFactory::createWriter($this->excel, 'Excel5');
        //Hacemos una salida al navegador con el archivo Excel.
        $objWriter->save('php://output');
     }else{
        echo 'No se han encontrado llamadas';
        exit;        
     }

    }
  }
  
    function mostrar_facturas()
    {
        $data['sistema'] = $this->sistema;
        $usuario_id = $this->session_data['usuario_id'];

        if ($this->input->is_ajax_request()) {
            
            $desde = $this->input->post("desde");
            $hasta = $this->input->post("hasta");            
            $opcion = $this->input->post('opcion');   
            $tipo = $this->input->post('tipo');   
            
            if ($opcion==1){
                $datos = $this->Factura_model->get_factura_ventas($desde,$hasta,$tipo);
            }
            else{
                $datos = $this->Factura_model->get_factura_compras($desde,$hasta);
            }
            
            echo json_encode($datos);
            
        }
        else
        {                 
            show_404();
        }
    } 
    
    /*
     * Realizado por: Roberto Carlos Soto Sierra
     * Fecha: 05.03.2019
     */
    function verificador()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(154)){
//        if ($this->session->userdata('logged_in')) {
//            $this->session_data = $this->session->userdata('logged_in');
//            if($this->session_data['tipousuario_id']==1 or $this->session_data['tipousuario_id']==4) {
//                $data = array(
//                    'page_title' => 'Admin >> Mi Cuenta'
//                );
        //**************** inicio contenido ***************            
        
            

            $data['page_title'] = "Verificador";
            $data['dosificacion'] = $this->Dosificacion_model->get_dosificacion(1);
            $data['_view'] = 'factura/verificador';
            $this->load->view('layouts/main',$data);
        }
    }

    
    function codigo_control($dosificacion_llave, $dosificacion_autorizacion, $dosificacion_numfact, $nit,$fecha_trans, $monto)
    {

        //include 'ControlCode.php';

        $code = $this->controlcode->generate($dosificacion_autorizacion,//Numero de autorizacion
                                                   $dosificacion_numfact,//Numero de factura
                                                   $nit,//Número de Identificación Tributaria o Carnet de Identidad
                                                   str_replace('-','',$fecha_trans),//fecha de transaccion de la forma AAAAMMDD
                                                   $monto,//Monto de la transacción
                                                   $dosificacion_llave//Llave de dosificación
                        );        
         return $code;
    }
        
    
    function codigocontrol(){
        
        
        
        $llave = $this->input->post('llave');
        $autorizacion = $this->input->post('autorizacion');
        $numero = $this->input->post('numero');
        $nit = $this->input->post('nit');
        $fecha = $this->input->post('fecha');
        $monto = $this->input->post('monto');
        $bandera = $this->input->post('bandera');
        
        
        
        $codigo = $this->codigo_control($llave, $autorizacion, $numero, $nit,$fecha, $monto);

        echo '[{codigocontrol:"'.$codigo.'"}]';

    }



        //**************** fin contenido ***************
//        			}
//        			else{ redirect('alerta'); }
//        } else { redirect('', 'refresh'); }

    function anular_factura($factura_id,$factura_numero){
        //if($this->acceso(154)){
        //**************** inicio contenido ***************   
                
//        if($factura_id>0)
//        {
//      $data['sistema'] = $this->sistema;          
        $now = "'".date("Y-m-d H:i:s")."'"; //{$now}
        $configuracion = $this->configuracion;
            
        $sql = "select * from factura where factura_id = ".$factura_id;                
        $factura = $this->Factura_model->consultar($sql);
        
        $venta_id = $factura[0]["venta_id"];
         
        if($configuracion["parametro_tiposistema"]==1){
        
            //************** ANULACION FACTURA COMPUTARIZADA 
            
            $sql = "update factura set ".                
                    "factura_subtotal = 0".
                    ",factura_nit = 0".
                    ",factura_razonsocial   = 'ANULADO'".
                    ",factura_ice           = 0".
                    ",factura_exento        = 0".
                    ",factura_descuento     = 0".
                    ",factura_total         = 0".
                    ",factura_codigocontrol     = '0'".
                    ",venta_id     = '0'".
                    ",estado_id     = 3".
                    " where factura_id = ".$factura_id;

            $this->Factura_model->ejecutar($sql);
            
            $sql = "update detalle_factura set ".
                    "venta_id     = '0'".
                    " where factura_id = ".$factura_id;

            $this->Factura_model->ejecutar($sql);
            
            $sql = "update venta set venta_tipodoc = 0 where venta_id = ".$venta_id;
            $this->Factura_model->ejecutar($sql);
            
            //************** FIN ANULACION FACTURA COMPUTARIZADA 

        }else{
            
            //************** ANULACION FACTURA ELECTRONICA EN LINEA
    
                $codigo_motivo =  $this->input->post("motivo_id");
                
                if($codigo_motivo==""){
                    $codigo_motivo =  1;
                }
                
                $dosificacion_id = 1;
                $dosificacion = $this->Dosificacion_model->get_dosificacion($dosificacion_id);
                //$modalidad = $dosificacion["dosificacion_modalidad"];


                    if ($dosificacion['docsec_codigoclasificador']==1)
                            $wsdl = $dosificacion['dosificacion_factura'];

                     if ($dosificacion['dosificacion_modalidad']==1){ //Electronica en linea

                         if ($dosificacion['docsec_codigoclasificador']==2 || $dosificacion['docsec_codigoclasificador']==6 || $dosificacion['docsec_codigoclasificador']==16 || $dosificacion['docsec_codigoclasificador']==23 || $dosificacion['docsec_codigoclasificador']==39 || $dosificacion['docsec_codigoclasificador']==11  || $dosificacion['docsec_codigoclasificador']==16
                                || $dosificacion['docsec_codigoclasificador']==17 || $dosificacion['docsec_codigoclasificador']==8 || $dosificacion['docsec_codigoclasificador']==12 || $dosificacion['docsec_codigoclasificador']==51)
                             $wsdl = $dosificacion['dosificacion_glpelectronica'];


                         if ($dosificacion['docsec_codigoclasificador']==13)
                             $wsdl = $dosificacion['dosificacion_facturaservicios'];


                         if ($dosificacion['docsec_codigoclasificador']==15)
                             $wsdl = $dosificacion['dosificacion_entidadesfinancieras'];

                         if ($dosificacion['docsec_codigoclasificador']==22)
                             $wsdl = $dosificacion['dosificacion_telecomunicaciones'];

                     }

                     if ($dosificacion['dosificacion_modalidad']==2){ // Computarizada en linea

                         if ($dosificacion['docsec_codigoclasificador']==2 || $dosificacion['docsec_codigoclasificador']==6 || $dosificacion['docsec_codigoclasificador']==16 || $dosificacion['docsec_codigoclasificador']==23 || $dosificacion['docsec_codigoclasificador']==39 || $dosificacion['docsec_codigoclasificador']==11  || $dosificacion['docsec_codigoclasificador']==16
                                || $dosificacion['docsec_codigoclasificador']==17 || $dosificacion['docsec_codigoclasificador']==8 || $dosificacion['docsec_codigoclasificador']==12 || $dosificacion['docsec_codigoclasificador']==51)
                            $wsdl = $dosificacion['dosificacion_facturaglp'];
                        
                        if ($dosificacion['docsec_codigoclasificador']==13)
                            $wsdl = $dosificacion['dosificacion_facturaservicios'];
                         
                         if ($dosificacion['docsec_codigoclasificador']==15)
                             $wsdl = $dosificacion['dosificacion_entidadesfinancieras'];
                         
                        if ($dosificacion['docsec_codigoclasificador']==22)
                            $wsdl = $dosificacion['dosificacion_telecomunicaciones'];

                     }                
  
                
                $token = $dosificacion['dosificacion_tokendelegado'];
                
                $opts = array(
                      'http' => array(
                           'header' => "apiKey: TokenApi $token",
                      )
                );
                $context = stream_context_create($opts);

                $cliente = new \SoapClient($wsdl, [
                      'stream_context' => $context,
                      'cache_wsdl' => WSDL_CACHE_NONE,
                      'compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | SOAP_COMPRESSION_DEFLATE,

                      // other options
                ]);

                $usuario_id = $this->session_data['usuario_id'];
                
                $venta = $this->Detalle_venta_model->get_venta($venta_id);
                $usuarioventa_id = $factura[0]['usuario_id'];
                
                $puntoventa = $this->Usuario_model->get_punto_venta_usuario($usuarioventa_id);
                $this->load->model('PuntoVenta_model');
                $punto_venta = $this->PuntoVenta_model->get_puntoventa($puntoventa['puntoventa_codigo']);
                
                $tipoFacturaDoc = 1;
                if ($factura[0]['docsec_codigoclasificador'] == 8 ||$factura[0]['docsec_codigoclasificador'] == 6){
                    $tipoFacturaDoc = 2;
                }
                
                
                $codigoAmbiente = $dosificacion['dosificacion_ambiente'];
                $codigoDocumentoSector = $factura[0]["docsec_codigoclasificador"];
                $codigoEmision = 1;
                $codigoModalidad = $factura[0]['factura_modalidad'];
                $codigoPuntoVenta = $punto_venta['puntoventa_codigo']; //$dosificacion['dosificacion_puntoventa'];
                $codigoSistema = $dosificacion['dosificacion_codsistema'];
                $codigoSucursal = $dosificacion['dosificacion_codsucursal'];
                $cufd = $punto_venta['cufd_codigo']; //$dosificacion['dosificacion_cufd'];
                $cuis = $punto_venta['cuis_codigo']; //$dosificacion['dosificacion_cuis']; 
                $nit =  $dosificacion['dosificacion_nitemisor'];
                $tipoFacturaDocumento = $tipoFacturaDoc; //1 con derecho a credito fiscal / 2 Sin derecho a credito fiscal //1 para facturas comerciales * 2 para facturas tasas cero
                $codigoMotivo = $codigo_motivo;
                $cuf = $factura[0]['factura_cuf'];
                
                /* ordenado segun SoapUI */
                
                $parametros = ["SolicitudServicioAnulacionFactura" => [
                    "codigoAmbiente" => $codigoAmbiente,
                    "codigoDocumentoSector" => $codigoDocumentoSector,
                    "codigoEmision" => $codigoEmision,
                    "codigoModalidad" => $codigoModalidad,
                    "codigoPuntoVenta" => $codigoPuntoVenta,
                    "codigoSistema" => $codigoSistema,
                    "codigoSucursal" => $codigoSucursal,
                    "cufd" => $cufd,
                    "cuis" => $cuis, 
                    "nit" =>  $nit,
                    "tipoFacturaDocumento" => $tipoFacturaDocumento, //averiguar donde se almacena esto
                    "codigoMotivo" => $codigoMotivo,
                    "cuf" => $cuf
                ]];

                //var_dump($parametros);
                $resultado = $cliente->anulacionFactura($parametros);
                $res = $resultado->RespuestaServicioFacturacion->transaccion;
                $mensaje = "";
                
//                    var_dump($resultado);
//                    var_dump($res);
                if ($res){
                    //$codigo_recepcion = $resultado->RespuestaListaEventos->codigoRecepcionEventoSignificativo;                    
                    //$mensaje = "EVENTO REGISTRADO CON ÉXITO, CODIGO RECEPCION: ".$codigo_recepcion.",".$descripcion;
                    
                    
                    //******************************************************
                    //      Backup de las facturas a anular
                        $sql = "insert into factura_bitacora (select * from factura where factura_id = {$factura_id})";
                        $this->Venta_model->ejecutar($sql);
                        
                        $sql = "insert into detalle_factura_bitacora (select * from detalle_factura where factura_id = {$factura_id})";
                        $this->Venta_model->ejecutar($sql);
                    
                    //******************************************************                        
                    
                    $factura_cuf = $factura[0]["factura_cuf"];
                    $factura_total           = $factura[0]["factura_total"];

                    $sql = "update factura set ".                
                            "factura_subtotal = 0".
                            ",factura_nit = 0".
                            ",factura_razonsocial   = 'ANULADO'".
                            ",factura_ice           = 0".
                            ",factura_exento        = 0".
                            ",factura_descuento     = 0".
                            ",factura_total         = 0".
                            ",factura_codigocontrol     = '0'".
                            ",venta_id     = '0'".
                            ",estado_id     = 3".
                            " where factura_id = ".$factura_id;

                    $this->Factura_model->ejecutar($sql);

                    $sql = "update venta set venta_tipodoc = 0 where venta_id = ".$venta_id;
                    $this->Factura_model->ejecutar($sql);
                    
                    $cliente = $this->Cliente_model->get_cliente($venta[0]['cliente_id']);
                    $sql =  "select count(*) as cantidad from detalle_venta where venta_id = ".$venta[0]['venta_id'];
                    $contx = $this->Venta_model->consultar($sql);
                    $cont = $contx[0]['cantidad'];

                    $prec_total = $venta[0]['venta_total'];
                    //*********** Administracion de caja *********
                    $caja_id = 0;
                    $caja = $this->Caja_model->get_caja_usuario($usuarioventa_id);
                    if (!sizeof($caja)>0){ // si la caja no esta iniciada
                        //iniciar caja y dejarla en pendiente
                        $caja_id = 0;
                    }else{
                        $caja_id = $caja[0]["caja_id"];
                    }
                    //*********** FIN Administracion de caja *********
                    
                    $borrar_venta = $this->input->post("borrar_venta");
                    
                    if ($borrar_venta != 1) $borrar_venta = 0;
                    
                    
                    $mensaje_anular = "";
                    if($borrar_venta == 1){
                        $mensaje_anular  = "VENTA Nº 00".$venta_id.", ";
                    }
                    $bitacoracaja_evento = "ANULAR ".$mensaje_anular."FACTURA N°".$factura[0]["factura_numero"].", CLIENTE: ".$cliente['cliente_nombre']."| PROD.: ".$cont." | PREC.TOT.: ".number_format($prec_total,2,".",",");
                    $bitacoracaja_tipo = 2;

                    $sql = "insert into bitacora_caja(bitacoracaja_fecha, bitacoracaja_hora, bitacoracaja_evento, 
                            usuario_id, bitacoracaja_montoreg, bitacoracaja_montocaja, bitacoracaja_tipo, caja_id) value(date({$now}),time({$now})".
                    ",'".$bitacoracaja_evento."',".$usuarioventa_id.",".$factura[0]["factura_total"].",0,".$bitacoracaja_tipo.",".$caja_id.")";

                    $this->Venta_model->ejecutar($sql);
                    //****************** fin bitacora caja
                    
                    if($borrar_venta == 1){
                        //**************** inicio contenido ***************
                        
                        $sql =  "update detalle_venta set detalleven_cantidad = 0, detalleven_precio = 0, detalleven_subtotal = 0, detalleven_total = 0 where venta_id = ".$venta_id;
                        $this->Venta_model->ejecutar($sql);

                        $sql =  "update venta set venta_subtotal = 0, venta_descuento = 0, venta_total = 0, venta_efectivo = 0, venta_cambio = 0, estado_id = 3 where venta_id = ".$venta_id;
                        $this->Venta_model->ejecutar($sql);

                        $sql =  "update cuota  set
                                cuota_numcuota = 0
                                ,cuota_capital = 0
                                ,cuota_interes = 0
                                ,cuota_moradias = 0
                                ,cuota_multa = 0
                                ,cuota_subtotal = 0
                                ,cuota_descuento = 0
                                ,cuota_total = 0
                                ,cuota_cancelado = 0
                                ,cuota_numercibo = 0
                                ,cuota_saldo = 0
                                ,estado_id = 27
                                ,cuota_saldocredito = 0
                                 where credito_id = (select credito_id from credito where venta_id = ".$venta_id." ) ";
                        $this->Venta_model->ejecutar($sql);

                        $sql =  "update credito set
                                estado_id = 27
                                ,credito_monto = 0
                                ,credito_cuotainicial = 0
                                ,credito_interesproc = 0
                                ,credito_interesmonto = 0
                                ,credito_numpagos = 0
                                ,credito_tipointeres = 0
                                where venta_id = ".$venta_id;
                        $this->Venta_model->ejecutar($sql);

                        
                        $sql =  "update pedido set estado_id = 11 where pedido_id = (select v.pedido_id from venta v where v.venta_id = ".$venta_id.")";
                        $this->Venta_model->ejecutar($sql);

                        
                        $this->Inventario_model->actualizar_inventario(); 
                        //**************** fin contenido ***************
                    }
                    
                    $correo = $this->input->post("factura_correo");
                    $res = $this->enviar_correoanulacion($factura_id, $correo, $factura[0]["factura_numero"], $factura[0]["factura_fecha"], $factura_total, $factura_cuf);
                    
                }else{
                        
                    //$mensajeresultado = $resultado->RespuestaServicioFacturacion;
                    $mensaje = $resultado->RespuestaServicioFacturacion;
                    
//                    $mensaje = "OCURRIO UN ERROR, CODIGO: ".$mensajeresultado->codigo.", ".$mensajeresultado->descripcion;
                    
                }
                
                echo json_encode($resultado->RespuestaServicioFacturacion);
                //echo $mensaje;
            //************** FIN ANULACION FACTURA ELECTRONICA EN LINEA
            
        }
        
          //  redirect('factura/mensaje/'.$factura_id."/".$factura_numero);
//        }
//        else
//            show_error('The factura you are trying to delete does not exist.');
        		
        //**************** fin contenido ***************
        //}
        
    }
    
//Anulacion masiva por fecha    
    function anulacion_masiva(){
        //if($this->acceso(154)){
        //**************** inicio contenido ***************   
                
//        if($factura_id>0)
//        {
//                 
        $data['sistema'] = $this->sistema;
        $codigo_motivo =  1; //$this->input->post("motivo_id");
        $dosificacion_id = 1;
        $dosificacion = $this->Dosificacion_model->get_dosificacion($dosificacion_id);
        
        $fecha_facturas = $this->input->post('factura_fecha');
        $documento_sector = $this->input->post('docsec_codigoclasificador');
        $operacion = $this->input->post('operacion'); //1 anular, 2 revertir
        
        $fecha_parametro = $fecha_facturas;
        
        if($operacion==1){ //Anulacion de facturas 
            $sql = "select * from factura where estado_id = 1 and factura_fecha = '".$fecha_parametro."' and factura_codigodescripcion = 'VALIDADA' and ".
                   " docsec_codigoclasificador = ".$documento_sector;
            $facturas =  $this->Venta_model->consultar($sql);
            
            foreach ($facturas as $f){

                $factura_id = $f["factura_id"];
                $factura_numero = $f["factura_numero"];
                $this->anular_factura($factura_id, $factura_numero);

            }
        }
        
        if($operacion==2){//Reversion de anulaciones
            
            $sql = "select * from factura where estado_id = 3 and factura_fecha = '".$fecha_parametro."' and ".
                   " docsec_codigoclasificador = ".$documento_sector;
            $facturas =  $this->Venta_model->consultar($sql);
            
            foreach ($facturas as $f){

                $factura_id = $f["factura_id"];
                $this->revertir_anulacion_masiva($factura_id);

            }
            
        }
                //$this->index();

    }
    
    /* anula la factura mal emitida, la que noo fue enviada a  impuestos!.  */
    function anular_factura_malemitida($factura_id,$factura_numero){
        
        $data['sistema'] = $this->sistema;
        //$configuracion = $this->configuracion[0];
            
        $sql = "select * from factura where factura_id = ".$factura_id;                
        $factura = $this->Factura_model->consultar($sql);
        
        $venta_id = $factura[0]["venta_id"];
         
        
        //******************************************************
        //      Backup de las facturas a anular
            $sql = "insert into factura_bitacora (select * from factura where factura_id = {$factura_id})";
            $this->Venta_model->ejecutar($sql);

            $sql = "insert into detalle_factura_bitacora (select * from detalle_factura where factura_id = {$factura_id})";
            $this->Venta_model->ejecutar($sql);

        //******************************************************      
                    
        //if($configuracion["parametro_tiposistema"]==1){
        
            //************** ANULACION FACTURA COMPUTARIZADA 
            
            $sql = "update factura set ".                
                    "factura_subtotal = 0".
                    ",factura_nit = 0".
                    ",factura_razonsocial   = 'ANULADO'".
                    ",factura_ice           = 0".
                    ",factura_exento        = 0".
                    ",factura_descuento     = 0".
                    ",factura_total         = 0".
                    ",factura_codigocontrol     = '0'".
                    ",venta_id     = '0'".
                    ",estado_id     = 3".
                    " where factura_id = ".$factura_id;

            $this->Factura_model->ejecutar($sql);

            $sql = "update venta set venta_tipodoc = 0 where venta_id = ".$venta_id;
            $this->Factura_model->ejecutar($sql);
            
            $sql = "update detalle_factura set detallefact_cantidad = 0, detallefact_codigo = '',
                        detallefact_unidad = '',
                        detallefact_precio = 0, detallefact_subtotal = 0, detallefact_descuento = 0,
                        detallefact_descuentoparcial = 0, detallefact_total = 0,
                        detallefact_preferencia = '', detallefact_caracteristicas = '',
                        detallefact_unidadfactor = '' where factura_id = $factura_id";
            $this->Factura_model->ejecutar($sql);
            /* una vez anulado la Factura ma emitida, se procede a anular la venta */
            //**************** bitacora caja
            $usuario_id = $this->session_data['usuario_id'];
            $venta = $this->Detalle_venta_model->get_venta($venta_id);
            $cliente = $this->Cliente_model->get_cliente($venta[0]['cliente_id']);
            $sql =  "select count(*) as cantidad from detalle_venta where venta_id = ".$venta[0]['venta_id'];
            $contx = $this->Venta_model->consultar($sql);
            $cont = $contx[0]['cantidad'];

            $prec_total = $venta[0]['venta_total'];
            
            $usuarioventa_id = $factura[0]['usuario_id'];
            //*********** Administracion de caja *********
            $caja_id = 0;
            $caja = $this->Caja_model->get_caja_usuario($usuarioventa_id);
            if (!sizeof($caja)>0){ // si la caja no esta iniciada
                //iniciar caja y dejarla en pendiente
                $caja_id = 0;
            }else{
                $caja_id = $caja[0]["caja_id"];
            }
            //*********** FIN Administracion de caja *********
                    
            $bitacoracaja_evento = "ANULAR VENTA Nº 00".$venta_id." CLIENTE: ".$cliente['cliente_nombre']."| PROD.: ".$cont." | PREC.TOT.: ".number_format($prec_total,2,".",",");
            $bitacoracaja_tipo = 2;
            $now = "'".date("Y-m-d H:i:s")."'"; //{$now}
            $sql = "insert into bitacora_caja(bitacoracaja_fecha, bitacoracaja_hora, bitacoracaja_evento, 
                    usuario_id, bitacoracaja_montoreg, bitacoracaja_montocaja, bitacoracaja_tipo, caja_id) value(date({$now}),time({$now})".
                    ",'".$bitacoracaja_evento."',".$usuarioventa_id.",".$prec_total.",0,".$bitacoracaja_tipo.",".$caja_id.")";

            $this->Venta_model->ejecutar($sql);
            //****************** fin bitacora caja
            
            
            //**************** inicio contenido ***************   

        $sql =  "update detalle_venta set detalleven_cantidad = 0, detalleven_precio = 0, detalleven_subtotal = 0, detalleven_total = 0 where venta_id = ".$venta_id;
        $this->Venta_model->ejecutar($sql);

        $sql =  "update venta set venta_subtotal = 0, venta_descuento = 0, venta_total = 0, venta_efectivo = 0, venta_cambio = 0, estado_id = 3 where venta_id = ".$venta_id;
        $this->Venta_model->ejecutar($sql);
        
        $sql =  "update cuota  set
                cuota_numcuota = 0
                ,cuota_capital = 0
                ,cuota_interes = 0
                ,cuota_moradias = 0
                ,cuota_multa = 0
                ,cuota_subtotal = 0
                ,cuota_descuento = 0
                ,cuota_total = 0
                ,cuota_cancelado = 0
                ,cuota_numercibo = 0
                ,cuota_saldo = 0
                ,estado_id = 27
                ,cuota_saldocredito = 0
                 where credito_id = (select credito_id from credito where venta_id = ".$venta_id." ) ";
        $this->Venta_model->ejecutar($sql);

        $sql =  "update credito set
                estado_id = 27
                ,credito_monto = 0
                ,credito_cuotainicial = 0
                ,credito_interesproc = 0
                ,credito_interesmonto = 0
                ,credito_numpagos = 0
                ,credito_tipointeres = 0
                where venta_id = ".$venta_id;
        $this->Venta_model->ejecutar($sql);

        $sql =  "update pedido set estado_id = 11 where pedido_id = (select v.pedido_id from venta v where v.venta_id = ".$venta_id.")";
        $this->Venta_model->ejecutar($sql);

        $this->Inventario_model->actualizar_inventario(); 
        //**************** fin contenido ***************
        echo json_encode("ok");
    }
    
    /*
     * Realizado por: Roberto Carlos Soto Sierra
     * Fecha: 05.03.2019
     */
    function mensaje($factura_id,$factura_numero)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(17)){
        //**************** inicio contenido ***************            
        

            $data['factura_id'] = $factura_id;
            $data['factura_numero'] = $factura_numero;
            $data['page_title'] = "Facturada Anulada";
            $data['_view'] = 'factura/mensaje';

            $data['page_title'] = "Verificador";            
            $this->load->view('layouts/main',$data);
            
        //**************** fin contenido ***************
        }   
            
    }    

    /*
     * Realizado por: Roberto Carlos Soto Sierra
     * Fecha: 05.05.2019
     */
    function imprimir_factura($venta_id,$tipo)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(17)){
        //**************** inicio contenido ***************            
                
            $parametros = $this->parametros;

            if (isset($parametros)){
                
                if ($parametros['parametro_tipoimpresora']=="FACTURADORA")
                    $this->factura_boucher($venta_id,$tipo);
                else
                    $this->factura_carta($venta_id,$tipo);
            }

        //**************** fin contenido ***************
        } 
            
    }    

    /*
     * Realizado por: Roberto Carlos Soto Sierra
     * Fecha: 05.05.2019
     */
    function imprimir_factura_id($factura_id,$tipo)
    {
     
        
        if($this->acceso(17)){
        //**************** inicio contenido ***************            

            
            if ($this->parametros['parametro_tipoimpresora']=="FACTURADORA"){

                        $this->factura_boucher_id($factura_id,$tipo);
                    }
                    else{

                        $this->factura_carta_id($factura_id,$tipo);
                    }

           

        //**************** fin contenido ***************
        } 
            
    }    

    function imprimir_recibo($venta_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
            
        //**************** inicio contenido ***************            
            //$parametros = $this->Parametro_model->get_parametros();
            
            if (sizeof($this->parametros)>0){
                
                if ($this->parametros['parametro_notaentrega']==1){ // Si esta configurado para nota de entrega
                    
                    if ($this->parametros['parametro_tipoimpresora']=="FACTURADORA")
                    {    
                        if ($this->parametros['parametro_comprobante']==1) $this->recibo_boucher($venta_id);
                        if ($this->parametros['parametro_comprobante']==2) $this->factura_recibo_boucher($venta_id,1);
                        
                    }
                    else
                        $this->recibo_carta($venta_id);
                    
                }elseif($this->parametros['parametro_notaentrega']==2){
                    
                    if ($this->parametros['parametro_tipoimpresora']=="FACTURADORA")
                        
                        $this->notae_boucher($venta_id);
                    
                    
                    else
                        $this->notae_carta($venta_id);
                }else{
                    
                    $this->notapreimpreso_carta($venta_id);
                }
          
            }
        //**************** fin contenido ***************
            
        }
    }   
    
    /*
     * emitir factura   
     */
    function emisor()
    {    
        $data['sistema'] = $this->sistema;
        if($this->acceso(12)){
        //**************** inicio contenido ***************        
        $data['rolusuario'] = $this->session_data['rol'];
        $usuario_id = $this->session_data['usuario_id'];
        $tipousuario_id = $this->session_data['tipousuario_id'];        
        
        $factura_id = 1;
        
        $data['page_title'] = "Emisor";
        
        $venta_id = 1889;
        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['dosificacion'] = $this->Dosificacion_model->get_dosificacion(1);        
        
        //$data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
        $data['factura'] = $this->Factura_model->get_factura($factura_id);
        $data['detalle_factura'] = $this->Factura_model->get_detalle_factura_aux($usuario_id);
        $data['parametro'] = $this->Parametro_model->get_parametros();
                        
        
//        
//        $data['dosificacion'] = $this->Dosificacion_model->get_all_dosificacion();
//        $data['pedidos'] = $this->Pedido_model->get_pedidos_activos();
//        $data['cliente'] = $this->Venta_model->get_cliente_inicial();
//        $data['categoria_producto'] = $this->Venta_model->get_categoria_producto();
//        $data['tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo();
//        $data['forma_pago'] = $this->Forma_pago_model->get_all_forma();
//        $data['tipo_cliente'] = $this->Tipo_cliente_model->get_all_tipo_cliente();
//        $data['tipo_servicio'] = $this->Tipo_servicio_model->get_all_tipo_servicio();
//        $data['parametro'] = $this->Parametro_model->get_parametros();
//        $data['usuario'] = $this->Usuario_model->get_all_usuario_activo();
//        $data['preferencia'] = $this->Preferencia_model->get_all_preferencia();
//        $data['usuario_id'] = $usuario_id;
//        $data['tipousuario_id'] = $tipousuario_id;
//        
        //$data['venta'] = $this->Venta_model->get_all_venta($usuario_id);
        
        $data['_view'] = 'factura/emisor';
        $this->load->view('layouts/main',$data);
        		
        //**************** fin contenido ***************
        }    
        
    }
    /* nota de entrega con logo empresa y direccion de cliente.. */
    function notae_carta($venta_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
        $data['detalle_venta'] = $this->Detalle_venta_model->get_detalle_venta($venta_id);        
        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Recibo";

        $data['parametro'] = $this->Parametro_model->get_parametros();
        $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
                
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
  
        $data['_view'] = 'factura/notae_carta';
        $this->load->view('layouts/main',$data);
        }
    }
    /* nota de entrega con logo empresa y direccion de cliente.. */
    function notae_boucher($venta_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
            $usuario_id = $this->session_data['usuario_id'];

            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
            $data['detalle_venta'] = $this->Detalle_venta_model->get_detalle_venta($venta_id);        
            $data['empresa'] = $this->Empresa_model->get_empresa(1);        
            $data['page_title'] = "Recibo";

            $data['parametro'] = $this->Parametro_model->get_parametros();
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera

            $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras

            $data['_view'] = 'factura/notae_boucher';
            $this->load->view('layouts/main',$data);
        }
    }
    /* nota de entrega en hojas preimpresas.... */
    function notapreimpreso_carta($venta_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
        $usuario_id = $this->session_data['usuario_id'];
        
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
        $data['detalle_venta'] = $this->Detalle_venta_model->get_detalle_venta($venta_id);        
        //$data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Recibo";

        $data['parametro'] = $this->Parametro_model->get_parametros();
   
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
  
        $data['_view'] = 'factura/notapreimpreso_carta';
        $this->load->view('layouts/main',$data);
        }
    }
    
// facturas de compras - ventas SOAP
    
    function verificarcomunicacion(){
        try{
            
            if ($this->input->is_ajax_request()) {
                
                $dosificacion_id = 1;
                $dosificacion = $this->Dosificacion_model->get_dosificacion(1);

                $wsdl = $dosificacion['dosificacion_factura']; //obtenemos y asignamos el apiKey con el nombre de TokenApi, ejm:
                $token = $dosificacion['dosificacion_tokendelegado'];
                
                $opts = array(
                      'http' => array(
                           'header' => "apiKey: TokenApi $token",
                      )
                );


                $context = stream_context_create($opts);

                $cliente = new \SoapClient($wsdl, [
                      'stream_context' => $context,
                      'cache_wsdl' => WSDL_CACHE_NONE,
                      'compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | SOAP_COMPRESSION_DEFLATE,

                ]);
                
                /* ---------------------F I N  segun EJEMPLO ---------------------- */
                /* ordenado segun SoapUI */
                $resultado = $cliente->verificarComunicacion();
                echo json_encode($resultado);
                
                
            }else{                 
                show_404();
            }
        }catch (Exception $e){
            
            
            echo 'Ocurrio algo inesperado; revisar datos!.';
        }
    }
    /* obtiene el correo de un cliente.. sele manda venta_id */
    function get_correo()
    {
        if($this->input->is_ajax_request()){
            $venta_id = $this->input->post("venta_id");
            $datos = $this->Factura_model->get_correoe($venta_id);
            echo json_encode($datos);
        }
        else
        {
            show_404();
        }
    }
    //monto, codigo de recepcion
    function enviar_correoanulacion($factura_id, $correo,$factura_numero, $factura_fecha, $total, $cod_autorizacion)
    {
        
        if($correo != null || $correo != ""){
        //if ($this->input->is_ajax_request()) {
            $this->load->library('email');
            $this->email->set_newline("\r\n");
            $this->load->model('Configuracion_email_model');
            $configuracion = $this->Configuracion_email_model->get_configuracion_email(1);
            $factura = $this->Factura_model->get_factura_anulada($factura_id);
            
            //var_dump($factura);
            $cliente = $factura["factura_razonsocial"];
            $cuf = $factura["factura_cuf"];
            
            
            $config['protocol'] = $configuracion['email_protocolo'];
            $config['smtp_host'] = $configuracion['email_host'];
            $config['smtp_port'] = $configuracion['email_puerto'];
            $config['smtp_user'] = $configuracion['email_usuario'];
            $config['smtp_pass'] = $configuracion['email_clave'];
            $config['smtp_from_name'] = $configuracion['email_nombre'];
            $config['priority'] = $configuracion['email_prioridad'];
            $config['charset'] = $configuracion['email_charset'];
            $config['smtp_crypto'] = $configuracion['email_encriptacion'];
            $config['wordwrap'] = TRUE;
            $config['newline'] = "\r\n";
            $config['mailtype'] = $configuracion['email_tipo'];
            $email_copia = '';

            $this->email->initialize($config);

            $this->email->from($config['smtp_user'], $config['smtp_from_name']);
            $this->email->to($correo);
            $this->email->cc($configuracion['email_copia']);
    //            $this->email->bcc($attributes['cc']);
            $this->email->subject("Factura Digital, Anulación de su factura");

            $la_fecha = date("d/m/Y", strtotime($factura_fecha));
            
            $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
            $literal =  num_to_letras($total,' Bolivianos');
            
            

            
            
            
            $html = '
            <!DOCTYPE html>
            <html lang="es">
            <head>
                <meta charset="UTF-8">
                <meta name="viewport" content="width=device-width, initial-scale=1.0">
                <title>Mensaje de correo electrónico</title>
                <!-- Bootstrap CSS -->
                <link href="https://cdn.jsdelivr.net/npm/
                bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" 
                rel="stylesheet">
            </head>
            <body>
                <center>
                    <table class="table table-bordered"> 
                        <tr>
                            <td style="background: #D35400; color:white; 
                            font-family:Arial;">
                                <center>
                                    <p><b>'.$this->empresa["empresa_nombre"].'</b></p>
                                    <p>'.$this->empresa["empresa_eslogan"].'</p>
                                </center>
                            </td>
                        </tr>
                        <tr>
                            <td style="background: gray; font-family:Arial;">
                                <h2>Confirmación de Anulación!</h2>
                            </td>
                        </tr>
                        <tr>
                            <td style="background: lightgray; font-family:Arial;">
                                <p>Señor(es): '.$cliente.'</p>
                                <p>Mediante este mensaje le informamos 
                                 que su factura fue ANULADA.</p>
                                <h3>Datos de la factura</h3>
                                <p>FACTURA Nº: '.$factura_numero.'
                                MONTO Bs: '.number_format($total,2,".",",").'</p>
                                <p>¡Gracias por su preferencia!</p>
                            </td>
                        </tr>

                        <tr>
                            <td style="background: black; 
                            color: white; 
                            font-family:Arial; font-size:10pt; 
                            line-height: 10px">
                                <center><br>
                                   <a href="https://www.facebook.com/sisximpleman/" 
                                   style="color: white; text-decoration: none;"
                                    <p><b>XIMPLEMAN</b>
                                    </a>
                                   es un producto de 
                                   <a href="https://www.passwordbolivia.com" 
                                   style="color: white; text-decoration: none;"
                                    target="_blank"><b>PASSWORD IHS</b></a></p>
                                </center>
                            </td>
                        </tr>
                    </table>
                </center>

                <script src="https://cdn.jsdelivr.net/
                npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js">
                </script>
            </body>
            </html>';
            
            
            $html = "
            <!DOCTYPE html>
            <html lang='es'>
            <head>
                <meta charset='UTF-8'>
                <meta name='viewport' content='width=device-width, initial-scale=1.0'>
                <title>Mensaje de correo electrónico</title>
                <!-- Bootstrap CSS -->
                <link href='https://cdn.jsdelivr.net/npm/
                bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css' 
                rel='stylesheet'>
            </head>
            <body>
                <center>
                    <table class='table table-bordered'> 
                        <tr>
                            <td style='background: #D35400; color:white; 
                            font-family:Arial;'>
                                <center>
                                    <p><b>".$this->empresa['empresa_nombre']."</b></p>
                                    <p>".$this->empresa['empresa_eslogan']."</p>
                                </center>
                            </td>
                        </tr>
                        <tr>
                            <td style='background: gray; font-family:Arial;'>
                                <h2>Confirmación de Anulación!</h2>
                            </td>
                        </tr>
                        <tr>
                            <td style='background: lightgray; font-family:Arial;'>
                                <p>Señor(es): ".$cliente."</p>
                                <p>Mediante este mensaje le informamos 
                                 que su factura fue ANULADA.</p>
                                <h3>Datos de la factura</h3>
                                <p>FACTURA Nº: ".$factura_numero."
                                <br>MONTO Bs: ".number_format($total,2,'.',',')."<br>FECHA: ".$la_fecha."</p>
                                {$cuf}
                                <p>¡Gracias por su preferencia!</p>
                            </td>
                        </tr>

                        <tr>
                            <td style='background: black; 
                            color: white; 
                            font-family:Arial; font-size:10pt; 
                            line-height: 10px'>
                                <center><br>
                                   <a href='https://www.facebook.com/sisximpleman/' 
                                   style='color: white; text-decoration: none;'
                                    <p><b>XIMPLEMAN</b>
                                    </a>
                                   es un producto de 
                                   <a href='https://www.passwordbolivia.com' 
                                   style='color: white; text-decoration: none;'
                                    target='_blank'><b>PASSWORD IHS</b></a></p>
                                </center>
                            </td>
                        </tr>
                    </table>
                </center>

                <script src='https://cdn.jsdelivr.net/
                npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js'>
                </script>
            </body>
            </html>";

            //echo $html;
            $this->email->message($html);

            if($this->email->send()) {
                $resultado = true;        
            } else {
                $resultado = false;
            }
            return $resultado;
            //echo json_encode($resultado);
        /*}else{                 
            show_404();
        }*/              
        }
    }
    
    //monto, codigo de recepcion
    function enviar_correoreversion($factura_id, $correo,$factura_numero, $factura_fecha, $total, $cod_autorizacion)
    {
        
        if($correo != null || $correo != ""){
        //if ($this->input->is_ajax_request()) {
            $this->load->library('email');
            $this->email->set_newline("\r\n");
            $this->load->model('Configuracion_email_model');
            $configuracion = $this->Configuracion_email_model->get_configuracion_email(1);
            $factura = $this->Factura_model->get_factura_anulada($factura_id);
            
            //var_dump($factura);
            $cliente = $factura["factura_razonsocial"];
            $cuf = $factura["factura_cuf"];
            $total = $factura["factura_total"];
            
            
            $config['protocol'] = $configuracion['email_protocolo'];
            $config['smtp_host'] = $configuracion['email_host'];
            $config['smtp_port'] = $configuracion['email_puerto'];
            $config['smtp_user'] = $configuracion['email_usuario'];
            $config['smtp_pass'] = $configuracion['email_clave'];
            $config['smtp_from_name'] = $configuracion['email_nombre'];
            $config['priority'] = $configuracion['email_prioridad'];
            $config['charset'] = $configuracion['email_charset'];
            $config['smtp_crypto'] = $configuracion['email_encriptacion'];
            $config['wordwrap'] = TRUE;
            $config['newline'] = "\r\n";
            $config['mailtype'] = $configuracion['email_tipo'];
            $email_copia = '';

            $this->email->initialize($config);

            $this->email->from($config['smtp_user'], $config['smtp_from_name']);
            $this->email->to($correo);
            $this->email->cc($configuracion['email_copia']);
    //            $this->email->bcc($attributes['cc']);
            $this->email->subject("Factura Digital, Anulación de su factura");

            $la_fecha = date("d/m/Y", strtotime($factura_fecha));
            
            $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
            $literal =  num_to_letras($total,' Bolivianos');
            
            
            $html = "
            <!DOCTYPE html>
            <html lang='es'>
            <head>
                <meta charset='UTF-8'>
                <meta name='viewport' content='width=device-width, initial-scale=1.0'>
                <title>Mensaje de correo electrónico</title>
                <!-- Bootstrap CSS -->
                <link href='https://cdn.jsdelivr.net/npm/
                bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css' 
                rel='stylesheet'>
            </head>
            <body>
                <center>
                    <table class='table table-bordered'> 
                        <tr>
                            <td style='background: #D35400; color:white; 
                            font-family:Arial;'>
                                <center>
                                    <p><b>".$this->empresa['empresa_nombre']."</b></p>
                                    <p>".$this->empresa['empresa_eslogan']."</p>
                                </center>
                            </td>
                        </tr>
                        <tr>
                            <td style='background: gray; font-family:Arial;'>
                                <h2>Reversión Confirmada</h2>
                            </td>
                        </tr>
                        <tr>
                            <td style='background: lightgray; font-family:Arial;'>
                                <p>Señor(es): ".$cliente."</p>
                                <p>Mediante este mensaje le informamos 
                                 que su factura anulada fué REVERTIDA.</p>
                                <h3>Datos de la factura</h3>
                                <p>FACTURA Nº: ".$factura_numero."
                                <br>MONTO Bs: ".number_format($total,2,'.',',')."<br>FECHA: ".$la_fecha."</p>
                                {$cuf}
                                <p>¡Gracias por su preferencia!</p>
                            </td>
                        </tr>

                        <tr>
                            <td style='background: black; 
                            color: white; 
                            font-family:Arial; font-size:10pt; 
                            line-height: 10px'>
                                <center><br>
                                   <a href='https://www.facebook.com/sisximpleman/' 
                                   style='color: white; text-decoration: none;'
                                    <p><b>XIMPLEMAN</b>
                                    </a>
                                   es un producto de 
                                   <a href='https://www.passwordbolivia.com' 
                                   style='color: white; text-decoration: none;'
                                    target='_blank'><b>PASSWORD IHS</b></a></p>
                                </center>
                            </td>
                        </tr>
                    </table>
                </center>

                <script src='https://cdn.jsdelivr.net/
                npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js'>
                </script>
            </body>
            </html>";

            //echo $html;
            $this->email->message($html);

            if($this->email->send()) {
                $resultado = true;        
            } else {
                $resultado = false;
            }
            return $resultado;
            //echo json_encode($resultado);
        /*}else{                 
            show_404();
        }*/              
        }
    }
    
    
        /* envia correo  a cliente */
    //function enviarcorreo($venta_id, $factura_id, $email_destino, $nombre_archivo){
    function enviar_correoanulacioncccc($venta_id, $email_destino, $factura_numero, $factura_fecha, $total, $cod_autorizacion){
        
        $this->load->library('email');
        $this->email->set_newline("\r\n");
        $this->load->model('Configuracion_email_model');
        $configuracion = $this->Configuracion_email_model->get_configuracion_email(1);
        $factura = $this->Factura_model->get_factura_ventaid($venta_id);
        $factura_id = $factura["factura_id"];
        
        
        $cliente = $factura["factura_razonsocial"];

        $config['protocol'] = $configuracion['email_protocolo'];
        $config['smtp_host'] = $configuracion['email_host'];
        $config['smtp_port'] = $configuracion['email_puerto'];
        $config['smtp_user'] = $configuracion['email_usuario'];
        $config['smtp_pass'] = $configuracion['email_clave'];
        $config['smtp_from_name'] = $configuracion['email_nombre'];
        $config['priority'] = $configuracion['email_prioridad'];
        $config['charset'] = $configuracion['email_charset'];
        $config['smtp_crypto'] = $configuracion['email_encriptacion'];
        $config['wordwrap'] = TRUE;
        $config['newline'] = "\r\n";
        $config['mailtype'] = $configuracion['email_tipo'];
        $email_copia = '';

        $this->email->initialize($config);

        $this->email->from($config['smtp_user'], $config['smtp_from_name']);
        $this->email->to($email_destino);
        $this->email->cc($configuracion['email_copia']);
//            $this->email->bcc($attributes['cc']);
        $this->email->subject("Factura Digital, gracias por comprar, vuelva pronto");
        $base_url = explode('/', base_url());
        $directorio_factura = $_SERVER['DOCUMENT_ROOT'].'/'.$base_url[3].'/resources/xml/';
        $this->email->attach($directorio_factura.$nombre_archivo.$factura_id.".xml");
        $this->email->attach($directorio_factura.$nombre_archivo.$factura_id.".pdf");


        $imagen = base_url('resources/images/empresas/').$this->empresa['empresa_imagen'];
        
        if($this->dosificacion["dosificacion_ambiente"]==1){ //Produccion
            
            $base_url = base_url();
            $directorio = "resources/images/empresas/";
            $imagen = $this->empresa['empresa_imagen'];
            
        }else{
            
            $base_url = "https://www.kinetixdigitalmedia.com/facturacion/";
            $directorio = "resources/images/empresas/";
            $imagen = "1692569983.jpg";
            
        }
//                <img src="https://www.kinetixdigitalmedia.com/facturacion/resources/images/empresas/1692569983.jpg" width="100" height="60"><br>
                
                
        $html = '
        <!DOCTYPE html>
        <html lang="es">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Mensaje de correo electrónico</title>
            <!-- Bootstrap CSS -->
            <link href="https://cdn.jsdelivr.net/npm/
            bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" 
            rel="stylesheet">
        </head>
        <body>
            <center>
                <table class="table table-bordered"> 
                    <tr>
                        <td style="background: #D35400; color:white; 
                        font-family:Arial;">
                            <center>
                                
                                
                                <p><b>'.$this->empresa["empresa_nombre"].'</b></p>
                                <p>'.$this->empresa["empresa_eslogan"].'</p>
                            </center>
                        </td>
                    </tr>
                    <tr>
                        <td style="background: gray; font-family:Arial;">
                            <h2>Agradecemos su preferencia!</h2>
                        </td>
                    </tr>
                    <tr>
                        <td style="background: lightgray; font-family:Arial;">
                            <p>Señor(es): '.$cliente.'</p>
                            <p>Mediante este mensaje le informamos que adjunto a este correo</p>
                            <p> encontrará su factura en formato PDF y XML.</p>
                            <p></p>
                            <p>¡Gracias por su compra!</p>
                        </td>
                    </tr>
                    <tr>
                        <td style="background: black; 
                        color: white; 
                        font-family:Arial; font-size:10pt; 
                        line-height: 10px">
                            <center><br>
                            
                               <a href="https://www.facebook.com/sisximpleman/" 
                               style="color: white; text-decoration: none;"

                                <p><b>XIMPLEMAN</b>
                                </a>

                               es un producto de 
                                
                               <a href="https://www.passwordbolivia.com" 
                               style="color: white; text-decoration: none;"
                                target="_blank"><b>PASSWORD IHS</b></a></p>
                              
            
                            </center>
                        </td>
                    </tr>
                </table>
            </center>
  
            <script src="https://cdn.jsdelivr.net/
            npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js">
            </script>
        </body>
        </html>';
                
        $this->email->message($html);

        if($this->email->send()) {
            return true;        
        } else {
            return false;
        }
    }
    
    
    function ticket($venta_id, $descripcion)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(17)){
        //**************** inicio contenido ***************           
    
        $usuario_id = $this->session_data['usuario_id'];
        
        //$data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
       // $data['venta'] = $this->Detalle_venta_model->get_venta_id($venta_id);
        //$detalle_factura = $this->Detalle_venta_model->get_detalle_factura($venta_id);        
        $ladescripcion = str_replace("%20", "", $descripcion);
        $ladescripcion = str_replace("%22", "", $ladescripcion);
        $ladescripcion = str_replace("%C3%", "Ñ", $ladescripcion);
        $data['descripcion'] = $ladescripcion;
        //$data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Ticket";
        $factura = $this->Factura_model->get_factura_venta($venta_id);
        $data['factura'] = $factura;
        $data['parametro'] = $this->Parametro_model->get_parametros();
        $parametros = $data['parametro'][0];
        //$data['tipo'] = $tipo;
        
        /*if(sizeof($factura)>=1){
            }
        */
        
        
        $data['_view'] = 'factura/ticket';
        $this->load->view('layouts/main',$data);
        //**************** fin contenido ***************
        }
    }
    
    /* anula una factura; en el sistema esta como no enviada;
     * pero en impuestos esta registrado como valida!. */
    function anular_factura_forzadasin(){
        $usuario_idanulador = $this->session_data['usuario_id'];
        $factura_id =  $this->input->post("factura_id");            
        
        $sql = "select * from factura where factura_id = ".$factura_id;                
        $factura = $this->Factura_model->consultar($sql);
        
        //$venta_id = $factura[0]["venta_id"];
        $codigo_motivo =  $this->input->post("motivo_id");
        if($codigo_motivo==""){
            $codigo_motivo =  1;
        }
        
        $dosificacion_id = 1;
        $dosificacion = $this->Dosificacion_model->get_dosificacion($dosificacion_id);
        
        if ($dosificacion['docsec_codigoclasificador']==1)
                $wsdl = $dosificacion['dosificacion_factura'];

        if ($dosificacion['dosificacion_modalidad']==1){ //Electronica en linea
            if ($dosificacion['docsec_codigoclasificador']==2 || $dosificacion['docsec_codigoclasificador']==6 || $dosificacion['docsec_codigoclasificador']==16 || $dosificacion['docsec_codigoclasificador']==23 || $dosificacion['docsec_codigoclasificador']==39 || $dosificacion['docsec_codigoclasificador']==11  || $dosificacion['docsec_codigoclasificador']==17
                    || $dosificacion['docsec_codigoclasificador']==8 || $dosificacion['docsec_codigoclasificador']==12 || $dosificacion['docsec_codigoclasificador']==51)
                $wsdl = $dosificacion['dosificacion_glpelectronica'];

            if ($dosificacion['docsec_codigoclasificador']==13)
                $wsdl = $dosificacion['dosificacion_facturaservicios'];

            if ($dosificacion['docsec_codigoclasificador']==15)
                $wsdl = $dosificacion['dosificacion_entidadesfinancieras'];

            if ($dosificacion['docsec_codigoclasificador']==22)
                $wsdl = $dosificacion['dosificacion_telecomunicaciones'];

        }
        
        if ($dosificacion['dosificacion_modalidad']==2){ // Computarizada en linea
            if ($dosificacion['docsec_codigoclasificador']==2 || $dosificacion['docsec_codigoclasificador']==6 || $dosificacion['docsec_codigoclasificador']==16 || $dosificacion['docsec_codigoclasificador']==23 || $dosificacion['docsec_codigoclasificador']==39 || $dosificacion['docsec_codigoclasificador']==11  || $dosificacion['docsec_codigoclasificador']==17
                    || $dosificacion['docsec_codigoclasificador']==8 || $dosificacion['docsec_codigoclasificador']==12 || $dosificacion['docsec_codigoclasificador']==51)
                $wsdl = $dosificacion['dosificacion_facturaglp'];

            if ($dosificacion['docsec_codigoclasificador']==13)
                $wsdl = $dosificacion['dosificacion_facturaservicios'];

            if ($dosificacion['docsec_codigoclasificador']==15)
                $wsdl = $dosificacion['dosificacion_entidadesfinancieras'];

            if ($dosificacion['docsec_codigoclasificador']==22)
                $wsdl = $dosificacion['dosificacion_telecomunicaciones'];

        }
        
        $token = $dosificacion['dosificacion_tokendelegado'];

        $opts = array(
              'http' => array(
                   'header' => "apiKey: TokenApi $token",
              )
        );
        $context = stream_context_create($opts);

        $cliente = new \SoapClient($wsdl, [
              'stream_context' => $context,
              'cache_wsdl' => WSDL_CACHE_NONE,
              'compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | SOAP_COMPRESSION_DEFLATE,

              // other options
        ]);
        
        //$venta = $this->Detalle_venta_model->get_venta($venta_id);
        $usuarioventa_id = $factura[0]['usuario_id'];

        $puntoventa = $this->Usuario_model->get_punto_venta_usuario($usuarioventa_id);
        $this->load->model('PuntoVenta_model');
        $punto_venta = $this->PuntoVenta_model->get_puntoventa($puntoventa['puntoventa_codigo']);

        $tipoFacturaDoc = 1;
        if ($factura[0]['docsec_codigoclasificador'] == 8 ||$factura[0]['docsec_codigoclasificador'] == 6){
            $tipoFacturaDoc = 2;
        }
                
                
        $codigoAmbiente = $dosificacion['dosificacion_ambiente'];
        $codigoDocumentoSector = $factura[0]["docsec_codigoclasificador"];
        $codigoEmision = 1;
        $codigoModalidad = $factura[0]['factura_modalidad'];
        $codigoPuntoVenta = $punto_venta['puntoventa_codigo']; //$dosificacion['dosificacion_puntoventa'];
        $codigoSistema = $dosificacion['dosificacion_codsistema'];
        $codigoSucursal = $dosificacion['dosificacion_codsucursal'];
        $cufd = $punto_venta['cufd_codigo']; //$dosificacion['dosificacion_cufd'];
        $cuis = $punto_venta['cuis_codigo']; //$dosificacion['dosificacion_cuis']; 
        $nit =  $dosificacion['dosificacion_nitemisor'];
        $tipoFacturaDocumento = $tipoFacturaDoc; //1 con derecho a credito fiscal / 2 Sin derecho a credito fiscal //1 para facturas comerciales * 2 para facturas tasas cero
        $codigoMotivo = $codigo_motivo;
        $cuf = $factura[0]['factura_cuf'];
                
        /* ordenado segun SoapUI */

        $parametros = ["SolicitudServicioAnulacionFactura" => [
            "codigoAmbiente" => $codigoAmbiente,
            "codigoDocumentoSector" => $codigoDocumentoSector,
            "codigoEmision" => $codigoEmision,
            "codigoModalidad" => $codigoModalidad,
            "codigoPuntoVenta" => $codigoPuntoVenta,
            "codigoSistema" => $codigoSistema,
            "codigoSucursal" => $codigoSucursal,
            "cufd" => $cufd,
            "cuis" => $cuis, 
            "nit" =>  $nit,
            "tipoFacturaDocumento" => $tipoFacturaDocumento, //averiguar donde se almacena esto
            "codigoMotivo" => $codigoMotivo,
            "cuf" => $cuf
        ]];
        
        //var_dump($parametros);
        
        $resultado = $cliente->anulacionFactura($parametros);
        $res = $resultado->RespuestaServicioFacturacion->transaccion;
        $mensaje = "";
        
        if ($res){
            $factura_cuf = $factura[0]["factura_cuf"];
            $factura_total           = $factura[0]["factura_total"];
            
            $mensaje_anular = "";
            //****************** inicio bitacora caja
            $bitacoracaja_evento = "ANULAR FACTURA N°: ".$factura[0]["factura_numero"];
            $bitacoracaja_tipo = 2;
            $caja_id = 0;
            $sql = "insert into bitacora_caja(bitacoracaja_fecha, bitacoracaja_hora, bitacoracaja_evento, 
                    usuario_id, bitacoracaja_montoreg, bitacoracaja_montocaja, bitacoracaja_tipo, caja_id) value(date({$now}),time({$now})".
            ",'".$bitacoracaja_evento."',".$usuario_idanulador.",".$factura[0]["factura_total"].",0,".$bitacoracaja_tipo.",".$caja_id.")";

            $this->Venta_model->ejecutar($sql);
            //****************** fin bitacora caja
            
            $escorreo = $this->input->post("escorreo");
            if($escorreo == 1){
                $correo = $this->input->post("factura_correo");
            $resu = $this->enviar_correoanulacion($venta_id, $correo, $factura[0]["factura_numero"], $factura[0]["factura_fecha"], $factura_total, $factura_cuf);
            }
        }
        echo json_encode($resultado->RespuestaServicioFacturacion);
    }
    /* Revierte la anulacion de una factura*/
    function revertir_anulacion(){
        
        $usuario_idanulador = $this->session_data['usuario_id'];
        $factura_id =  $this->input->post("factura_id");            
        
        $sql = "select * from factura where factura_id = ".$factura_id;                
        $factura = $this->Factura_model->consultar($sql);
        
        //$venta_id = $factura[0]["venta_id"];
        $codigo_motivo =  $this->input->post("motivo_id");
        if($codigo_motivo==""){
            $codigo_motivo =  1;
        }
        
        $dosificacion_id = 1;
        $dosificacion = $this->Dosificacion_model->get_dosificacion($dosificacion_id);
        
        if ($dosificacion['docsec_codigoclasificador']==1)
                $wsdl = $dosificacion['dosificacion_factura'];

        if ($dosificacion['dosificacion_modalidad']==1){ //Electronica en linea
            if ($dosificacion['docsec_codigoclasificador']==2 || $dosificacion['docsec_codigoclasificador']==6 || $dosificacion['docsec_codigoclasificador']==16 || $dosificacion['docsec_codigoclasificador']==23 || $dosificacion['docsec_codigoclasificador']==39 || $dosificacion['docsec_codigoclasificador']==11  || $dosificacion['docsec_codigoclasificador']==17
                    || $dosificacion['docsec_codigoclasificador']==8 || $dosificacion['docsec_codigoclasificador']==12 || $dosificacion['docsec_codigoclasificador']==51)
                $wsdl = $dosificacion['dosificacion_glpelectronica'];

            if ($dosificacion['docsec_codigoclasificador']==13)
                $wsdl = $dosificacion['dosificacion_facturaservicios'];

            if ($dosificacion['docsec_codigoclasificador']==15)
                $wsdl = $dosificacion['dosificacion_entidadesfinancieras'];

            if ($dosificacion['docsec_codigoclasificador']==22)
                $wsdl = $dosificacion['dosificacion_telecomunicaciones'];

        }
        
        if ($dosificacion['dosificacion_modalidad']==2){ // Computarizada en linea
            if ($dosificacion['docsec_codigoclasificador']==2 || $dosificacion['docsec_codigoclasificador']==6 || $dosificacion['docsec_codigoclasificador']==16 || $dosificacion['docsec_codigoclasificador']==23 || $dosificacion['docsec_codigoclasificador']==39 || $dosificacion['docsec_codigoclasificador']==11  || $dosificacion['docsec_codigoclasificador']==17
                    || $dosificacion['docsec_codigoclasificador']==8 || $dosificacion['docsec_codigoclasificador']==12 || $dosificacion['docsec_codigoclasificador']==51)
                $wsdl = $dosificacion['dosificacion_facturaglp'];

            if ($dosificacion['docsec_codigoclasificador']==13)
                $wsdl = $dosificacion['dosificacion_facturaservicios'];

            if ($dosificacion['docsec_codigoclasificador']==15)
                $wsdl = $dosificacion['dosificacion_entidadesfinancieras'];

            if ($dosificacion['docsec_codigoclasificador']==22)
                $wsdl = $dosificacion['dosificacion_telecomunicaciones'];

        }
        
        $token = $dosificacion['dosificacion_tokendelegado'];

        $opts = array(
              'http' => array(
                   'header' => "apiKey: TokenApi $token",
              )
        );
        $context = stream_context_create($opts);

        $cliente = new \SoapClient($wsdl, [
              'stream_context' => $context,
              'cache_wsdl' => WSDL_CACHE_NONE,
              'compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | SOAP_COMPRESSION_DEFLATE,

              // other options
        ]);
        
        //$venta = $this->Detalle_venta_model->get_venta($venta_id);
        $usuarioventa_id = $factura[0]['usuario_id'];

        $puntoventa = $this->Usuario_model->get_punto_venta_usuario($usuarioventa_id);
        $this->load->model('PuntoVenta_model');
        $punto_venta = $this->PuntoVenta_model->get_puntoventa($puntoventa['puntoventa_codigo']);

        $tipoFacturaDoc = 1;
        if ($factura[0]['docsec_codigoclasificador'] == 8 ||$factura[0]['docsec_codigoclasificador'] == 6){
            $tipoFacturaDoc = 2;
        }
                
                
        $codigoAmbiente = $dosificacion['dosificacion_ambiente'];
        $codigoDocumentoSector = $factura[0]["docsec_codigoclasificador"];
        $codigoEmision = 1; //Describe si la emisión se realizó en línea. El valor permitido es: Online: 1
        $codigoModalidad = $factura[0]['factura_modalidad'];
        $codigoPuntoVenta = $punto_venta['puntoventa_codigo']; //$dosificacion['dosificacion_puntoventa'];
        $codigoSistema = $dosificacion['dosificacion_codsistema'];
        $codigoSucursal = $dosificacion['dosificacion_codsucursal'];
        $cufd = $punto_venta['cufd_codigo']; //$dosificacion['dosificacion_cufd'];
        $cuis = $punto_venta['cuis_codigo']; //$dosificacion['dosificacion_cuis']; 
        $nit =  $dosificacion['dosificacion_nitemisor'];
        $tipoFacturaDocumento = $tipoFacturaDoc; //1 con derecho a credito fiscal / 2 Sin derecho a credito fiscal //1 para facturas comerciales * 2 para facturas tasas cero
        $codigoMotivo = $codigo_motivo;
        $cuf = $factura[0]['factura_cuf'];
                
        /* ordenado segun SoapUI */

        $parametros = ["SolicitudServicioReversionAnulacionFactura" => [
            "codigoAmbiente" => $codigoAmbiente,
            "codigoDocumentoSector" => $codigoDocumentoSector,
            "codigoEmision" => $codigoEmision,
            "codigoModalidad" => $codigoModalidad,
            "codigoPuntoVenta" => $codigoPuntoVenta,
            "codigoSistema" => $codigoSistema,
            "codigoSucursal" => $codigoSucursal,
            "cufd" => $cufd,
            "cuis" => $cuis, 
            "nit" =>  $nit,
            "tipoFacturaDocumento" => $tipoFacturaDocumento, //averiguar donde se almacena esto
            "cuf" => $cuf
        ]];
        
        //var_dump($parametros);
        
        $resultado = $cliente->reversionAnulacionFactura($parametros);
        $res = $resultado->RespuestaServicioFacturacion->transaccion;
        
        
        $mensaje = "";
        
        if ($res){ // Si la factura fue revertida correctamente
            
            $factura_cuf = $factura[0]["factura_cuf"];
            $factura_total           = $factura[0]["factura_total"];
            
            $mensaje_anular = "";

            //************ inicio bitacora 
                $venta_id = $this->input->post("venta_id");
            
                $usuario_id = $this->session_data['usuario_id'];
                
                $now = "'".date("Y-m-d H:i:s")."'"; //{$now}
                $bitacoracaja_fecha = "date({$now})";
                $bitacoracaja_hora = "time({$now})";
                $bitacoracaja_evento = "(select  concat('REVERTI FACTURA ANULADA: FACT. ID ->',{$factura_id},' * CUF: {$cuf}'))";
                $bitacoracaja_montoreg = 0;
                $bitacoracaja_montocaja = 0;
                $bitacoracaja_tipo = 2; //5 operaciones sobre FACTURAS


                $sql = "insert into bitacora_caja(bitacoracaja_fecha, bitacoracaja_hora, bitacoracaja_evento, 
                        usuario_id, bitacoracaja_montoreg, bitacoracaja_montocaja, bitacoracaja_tipo,caja_id) value(".
                        $bitacoracaja_fecha.",".$bitacoracaja_hora.",".$bitacoracaja_evento.",".
                        $usuario_id.",".$bitacoracaja_montoreg.",".$bitacoracaja_montocaja.",".$bitacoracaja_tipo.",".$this->caja_id.")";
                $this->Venta_model->ejecutar($sql);
                //************ fin botacora bitacora   
            
                         //*************** RESTABLECER FACTURA ********************************
            
            // PRIMERO.- Quitamos la factura
            $sql = "delete from detalle_factura where factura_id = {$factura_id}";
            $this->Venta_model->ejecutar($sql);
            
            $sql = "delete from factura where factura_id = {$factura_id}";
            $this->Venta_model->ejecutar($sql);
            
            // SEGUNDO.- Insertamos la factura del contenedor
            
            $sql = "insert into factura (select * from factura_bitacora where factura_id = {$factura_id})";
            $this->Venta_model->ejecutar($sql);
            
            $sql = "insert into detalle_factura (select * from detalle_factura_bitacora where factura_id = {$factura_id})";
            $this->Venta_model->ejecutar($sql);
            
            //TERCERO.- Reactivamos la compra si la tiene
  
            $sql = "update detalle_venta v, detalle_factura f
                    set 
                    v.detalleven_cantidad = f.detallefact_cantidad,
                    v.detalleven_precio = f.detallefact_precio,
                    v.detalleven_subtotal = f.detallefact_subtotal,                    
                    v.detalleven_total = f.detallefact_total,
                    v.detalleven_caracteristicas= f.detallefact_caracteristicas,
                    v.detalleven_preferencia= f.detallefact_preferencia
                    where 
                    f.factura_id = {$factura_id} and
                    f.venta_id  = v.venta_id";
            $this->Venta_model->ejecutar($sql);
            
  
            $sql = "update venta v, factura f 
                    set 
                    v.venta_subtotal = f.factura_subtotal, 
                    v.venta_descuento = f.factura_descuento, 
                    v.venta_total = f.factura_total, 
                    v.venta_efectivo = f.factura_efectivo, 
                    v.venta_cambio = f.factura_cambio, 
                    v.estado_id = 1 
                    where f.factura_id = {$factura_id} and f.venta_id = v.venta_id";
            $this->Venta_model->ejecutar($sql);
            
            
            
            //*************** FIN RESTABLECER FACTURA ****************************   
                
            $escorreo = $this->input->post("escorreo");
            if($escorreo == 1){
                
                $correo = $this->input->post("factura_correo");
                $resu = $this->enviar_correoreversion($factura_id, $correo, $factura[0]["factura_numero"], $factura[0]["factura_fecha"], $factura_total, $factura_cuf);
            
            }
            
        }
        echo json_encode($resultado->RespuestaServicioFacturacion);
    }
    
    //Revierte las facturas anuladas
    function revertir_anulacion_masiva($factura_id){
        
        $usuario_idanulador = $this->session_data['usuario_id'];
        //$factura_id =  $this->input->post("factura_id");            
        
        $sql = "select * from factura where factura_id = ".$factura_id;                
        $factura = $this->Factura_model->consultar($sql);
        
        $dosificacion_id = 1;
        $dosificacion = $this->Dosificacion_model->get_dosificacion($dosificacion_id);
        
        if ($dosificacion['docsec_codigoclasificador']==1)
                $wsdl = $dosificacion['dosificacion_factura'];

        if ($dosificacion['dosificacion_modalidad']==1){ //Electronica en linea
            if ($dosificacion['docsec_codigoclasificador']==2 || $dosificacion['docsec_codigoclasificador']==6 || $dosificacion['docsec_codigoclasificador']==16 || $dosificacion['docsec_codigoclasificador']==23 || $dosificacion['docsec_codigoclasificador']==39 || $dosificacion['docsec_codigoclasificador']==11  || $dosificacion['docsec_codigoclasificador']==17
                    || $dosificacion['docsec_codigoclasificador']==8 || $dosificacion['docsec_codigoclasificador']==12 || $dosificacion['docsec_codigoclasificador']==51)
                $wsdl = $dosificacion['dosificacion_glpelectronica'];

            if ($dosificacion['docsec_codigoclasificador']==13)
                $wsdl = $dosificacion['dosificacion_facturaservicios'];

            if ($dosificacion['docsec_codigoclasificador']==15)
                $wsdl = $dosificacion['dosificacion_entidadesfinancieras'];

            if ($dosificacion['docsec_codigoclasificador']==22)
                $wsdl = $dosificacion['dosificacion_telecomunicaciones'];

        }
        
        if ($dosificacion['dosificacion_modalidad']==2){ // Computarizada en linea
            if ($dosificacion['docsec_codigoclasificador']==2 || $dosificacion['docsec_codigoclasificador']==6 || $dosificacion['docsec_codigoclasificador']==16 || $dosificacion['docsec_codigoclasificador']==23 || $dosificacion['docsec_codigoclasificador']==39 || $dosificacion['docsec_codigoclasificador']==11  || $dosificacion['docsec_codigoclasificador']==17
                    || $dosificacion['docsec_codigoclasificador']==8 || $dosificacion['docsec_codigoclasificador']==12 || $dosificacion['docsec_codigoclasificador']==51)
                $wsdl = $dosificacion['dosificacion_facturaglp'];

            if ($dosificacion['docsec_codigoclasificador']==13)
                $wsdl = $dosificacion['dosificacion_facturaservicios'];

            if ($dosificacion['docsec_codigoclasificador']==15)
                $wsdl = $dosificacion['dosificacion_entidadesfinancieras'];

            if ($dosificacion['docsec_codigoclasificador']==22)
                $wsdl = $dosificacion['dosificacion_telecomunicaciones'];

        }
        
        $token = $dosificacion['dosificacion_tokendelegado'];

        $opts = array(
              'http' => array(
                   'header' => "apiKey: TokenApi $token",
              )
        );
        $context = stream_context_create($opts);

        $cliente = new \SoapClient($wsdl, [
              'stream_context' => $context,
              'cache_wsdl' => WSDL_CACHE_NONE,
              'compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | SOAP_COMPRESSION_DEFLATE,

              // other options
        ]);
        
        //$venta = $this->Detalle_venta_model->get_venta($venta_id);
        $usuarioventa_id = $factura[0]['usuario_id'];

        $puntoventa = $this->Usuario_model->get_punto_venta_usuario($usuarioventa_id);
        $this->load->model('PuntoVenta_model');
        $punto_venta = $this->PuntoVenta_model->get_puntoventa($puntoventa['puntoventa_codigo']);

        $tipoFacturaDoc = 1;
        if ($factura[0]['docsec_codigoclasificador'] == 8 ||$factura[0]['docsec_codigoclasificador'] == 6){
            $tipoFacturaDoc = 2;
        }
                
                
        $codigoAmbiente = $dosificacion['dosificacion_ambiente'];
        $codigoDocumentoSector = $factura[0]["docsec_codigoclasificador"];
        $codigoEmision = 1; //Describe si la emisión se realizó en línea. El valor permitido es: Online: 1
        $codigoModalidad = $factura[0]['factura_modalidad'];
        $codigoPuntoVenta = $punto_venta['puntoventa_codigo']; //$dosificacion['dosificacion_puntoventa'];
        $codigoSistema = $dosificacion['dosificacion_codsistema'];
        $codigoSucursal = $dosificacion['dosificacion_codsucursal'];
        $cufd = $punto_venta['cufd_codigo']; //$dosificacion['dosificacion_cufd'];
        $cuis = $punto_venta['cuis_codigo']; //$dosificacion['dosificacion_cuis']; 
        $nit =  $dosificacion['dosificacion_nitemisor'];
        $tipoFacturaDocumento = $tipoFacturaDoc; //1 con derecho a credito fiscal / 2 Sin derecho a credito fiscal //1 para facturas comerciales * 2 para facturas tasas cero
        $cuf = $factura[0]['factura_cuf'];
                
        /* ordenado segun SoapUI */

        $parametros = ["SolicitudServicioReversionAnulacionFactura" => [
            "codigoAmbiente" => $codigoAmbiente,
            "codigoDocumentoSector" => $codigoDocumentoSector,
            "codigoEmision" => $codigoEmision,
            "codigoModalidad" => $codigoModalidad,
            "codigoPuntoVenta" => $codigoPuntoVenta,
            "codigoSistema" => $codigoSistema,
            "codigoSucursal" => $codigoSucursal,
            "cufd" => $cufd,
            "cuis" => $cuis, 
            "nit" =>  $nit,
            "tipoFacturaDocumento" => $tipoFacturaDocumento, //averiguar donde se almacena esto
            "cuf" => $cuf
        ]];
        
        //var_dump($parametros);
        
        $resultado = $cliente->reversionAnulacionFactura($parametros);
        $res = $resultado->RespuestaServicioFacturacion->transaccion;
        
        
        $mensaje = "";
        
        if ($res){ // Si la factura fue revertida correctamente
            
            $factura_cuf = $factura[0]["factura_cuf"];
            $factura_total           = $factura[0]["factura_total"];
            
            $mensaje_anular = "";

            //************ inicio bitacora 
                $venta_id = $this->input->post("venta_id");
            
                $usuario_id = $this->session_data['usuario_id'];
                
                $now = "'".date("Y-m-d H:i:s")."'"; //{$now}
                $bitacoracaja_fecha = "date({$now})";
                $bitacoracaja_hora = "time({$now})";
                $bitacoracaja_evento = "(select  concat('REVERTI FACTURA ANULADA: FACT. ID ->',{$factura_id},' * CUF: {$cuf}'))";
                $bitacoracaja_montoreg = 0;
                $bitacoracaja_montocaja = 0;
                $bitacoracaja_tipo = 2; //5 operaciones sobre FACTURAS


                $sql = "insert into bitacora_caja(bitacoracaja_fecha, bitacoracaja_hora, bitacoracaja_evento, 
                        usuario_id, bitacoracaja_montoreg, bitacoracaja_montocaja, bitacoracaja_tipo,caja_id) value(".
                        $bitacoracaja_fecha.",".$bitacoracaja_hora.",".$bitacoracaja_evento.",".
                        $usuario_id.",".$bitacoracaja_montoreg.",".$bitacoracaja_montocaja.",".$bitacoracaja_tipo.",".$this->caja_id.")";
                $this->Venta_model->ejecutar($sql);
                //************ fin botacora bitacora   
            
                         //*************** RESTABLECER FACTURA ********************************
            
            // PRIMERO.- Quitamos la factura
            $sql = "delete from detalle_factura where factura_id = {$factura_id}";
            $this->Venta_model->ejecutar($sql);
            
            $sql = "delete from factura where factura_id = {$factura_id}";
            $this->Venta_model->ejecutar($sql);
            
            // SEGUNDO.- Insertamos la factura del contenedor
            
            $sql = "insert into factura (select * from factura_bitacora where factura_id = {$factura_id})";
            $this->Venta_model->ejecutar($sql);
            
            $sql = "insert into detalle_factura (select * from detalle_factura_bitacora where factura_id = {$factura_id})";
            $this->Venta_model->ejecutar($sql);
            
            //TERCERO.- Reactivamos la compra si la tiene
            /*
            $sql = "update detalle_venta v, detalle_factura f
                    set 
                    v.detalleven_cantidad = f.detallefact_cantidad,
                    v.detalleven_precio = f.detallefact_precio,
                    v.detalleven_subtotal = f.detallefact_subtotal,                    
                    v.detalleven_total = f.detallefact_total,
                    v.detalleven_caracteristicas= f.detallefact_caracteristicas,
                    v.detalleven_preferencia= f.detallefact_preferencia
                    where 
                    f.factura_id = {$factura_id} and
                    f.venta_id  = v.venta_id";
            $this->Venta_model->ejecutar($sql);
            
  
            $sql = "update venta v, factura f 
                    set 
                    v.venta_subtotal = f.factura_subtotal, 
                    v.venta_descuento = f.factura_descuento, 
                    v.venta_total = f.factura_total, 
                    v.venta_efectivo = f.factura_efectivo, 
                    v.venta_cambio = f.factura_cambio, 
                    v.estado_id = 1 
                    where f.factura_id = {$factura_id} and f.venta_id = v.venta_id";
            $this->Venta_model->ejecutar($sql);
            
            */
            
            //*************** FIN RESTABLECER FACTURA ****************************   
            /*   no es necesario el envio por correo
            $escorreo = $this->input->post("escorreo");
            if($escorreo == 1){
                
                $correo = $this->input->post("factura_correo");
                $resu = $this->enviar_correoreversion($factura_id, $correo, $factura[0]["factura_numero"], $factura[0]["factura_fecha"], $factura_total, $factura_cuf);
            
            }
            */
        }
        echo json_encode($resultado->RespuestaServicioFacturacion);
    }
    
    function imprimir(){


        $nombreImpresora = "NombreDeLaImpresora"; // Nombre de la impresora
        $archivoSalida = "LPT1"; // Puerto de salida (puede variar según el sistema)

        $connector = new FilePrintConnector($archivoSalida);
        $printer = new Printer($connector);

        $printer->pulse();
        $printer->close();

        echo "La caja registradora ha sido abierta.";
        
    }

    function abrir_caja(){
          
        $data['sistema'] = $this->sistema;
        
        //**************** inicio contenido ***************            
        $rolusuario = $this->session_data['rol'];
        $data['rolusuario_asignado'] = $rolusuario[154-1]['rolusuario_asignado'];
//        $params['limit'] = RECORDS_PER_PAGE; 
//        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
//        $config = $this->config->item('pagination');
//        $config['base_url'] = site_url('factura/index?');
//        $config['total_rows'] = $this->Factura_model->get_all_factura_count();
//        $this->pagination->initialize($config);

        $data['page_title'] = "Apertura de Caja";
        //$data['factura'] = $this->Factura_model->get_all_factura($params);
        $data['configuracion'] = $this->configuracion;
        $data['motivos'] = $this->Factura_model->get_all_motivos();
        $data['empresa'] = $this->Empresa_model->get_all_empresa();

        
        $data['_view'] = 'factura/abrir_caja';
        $this->load->view('layouts/main',$data);
        		
        //**************** fin contenido ***************
     
        
    }

     function factura_servicios($tipo, $factura_id){
         
         $session_data = $this->session->userdata('logged_in');
         $usuario_id = $session_data['id_usu'];
         $this->load->model('Empresa_model');
         $data['empresa'] = $this->Empresa_model->get_empresa(1);
         
         $data['factura'] = $this->Factura_model->get_factura_completa($factura_id);
         
         $data['tipo'] = $tipo;
         $detalle_factura = $this->Factura_model->get_pendiente_detalle($factura_id);
         $totalexento = 0;
         foreach ($detalle_factura as $detalle) {
             if($detalle["exento_detfact"] == "SI"){
                 $totalexento += $detalle['total_detfact']; 
             }
         }
         $data['detalle_factura'] = $detalle_factura;
         $factura = $this->Factura_model->get_factura($factura_id);

        $nit_emisor    = $factura['nitemisor_fact'];
        $num_fact      = $factura['num_fact'];
        $autorizacion  = $factura['orden_fact'];
        $fecha_factura = $factura['fecha_fact'];
        $total         = $factura['montototal_fact'];
        $codcontrol    = $factura['codcontrol_fact'];
        $nit           = $factura['nit_fact'];
         $cadenaQR = $nit_emisor.'|'.$num_fact.'|'.$autorizacion.'|'.$fecha_factura.'|'.($total-$totalexento).'|'.($total-$totalexento).'|'.$codcontrol.'|'.$nit.'|0|0|0|0';
               
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
        //Generador de Codigo QR
                //cargamos la librería  
         $this->load->library('ciqrcode');
                  
         //hacemos configuraciones
         $params['data'] = $cadenaQR;//$this->random(30);
         $params['level'] = 'H';
         $params['size'] = 5;
         //decimos el directorio a guardar el codigo qr, en este 
         //caso una carpeta en la raíz llamada qr_code
         $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
         //generamos el código qr
         $this->ciqrcode->generate($params); 
         //echo '<img src="'.base_url().'resources/images/qrcode.png" />';
        //fin generador de codigo QR
         
        
        $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');         
         $data['_view'] = 'factura/factura_servicios';
         $this->load->view('layouts/main',$data);
     }

    /*
     * Realizado por: Roberto Carlos Soto Sierra
     * Fecha: 05.03.2019
     */
    //function recibo_mediooficio($venta_id,$factura_numero)
    /* nota de entrega con logo empresa y direccion de cliente.. */
    function recibo_mediooficio($venta_id,$pagina_actual)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(21)){
        $usuario_id = $this->session_data['usuario_id'];
        
        $bloque = 20;
        $salto = ($pagina_actual-1)*$bloque;
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['venta'] = $this->Detalle_venta_model->get_venta($venta_id);
        
        //$detalle = $this->Detalle_venta_model->get_detalle_venta($venta_id);
        
                $sql = "select d.*,  r.producto_nombre as preferencia_descripcion, r.producto_foto as preferencia_foto, 
                clasificador_codigo, clasificador_nombre,p.*, cp.categoria_nombre, scp.subcategoria_nombre
                from detalle_venta d
                left join producto p on p.producto_id = d.producto_id
                left join producto r on r.producto_id = d.preferencia_id
                left join clasificador c on c.clasificador_id = d.clasificador_id
                left join categoria_producto cp on p.categoria_id = cp.categoria_id
                left join subcategoria_producto scp on p.subcategoria_id = scp.subcategoria_id                
                where d.producto_id = p.producto_id and venta_id = {$venta_id}
                limit {$bloque} offset {$salto}";
        $detalle = $this->Venta_model->consultar($sql);
        
        
        $data['detalle_venta'] = $detalle;
        
        $sql = "select count(*) as cantidad from detalle_venta where venta_id = {$venta_id}";
        $res = $this->Venta_model->consultar($sql);
        $cantidad = $res[0]['cantidad'];
        
        $paginas = ceil($cantidad / $bloque);
        $data['paginas'] = $paginas;
        $data['pagina_actual'] = $pagina_actual;
        
        
        $data['empresa'] = $this->Empresa_model->get_empresa(1);        
        $data['page_title'] = "Recibo";

        $data['parametro'] = $this->Parametro_model->get_parametros();
        $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
                
        $this->load->helper('numeros_helper'); // Helper para convertir numeros a letras
  
        $data['_view'] = 'factura/recibo_mediooficio';
        $this->load->view('layouts/main',$data);
        }
    }
    
}
