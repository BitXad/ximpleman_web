<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Reportes extends CI_Controller{
    
    private $session_data = "";
    private $sistema;
    private $parametros;

    function __construct()
    {
        parent::__construct();

        $this->load->model('Reporte_ing_egr_model');
        $this->load->model('Ingreso_model');
        $this->load->model('Cuotum_model');
        $this->load->model('Empresa_model');
        $this->load->model('Usuario_model');
        $this->load->model('Inventario_model');
        $this->load->model('Compra_model');
        $this->load->model('Parametro_model');
        $this->load->model('Detalle_venta_model');
        $this->load->model('Banco_model');
        $this->load->model('Venta_model');
        $this->load->model('Categoria_producto_model');
        $this->load->model('PuntoVenta_model');
        $this->load->model('Caja_model');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
        $this->load->model('Sistema_model');
        $this->sistema = $this->Sistema_model->get_sistema();
        
        $parametro = $this->Parametro_model->get_parametros();
        $this->parametros = $parametro[0];

    } 
    private function acceso($id_rol){
        
        $data['sistema'] = $this->sistema;
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Listing of cliente
     */
    function index()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(141)){
        $this->load->model('Empresa_model');
        $data['all_empresa'] = $this->Empresa_model->get_all_empresa();
        
        $data['tipousuario_id']  = $this->session_data['tipousuario_id'];
        $data['usuario_id']  = $this->session_data['usuario_id'];
        $data['usuario_nombre']  = $this->session_data['usuario_nombre'];
        $this->load->model('Usuario_model');
        
        $data['parametro'] = $this->parametros;

        $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
        $data['page_title'] = "Reportes";
        $data['_view'] = 'reportes/index';

        $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Listing of cliente
     */
    function movimientodiario()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(141)){
        $this->load->model('Empresa_model');
        $data['empresa'] = $this->Empresa_model->get_all_empresa();
        
        $data['tipousuario_id']  = $this->session_data['tipousuario_id'];
        $data['usuario_id']  = $this->session_data['usuario_id'];
        $data['usuario_nombre']  = $this->session_data['usuario_nombre'];
        $this->load->model('Usuario_model');
        
        $rolusuario = $this->session_data['rol'];
        $data['tienepermiso'] = $rolusuario[171-1]['rolusuario_asignado'];        
        
        $data['parametro'] = $this->parametros;
        $this->load->model('Moneda_model');
        $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
        $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
        $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
        $data['page_title'] = "Reportes";
        $data['_view'] = 'reportes/reportediario';

        $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Listing of cliente
     */
    function reportecaja()
    {
        $data['sistema'] = $this->sistema;
        //if($this->acceso(156)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $usuario_id = $this->session_data['usuario_id']; 
            $this->load->model('Tipo_transaccion_model');
            
            
            //*******************************************************
                $fecha1 = "date(now())"; //$this->input->post('fecha1');   
                $fecha2 =  "date(now())"; //$this->input->post('fecha2'); 
                //$usuario = $this->input->post('usuario_id'); 
                $usuario = $this->session_data['usuario_id']; 
//                $valfecha1 = "";
//                $valfecha2 = "";
                //$usuario_id = "";

            //*******************************************************
            
            
            $data['page_title'] = "Reporte de ventas agrupado";
            
            $data['empresa'] = $this->Empresa_model->get_empresa(1);  
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
            $this->load->model('Usuario_model');
            
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
            $data['parametro'] = $this->parametros;
            
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(1); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            
//            $data['reporte'] = $this->Detalle_venta_model->get_resumenventas($usuario_id);
            $data['reporte'] = $this->Detalle_venta_model->get_resumenventas_fecha($usuario_id,$fecha1,$fecha2);
//            $data['caja'] = $this->Caja_model->get_cajausuario_now($usuario_id);
            $data['caja'] = $this->Caja_model->get_cajausuario_fecha($usuario_id,$fecha1,$fecha2);
            $data['punto_venta'] = $this->PuntoVenta_model->get_puntoventausuario($usuario_id);
            
            $sql = "select MIN(factura_id) as desde, MAX(factura_id) as hasta,
                    MAX(factura_id)-MIN(factura_id) as ventas from factura
                    where usuario_id = $usuario_id and factura_fecha = date(now())";
            $data['resumen'] = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as total_ventas
                    from factura
                    where usuario_id = ".$usuario_id." and factura_fecha = date(now())";
            $data['total_ventas'] = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as ventas_validas
                    from factura
                    where usuario_id = ".$usuario_id." and factura_fecha = date(now()) 
                    and estado_id=1 and factura_codigodescripcion = 'VALIDADA'";
            $data['validas'] = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as mal_emitidas
                    from factura
                    where usuario_id = ".$usuario_id." and factura_fecha = date(now()) 
                    and factura_codigodescripcion != 'VALIDADA'";
            $data['mal_emitidas'] = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as anuladas
                    from factura
                    where usuario_id = ".$usuario_id." 
                    and factura_fecha = date(now()) and estado_id<>1 and factura_codigodescripcion = 'VALIDADA'";
            $data['anuladas'] = $this->Venta_model->consultar($sql);

            //********************************************************************
            
            $sql = "SELECT c.operacion,c.forma,c.transaccion,c.banco,sum(ingresos) AS ingresos,sum(egresos) AS egresos
                    FROM consreporte c
                    WHERE
                    c.usuario_id = {$usuario_id} and c.fecha>= date(now()) and c.fecha<= date(now())
                    GROUP BY c.operacion,c.forma,c.transaccion,c.banco
                    ORDER BY orden";
            $data['transacciones'] = $this->Venta_model->consultar($sql);
            
            $sql = "select sum(venta_descuento) as descuentos from venta
                    where usuario_id = {$usuario_id} and venta_fecha = date(now())";
            $data['descuentos_globales'] = $this->Venta_model->consultar($sql);
                    
//
//                if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
//                    $valfecha1 = $fecha1;
//                    $valfecha2 = $fecha2;
//                }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
//                    $valfecha1 = $fecha1;
//                    $valfecha2 = $fecha1;
//                }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
//                    $valfecha1 = $fecha2;
//                    $valfecha2 = $fecha2;
//                }else{
//                    $fecha1 = null;
//                    $fecha2 = null;
//                }
//
//                if($usuario >  0){
//                    $usuario_id = $usuario;
//                }else{
//                    $usuario_id = 0;
//                }
//                
//                $data['registros'] = $this->Reporte_ing_egr_model->get_reportemovimiento($valfecha1, $valfecha2, $usuario_id);
//                $data['totales'] = $this->Reporte_ing_egr_model->get_totalesmovimiento($valfecha1, $valfecha2, $usuario_id);
//            
            
            //********************************************************************
            $data['_view'] = 'reportes/reportecaja';
            $this->load->view('layouts/main',$data);
        //}
    }
    
    function reportecajadmin()
    {
        $data['sistema'] = $this->sistema;
        //if($this->acceso(156)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $usuario_id = $this->session_data['usuario_id']; 
            $this->load->model('Tipo_transaccion_model');
            $data['page_title'] = "Reporte de ventas agrupado";
            $data['empresa'] = $this->Empresa_model->get_empresa(1);  
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            
            $data['reporte'] = $this->Detalle_venta_model->get_resumenventas($usuario_id);
            $data['caja'] = $this->Caja_model->get_cajausuario_now($usuario_id);
            $data['punto_venta'] = $this->PuntoVenta_model->get_puntoventausuario($usuario_id);
            
            $sql = "select MIN(factura_id) as desde, MAX(factura_id) as hasta,
                    MAX(factura_id)-MIN(factura_id) as ventas from factura
                    where usuario_id = $usuario_id and factura_fecha = date(now())";
            $data['resumen'] = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as total_ventas
                    from factura
                    where usuario_id = ".$usuario_id." and factura_fecha = date(now())";
            $data['total_ventas'] = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as ventas_validas
                    from factura
                    where usuario_id = ".$usuario_id." and factura_fecha = date(now()) 
                    and estado_id=1 and factura_codigodescripcion = 'VALIDADA'";
            $data['validas'] = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as mal_emitidas
                    from factura
                    where usuario_id = ".$usuario_id." and factura_fecha = date(now()) 
                    and factura_codigodescripcion != 'VALIDADA'";
            $data['mal_emitidas'] = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as anuladas
                    from factura
                    where usuario_id = ".$usuario_id." 
                    and factura_fecha = date(now()) and estado_id<>1 and factura_codigodescripcion = 'VALIDADA'";
            $data['anuladas'] = $this->Venta_model->consultar($sql);
            
            
            $data['_view'] = 'reportes/reportecajadmin';
            $this->load->view('layouts/main',$data);
        //}
    }
    
    function graficas()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(157)){
            $data['user_id']  = $this->session_data['usuario_id'];
            $data['tipousuario_id']  = $this->session_data['tipousuario_id'];
            $data['empresa'] = $this->Empresa_model->get_all_empresa();
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['page_title'] = "Reportes";
            $data['_view'] = 'reportes/graficas';
            $this->load->view('layouts/main',$data);
           // redirect('', 'refresh');
        }
    }

    function graficas2()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(157)){
            $data['empresa'] = $this->Empresa_model->get_all_empresa();
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['page_title'] = "Reportes";
            $data['_view'] = 'reportes/graficas2';
            $this->load->view('layouts/main',$data);
           // redirect('', 'refresh');
        }
    }
 public function getUltimoDiaMes($elAnio,$elMes) {
     return date("d",(mktime(0,0,0,$elMes+1,1,$elAnio)-1));
    }

function mes($anio,$mes)
{
        $data['sistema'] = $this->sistema;
        $primer_dia=1;
        $ultimo_dia=$this->getUltimoDiaMes($anio,$mes);
        $fecha_inicial=date("Y-m-d H:i:s", strtotime($anio."-".$mes."-".$primer_dia) );
        $fecha_final=date("Y-m-d H:i:s", strtotime($anio."-".$mes."-".$ultimo_dia) );
        
        $fechas = "SELECT compra_fecha, round(compra_totalfinal,2) as compra_totalfinal FROM compra where compra.compra_fecha >= '".$anio."-".$mes."-01' and  compra.compra_fecha <= '".$anio."-".$mes."-31' ";
        $result= $this->db->query($fechas)->result_array();
        
        $fechasven = "SELECT venta_fecha, round(venta_total,2) as venta_total FROM venta where venta.venta_fecha >= '".$anio."-".$mes."-01' and  venta.venta_fecha <= '".$anio."-".$mes."-31' ";
        $resultven= $this->db->query($fechasven)->result_array();
        //$result=$data['result'];
        $ct=count($result);

        for($d=1;$d<=$ultimo_dia;$d++){
            $registros[$d]=0;
            $registrosven[$d]=0;     
        }

        foreach($result as $res){
        $diasel=intval(date("d",strtotime($res['compra_fecha']) ) );
        
        $suma=$res['compra_totalfinal'];
        
        $registros[$diasel]+=$suma;    
        }

        foreach($resultven as $resven){
        $diaselven=intval(date("d",strtotime($resven['venta_fecha']) ) );
        
        $sumave=$resven['venta_total'];
       
        $registrosven[$diaselven]+=$sumave;    
        }

        $data=array("totaldias"=>$ultimo_dia, "registrosdia" =>$registros, "registrosven" =>$registrosven);
        echo   json_encode($data);
        /*$anio = $this->input->post('anio');   1555891200
        $mes = $this->input->post('fecha2'); 
*/
        
}

// -------------------------------------------------------------------------------------------------
function mes_usuario($anio,$mes,$usuario_id)
{
        $data['sistema'] = $this->sistema;
        $primer_dia=1;
        $ultimo_dia=$this->getUltimoDiaMes($anio,$mes);
        $fecha_inicial=date("Y-m-d H:i:s", strtotime($anio."-".$mes."-".$primer_dia) );
        $fecha_final=date("Y-m-d H:i:s", strtotime($anio."-".$mes."-".$ultimo_dia) );
        // $fechas = "SELECT compra_fecha, round(compra_totalfinal,2) as compra_totalfinal FROM compra where compra.compra_fecha >= '".$anio."-".$mes."-01' and  compra.compra_fecha <= '".$anio."-".$mes."-31' ";
        $fechas = "SELECT date(pedido_fecha), round(p.pedido_total,2) as pedido_total
                    FROM pedido as p
                    where p.pedido_fecha >= '".$anio."-".$mes."-01' 
                    and p.pedido_fecha <= '".$anio."-".$mes."-31'
                    and p.regusuario_id = ".$usuario_id.";";
        $result= $this->db->query($fechas)->result_array();
        $fechasven = "SELECT v.venta_fecha, round(v.venta_total,2) as venta_total 
                        FROM venta as v 
                        where v.venta_fecha >= '".$anio."-".$mes."-01' 
                        and  v.venta_fecha <= '".$anio."-".$mes."-31'
                        and v.usuario_id = ".$usuario_id.";";
        $resultven= $this->db->query($fechasven)->result_array();
        //$result=$data['result'];
        $ct=count($result);

        for($d=1;$d<=$ultimo_dia;$d++){
            $registros[$d]=0;
            $registrosven[$d]=0;     
        }

        foreach($result as $res){
            $diasel=intval(date("d",strtotime($res['date(pedido_fecha)']) ) );
            
            $suma=$res['pedido_total'];
            
            $registros[$diasel]+=$suma;    
        }

        foreach($resultven as $resven){
            $diaselven=intval(date("d",strtotime($resven['venta_fecha']) ) );
            
            $sumave=$resven['venta_total'];
        
            $registrosven[$diaselven]+=$sumave;    
        }

        // foreach($resultpro as $respro){
        //     $diaPro = intval(date("d", strtotime($respro['producto_fecha'])));
        //     $sumpro = $respro['producto_total'];
        //     $registrospro[$diaPro] += $sumpro;
        // }

        $data=array("totaldias"=>$ultimo_dia, "registrosdia" =>$registros, "registrosven" =>$registrosven);
        echo   json_encode($data);
        /*$anio = $this->input->post('anio');   1555891200
        $mes = $this->input->post('fecha2'); 
*/
        
}
// -------------------------------------------------------------------------------------------------

function proven($anio,$mes)
{
        $data['sistema'] = $this->sistema;
        $primer_dia=1;
        $ultimo_dia=$this->getUltimoDiaMes($anio,$mes);
        $numero=10;
        $fecha_inicial=date("Y-m-d H:i:s", strtotime($anio."-".$mes."-".$primer_dia) );
        $fecha_final=date("Y-m-d H:i:s", strtotime($anio."-".$mes."-".$ultimo_dia) );
        $productos="SELECT i.producto_id, i.producto_nombre, SUM(dv.detalleven_cantidad) as cantidades FROM detalle_venta dv LEFT JOIN venta v on dv.venta_id = v.venta_id LEFT JOIN inventario i on dv.producto_id = i.producto_id WHERE v.venta_fecha>='2019-06-01' and v.venta_fecha<='2019-06-30' GROUP BY dv.producto_id ORDER BY cantidades DESC limit 10";
        $produc= $this->db->query($productos)->result_array();
        //$result=$data['result'];
        

        for($d=1;$d<=$numero;$d++){
            $registros[$d]=0;
            
        }
       
        foreach($produc as $tve){
        $prosel=intval($tve['producto_id']);
        
        $suma=$tve['cantidades'];
        
        $registros[$prosel]=$suma;    
        }

        

        $data=array("totaldias"=>$numero, "registrosdia" =>$registros);
        echo   json_encode($data);
        /*$anio = $this->input->post('anio');   1555891200
        $mes = $this->input->post('fecha2'); 
*/
        
}

function torta($anio,$mes)
{
               
        $data['sistema'] = $this->sistema;
        $ventausuario = "SELECT COUNT(DISTINCT usuario_id) as 'distusu' FROM venta where venta.venta_fecha >= '".$anio."-".$mes."-01' and  venta.venta_fecha <= '".$anio."-".$mes."-31' ";
        $usve = $this->db->query($ventausuario)->row_array();
        $numusu=$usve['distusu'];

        $id_usuarios = "SELECT DISTINCT v.usuario_id, u.usuario_nombre FROM venta v, usuario u where v.venta_fecha >= '".$anio."-".$mes."-01' and  v.venta_fecha <= '".$anio."-".$mes."-31' and v.usuario_id=u.usuario_id ";
        $usuarios= $this->db->query($id_usuarios)->result_array();



        $totalventas = "SELECT  usuario_id, SUM(venta_total) as 'totalventas' FROM venta where venta.venta_fecha >= '".$anio."-".$mes."-01' and  venta.venta_fecha <= '".$anio."-".$mes."-31' GROUP BY usuario_id";
        $tove= $this->db->query($totalventas)->result_array();
        
        

        foreach($tove as $tve){
        $ususel=intval($tve['usuario_id']);
        
        $suma=round($tve['totalventas'],2);
        
        $registros[$ususel]=$suma;    
        }
       
               
        $data=array("totaltipos"=>$numusu, "tipos" =>$usuarios, "numerodepubli" =>$registros);
        echo   json_encode($data);
        
        
}

function torta2($anio,$mes)
{
               
        $data['sistema'] = $this->sistema;
        $ventausuario = "SELECT COUNT(DISTINCT cliente_id) as 'distusu',SUM(venta_total) as 'totalventas' FROM venta where venta.venta_fecha >= '".$anio."-".$mes."-01' and  venta.venta_fecha <= '".$anio."-".$mes."-31' ORDER by totalventas limit 10";
        $usve = $this->db->query($ventausuario)->row_array();
        $numusu=10;

        $id_usuarios = "SELECT DISTINCT v.cliente_id, u.cliente_nombre,SUM(venta_total) as 'totalventas' FROM venta v, cliente u where v.venta_fecha >= '".$anio."-".$mes."-01' and  v.venta_fecha <= '".$anio."-".$mes."-31' and v.cliente_id=u.cliente_id GROUP BY cliente_id ORDER by totalventas desc limit 10";
        //echo $id_usuarios;
        $usuarios= $this->db->query($id_usuarios)->result_array();



        $totalventas = "SELECT DISTINCT v.cliente_id, SUM(venta_total) as 'totalventas' FROM venta v, cliente u where v.venta_fecha >= '".$anio."-".$mes."-01' and  v.venta_fecha <= '".$anio."-".$mes."-31' and v.cliente_id=u.cliente_id GROUP BY cliente_id ORDER by totalventas desc limit 10";
        $tove= $this->db->query($totalventas)->result_array();
        
        

        foreach($usuarios as $tve){
            
            $ususel=intval($tve['cliente_id']);

            $suma=round($tve['totalventas'],2);

            $registros[$ususel]=$suma;    
        }
       
        $data = array("totaltipos"=>$numusu, "tipos" =>$usuarios, "numerodepubli" =>$registros);
        echo   json_encode($data);
        
        
}
function torta3($anio,$mes)
{
               
        $data['sistema'] = $this->sistema;
        $numusu2 = 10;

        $id_usuarios = "SELECT DISTINCT dv.producto_id, u.producto_nombre,SUM(dv.detalleven_cantidad) as 'totalventas' FROM detalle_venta dv, venta v, producto u where v.venta_fecha >= '".$anio."-".$mes."-01' and  v.venta_fecha <= '".$anio."-".$mes."-31' and dv.venta_id= v.venta_id and dv.producto_id=u.producto_id GROUP BY u.producto_id ORDER by totalventas desc limit 10";
        //echo $id_usuarios; 
        $usuarios2 = $this->db->query($id_usuarios)->result_array();


        foreach($usuarios2 as $tve){
            $ususel=intval($tve['producto_id']);

            $suma=round($tve['totalventas'],2);

            $registros[$ususel]=$suma;    
        }
       
          
        $data = array("totaltipos"=>$numusu2, "tipos" =>$usuarios2, "numerodepubli" =>$registros);
        echo   json_encode($data);
        
        
}
    /*

     * Reporte de Ingresos y Salidas

     */

    function buscarlosreportes()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(141)){
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            
            $datos = $this->Reporte_ing_egr_model->get_reportes($valfecha1, $valfecha2, $usuario_id);
            /*$detalles = $this->Reporte_ing_egr_model->get_detalleventas_reporte($valfecha1, $valfecha2, $usuario_id);
            $ventas   = $this->Reporte_ing_egr_model->get_reportes($valfecha1, $valfecha2, $usuario_id);
            $datos=array("ventas" => $ventas, "detalles" => $detalles);*/
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
            
    }

    function buscarporfecha(){
        
        $data['sistema'] = $this->sistema;
        if($this->acceso(141)){
            if ($this->input->is_ajax_request()) {
                
                $fecha1 = $this->input->post('fecha1');   
                $fecha2 = $this->input->post('fecha2'); 
                $usuario = $this->input->post('usuario_id'); 
                $valfecha1 = "";
                $valfecha2 = "";
                $usuario_id = "";

                if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                    $valfecha1 = $fecha1;
                    $valfecha2 = $fecha2;
                }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                    $valfecha1 = $fecha1;
                    $valfecha2 = $fecha1;
                }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                    $valfecha1 = $fecha2;
                    $valfecha2 = $fecha2;
                }else{
                    $fecha1 = null;
                    $fecha2 = null;
                }

                if($usuario >  0){
                    $usuario_id = $usuario;
                }else{
                    $usuario_id = 0;
                }
                
                $data['registros'] = $this->Reporte_ing_egr_model->get_reportemovimiento($valfecha1, $valfecha2, $usuario_id);
                $data['totales'] = $this->Reporte_ing_egr_model->get_totalesmovimiento($valfecha1, $valfecha2, $usuario_id);
                //$data['bancos'] = $this->Banco_model->getall_bancosact_asc();
                
                /*if ($fecha1 == 0){
                    
                }else{
                    $datos = $this->Reporte_ing_egr_model->get_reportemovimientodia();
                    
                }*/
                
                /*$detalles = $this->Reporte_ing_egr_model->get_detalleventas_reporte($valfecha1, $valfecha2, $usuario_id);
                $ventas   = $this->Reporte_ing_egr_model->get_reportes($valfecha1, $valfecha2, $usuario_id);
                $datos=array("ventas" => $ventas, "detalles" => $detalles);*/
                echo json_encode($data);
            }else{                 
                show_404();
            }
        }
    }
    
    
    function buscardiario()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(141)){
            
        if ($this->input->is_ajax_request()) {

           

            $datos = $this->Reporte_ing_egr_model->get_reportemovimientodia();
                
            
            
            /*$detalles = $this->Reporte_ing_egr_model->get_detalleventas_reporte($valfecha1, $valfecha2, $usuario_id);
            $ventas   = $this->Reporte_ing_egr_model->get_reportes($valfecha1, $valfecha2, $usuario_id);
            $datos=array("ventas" => $ventas, "detalles" => $detalles);*/
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
            
    }



    /*

     * Menu de Reportes de Compras

     */

    function comprareportes(){

        $data['sistema'] = $this->sistema;
        if($this->acceso(137)){

            $data['page_title'] = "Reportes";
            $data['_view'] = 'reportes/comprareportes';
            $this->load->view('layouts/main',$data);

        }

            
    }



    /*

     * Menu de Reportes de Ventas

     */

    function ventareportes(){
        
        $data['sistema'] = $this->sistema;
        if($this->acceso(1)){
        $data['page_title'] = "Reportes";
        $data['_view'] = 'reportes/ventareportes';

        $this->load->view('layouts/main',$data);

        }

          
    }



    /*

     * Menu de Reportes de Servicios

     */

    function servicioreportes()
    {
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(142)){
            $data['page_title'] = "Reportes";
            $data['_view'] = 'reportes/servicioreportes';

            $this->load->view('layouts/main',$data);

        }


    }
    
    function planillacaja(){
        $data['sistema'] = $this->sistema;
        if($this->acceso(1)){
                $this->load->model('Empresa_model');
                $data['all_empresa'] = $this->Empresa_model->get_all_empresa();

                $this->load->model('Usuario_model');

                $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();

        /*

                $fecha1  = Date("Y-m-d");

                $fecha2  = $fecha1;

                $data['ingresos'] = $this->Reporte_ing_egr_model->get_reportes($fecha1, $fecha2);

        */
                $data['page_title'] = "Reportes";
                $data['_view'] = 'reportes/planillacaja';

                $this->load->view('layouts/main',$data);

        }

           

    }
    
    function reptotaling_efectivo(){
        
        $data['sistema'] = $this->sistema;
        if($this->acceso(1)){
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            
            $datos = $this->Reporte_ing_egr_model->get_reptotaling_efectivo($valfecha1, $valfecha2, $usuario_id);
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
          
    }

    /* ************************Reporte total de ventas*******************************+ */
    function reptotal_ventas(){
        
        $data['sistema'] = $this->sistema;
       if($this->acceso(1)){
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            
            $datos = $this->Reporte_ing_egr_model->get_reptotal_ventas($valfecha1, $valfecha2, $usuario_id);
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
           
    }
    /* ************************Reporte total de cobros de Creditos*******************************+ */
    function reptotal_cobroscredito(){
        
        $data['sistema'] = $this->sistema;
        if($this->acceso(1)){
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            
            $datos = $this->Reporte_ing_egr_model->get_reptotal_cobroscredito($valfecha1, $valfecha2, $usuario_id);
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
           
    }
    /* ************Reporte total de Egreso de efectivo******************************* */
    function reptotal_egresoefectivo(){

        $data['sistema'] = $this->sistema;
        if($this->acceso(1)){
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            
            $datos = $this->Reporte_ing_egr_model->get_reptotalegr_efectivo($valfecha1, $valfecha2, $usuario_id);
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
          
    }
    
    /* ************Reporte total de Egreso de Compras******************************* */
    function reptotal_egresocompra(){
        
        $data['sistema'] = $this->sistema;
        if($this->acceso(1)){
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            
            $datos = $this->Reporte_ing_egr_model->get_reptotalegr_compras($valfecha1, $valfecha2, $usuario_id);
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
            
    }
    
    function reportesformapago(){
        
        $data['sistema'] = $this->sistema;
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $formapago = $this->input->post('formapago'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            if($formapago == 1){
                $datos = $this->Reporte_ing_egr_model->get_repefectivo_ventas($valfecha1, $valfecha2, $usuario_id);
                echo json_encode($datos);
            }elseif($formapago == 2){
                $datos = $this->Reporte_ing_egr_model->get_repdebito_ventas($valfecha1, $valfecha2, $usuario_id);
                echo json_encode($datos);
            }elseif($formapago == 3){
                $datos = $this->Reporte_ing_egr_model->get_reptransban_ventas($valfecha1, $valfecha2, $usuario_id);
                echo json_encode($datos);
            }elseif($formapago == 4){
                $datos = $this->Reporte_ing_egr_model->get_reptarjcredito_ventas($valfecha1, $valfecha2, $usuario_id);
                echo json_encode($datos);
            }elseif($formapago == 5){
                $datos = $this->Reporte_ing_egr_model->get_repcheque_ventas($valfecha1, $valfecha2, $usuario_id);
                echo json_encode($datos);
            }elseif($formapago == 61){
                $datos = $this->Reporte_ing_egr_model->get_repcredito_ventas($valfecha1, $valfecha2, $usuario_id);
                echo json_encode($datos);
            }
        }   
        else
        {                 
            show_404();
        }
            
    }
    
    function egresorep(){
        
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(138)){
            $data['usuario_nombre'] = $this->session_data['usuario_nombre'];
            $data['usuario_id'] = $this->session_data['usuario_id'];
            $this->load->model('Empresa_model');
            $data['all_empresa'] = $this->Empresa_model->get_all_empresa();
            $data['page_title'] = "Reportes";
            $data['_view'] = 'reportes/egresorep';

            $this->load->view('layouts/main',$data);

        }

            
    }
    
    function reportegreso()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(138)){
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            
            $datos = $this->Reporte_ing_egr_model->get_egresoreportes($valfecha1, $valfecha2, $usuario_id);
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
           
    }
     function ingresorep()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(140)){
            $data['usuario_nombre'] = $this->session_data['usuario_nombre'];
            $data['usuario_id'] = $this->session_data['usuario_id'];
            $this->load->model('Empresa_model');
            $data['all_empresa'] = $this->Empresa_model->get_all_empresa();
            
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $rolusuario = $this->session_data['rol'];
            $data['tienepermiso'] = $rolusuario[171-1]['rolusuario_asignado'];
            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
            /*
            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            */
            $data['page_title'] = "Reportes";
            $data['_view'] = 'reportes/ingresorep';

            $this->load->view('layouts/main',$data);
        }
    }
    function reporteingreso()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(140)){
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            
            $datos = $this->Reporte_ing_egr_model->get_ingresoreportes($valfecha1, $valfecha2, $usuario_id);
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
            
    }
    /* reporte ingrso/egreso individual */
    function reportepersonal()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(139)){
        $this->load->model('Empresa_model');
        $data['all_empresa'] = $this->Empresa_model->get_all_empresa();

        $data['usuario_nombre'] = $this->session_data['usuario_nombre'];
        $data['usuario_id'] = $this->session_data['usuario_id'];
        $data['page_title'] = "Reportes";
        $data['_view'] = 'reportes/reportepersonal';

        $this->load->view('layouts/main',$data);

        }

           

    }
    function buscarlosreportespersonal()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(139)){
        if ($this->input->is_ajax_request()) {

            $fecha1 = $this->input->post('fecha1');   
            $fecha2 = $this->input->post('fecha2'); 
            $usuario = $this->input->post('usuario_id'); 
            $valfecha1 = "";
            $valfecha2 = "";
            $usuario_id = "";

            if(!($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha2;
            }elseif(!($fecha1 == null || empty($fecha1)) && ($fecha2 == null || empty($fecha2))){
                $valfecha1 = $fecha1;
                $valfecha2 = $fecha1;
            }elseif(($fecha1 == null || empty($fecha1)) && !($fecha2 == null || empty($fecha2))) {
                $valfecha1 = $fecha2;
                $valfecha2 = $fecha2;
            }else{
                $fecha1 = null;
                $fecha2 = null;
            }

            if($usuario >  0){
                $usuario_id = $usuario;
            }else{
                $usuario_id = 0;
            }
            
            $datos = $this->Reporte_ing_egr_model->get_reportes($valfecha1, $valfecha2, $usuario_id);
            echo json_encode($datos);
        }   
        else
        {                 
            show_404();
        }
        
        }
            
    }
    function ventacliente()
    {
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(156)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $this->load->model('Tipo_transaccion_model');
            $data['page_title'] = "Reporte de Ventas por Cliente";
            $data['empresa'] = $this->Empresa_model->get_empresa(1);  
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['_view'] = 'reportes/ventacliente';
            $this->load->view('layouts/main',$data);
        }
    }
    
    function ventaproducto()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(156)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $this->load->model('Tipo_transaccion_model');
            $data['page_title'] = "Reporte de ventas por producto";
            $data['empresa'] = $this->Empresa_model->get_empresa(1);  
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            //$data['all_entrega'] = $this->Detalle_venta_model->get_all_entrega();
            $data['_view'] = 'reportes/ventaproducto';
            $this->load->view('layouts/main',$data);
        }
    }
    
    function ventapagrupado()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(156)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $this->load->model('Tipo_transaccion_model');
            $data['page_title'] = "Reporte de ventas agrupado";
            $data['empresa'] = $this->Empresa_model->get_empresa(1);  
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['_view'] = 'reportes/ventapagrupado';
            $this->load->view('layouts/main',$data);
        }
    }
    
    function insumosutilizados()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(156)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $this->load->model('Tipo_transaccion_model');
            $data['page_title'] = "Reporte de ventas agrupado";
            $data['empresa'] = $this->Empresa_model->get_empresa(1);  
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['_view'] = 'reportes/insumosutilizados';
            $this->load->view('layouts/main',$data);
        }
    }
    
    function resumenventas()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(156)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $data['parametro'] = $this->parametros;
            $this->load->model('Tipo_transaccion_model');
            $data['page_title'] = "Reporte de ventas agrupado";
            $data['empresa'] = $this->Empresa_model->get_empresa(1);  
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();            
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['_view'] = 'reportes/resumenventas';
            $this->load->view('layouts/main',$data);
        }
    }
    /* reporte de ventas por categoria */
    function ventacategoria()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(157)){
        $data['empresa'] = $this->Empresa_model->get_all_empresa();
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['parametro'] = $this->parametros;
        $this->load->model('Moneda_model');
        $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
        $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
        $data['page_title'] = "Reporte de ventas por categorias";
        $this->load->model('Categoria_producto_model');
        $data['all_categoria'] = $this->Categoria_producto_model->get_all_categoria_producto();
        $data['_view'] = 'reportes/ventacategoria';

        $this->load->view('layouts/main',$data);
        }
    }
    /* reporte de ventas por ruta(zonas) */
    function ventaruta()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(157)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $data['empresa'] = $this->Empresa_model->get_all_empresa();
            $this->load->model('Categoria_clientezona_model');
            $data['all_zona'] = $this->Categoria_clientezona_model->get_all_categoria_clientezona();
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['page_title'] = "Reporte por Rutas o Zonas";
            $data['_view'] = 'reportes/ventaruta';

            $this->load->view('layouts/main',$data);
        }
    }
    /* reporte de ventas por usuario */
    function ventausuario()
    {
        $data['sistema'] = $this->sistema;
        $data['parametro'] =  $this->parametros;
        
        if($this->acceso(157)){
            $data['empresa'] = $this->Empresa_model->get_all_empresa();
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            //$this->load->model('Parametro_model');
            //$data['parametro'] = $this->Parametro_model->get_parametros();
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();

            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();

            $data['page_title'] = "Reporte de ventas por usuario";
            $data['_view'] = 'reportes/ventausuario';

            $this->load->view('layouts/main',$data);
        }
    }
    
    function repventa_categoria()
    {
        $data['sistema'] = $this->sistema;
        $fecha_desde = $this->input->post('fecha_desde');
        $fecha_hasta = $this->input->post('fecha_hasta');
        
        $this->load->model('Categoria_producto_model');
        $res_categoria = $this->Categoria_producto_model->get_all_categoria_ventaproducto_count($fecha_desde, $fecha_hasta);
        $numusu = count($res_categoria);
        
        /*$ventausuario = "SELECT COUNT(DISTINCT cliente_id) as 'distusu',SUM(venta_total) as 'totalventas' FROM venta where venta.venta_fecha >= '".$anio."-".$mes."-01' and  venta.venta_fecha <= '".$anio."-".$mes."-31' ORDER by totalventas limit 10";
        $usve = $this->db->query($ventausuario)->row_array();
        $numusu=10;*/

        $usuarios = $this->Categoria_producto_model->getall_ventapor_categoria($fecha_desde, $fecha_hasta);
        
        /*$id_usuarios = "SELECT DISTINCT v.cliente_id, u.cliente_nombre,SUM(venta_total) as 'totalventas' FROM venta v, cliente u where v.venta_fecha >= '".$anio."-".$mes."-01' and  v.venta_fecha <= '".$anio."-".$mes."-31' and v.cliente_id=u.cliente_id GROUP BY cliente_id ORDER by totalventas desc limit 10";
        $usuarios= $this->db->query($id_usuarios)->result_array();
        */
        
        $tove = $usuarios;
        /*$totalventas = "SELECT DISTINCT v.cliente_id, SUM(venta_total) as 'totalventas' FROM venta v, cliente u where v.venta_fecha >= '".$anio."-".$mes."-01' and  v.venta_fecha <= '".$anio."-".$mes."-31' and v.cliente_id=u.cliente_id GROUP BY cliente_id ORDER by totalventas desc limit 10";
        $tove= $this->db->query($totalventas)->result_array();
        */
        
        
        foreach($usuarios as $tve){
        $ususel=intval($tve['categoria_id']);
        
        $suma=round($tve['totalventas'],2);
        
        $registros[$ususel]=$suma;    
        }
        //var_dump($numusu);
        $data=array("totaltipos"=>$numusu, "tipos" =>$usuarios, "numerodepubli" =>$registros);
        echo   json_encode($data);
    }
    /* reporte de ventas por zonas */
    function repventa_zonas()
    {
        $data['sistema'] = $this->sistema;
        $fecha_desde = $this->input->post('fecha_desde');
        $fecha_hasta = $this->input->post('fecha_hasta');
        
        $this->load->model('Categoria_clientezona_model');
        $res_zona = $this->Categoria_clientezona_model->get_all_zonas_ventaproducto_count($fecha_desde, $fecha_hasta);
        $numusu = count($res_zona);
        
        $usuarios = $this->Categoria_clientezona_model->getall_ventapor_zonas($fecha_desde, $fecha_hasta);
        
        $tove = $usuarios;
        
        foreach($usuarios as $tve){
        $ususel=intval($tve['zona_id']);
        
        $suma=round($tve['totalventas'],2);
        
        $registros[$ususel]=$suma;    
        }
        //var_dump($numusu);
        $data=array("totaltipos"=>$numusu, "tipos" =>$usuarios, "numerodepubli" =>$registros);
        echo   json_encode($data);   
    }
    /* reporte de ventas por usuario */
    function repventa_usuario()
    {
        $data['sistema'] = $this->sistema;
        $fecha_desde = $this->input->post('fecha_desde');
        $fecha_hasta = $this->input->post('fecha_hasta');
        $usuario_id = $this->input->post('usuario_id');
        $elusuario = "";
        
        if($usuario_id >0){
            $elusuario = "and vs.usuario_id = $usuario_id";
        }
        $this->load->model('Categoria_producto_model');
        $res_usuario = $this->Categoria_producto_model->get_all_usuario_ventaproducto_count($fecha_desde, $fecha_hasta, $elusuario);
        $numusu = count($res_usuario);
        
        $usuarios = $this->Categoria_producto_model->getall_ventapor_usuario($fecha_desde, $fecha_hasta, $elusuario);
        $tove = $usuarios;
        
        foreach($usuarios as $tve){
            $ususel=intval($tve['usuario_id']);
            $suma=round($tve['totalventas'],2);
            $registros[$ususel]=$suma;
        }
        //var_dump($numusu);
        $data=array("totaltipos"=>$numusu, "tipos" =>$usuarios, "numerodepubli" =>$registros);
        echo   json_encode($data);   
    }
    
    function venta()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(141)){
        
            $data['page_title'] = "Reporte de ventas";
            $data['_view'] = 'reportes/indexventa';

            $this->load->view('layouts/main',$data);
        }
    }
    function reporte_generalventa()
    {
        $data['sistema'] = $this->sistema;
        $data['empresa'] = $this->Empresa_model->get_empresa(1);
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $this->load->model('Tipo_transaccion_model');
        $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
        //$this->load->model('Parametro_model');
        //$elparametro = $this->Parametro_model->get_parametros();
        $data['parametro'] = $this->parametros;
        $this->load->model('Moneda_model');
        $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
        $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
        //$data['elparametro'] = $elparametro;
        $data['page_title'] = "Reporte general - Ventas a Clientes";
        $data['_view'] = 'reportes/reporte_generalventa';
        $this->load->view('layouts/main',$data);
    }
    /* busca ventas por cliente en un rango de fachas */
    function busqueda_venta()
    {
        $data['sistema'] = $this->sistema;
        if ($this->input->is_ajax_request()) {
            $fecha_desde = $this->input->post('fecha_desde');
            $fecha_hasta = $this->input->post('fecha_hasta');

            $datos = $this->Reporte_ing_egr_model->getall_ventaagrupado_porcliente($fecha_desde, $fecha_hasta);
            echo json_encode($datos);
        }else{
            show_404();
        }
    }
    function ventacategoria_pagrupado()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(156)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $data['page_title'] = "Reporte de ventas de productos agrupados por categorias";
            $data['empresa'] = $this->Empresa_model->get_empresa(1);  
            $this->load->model('Categoria_producto_model');
            $data['all_categoria'] = $this->Categoria_producto_model->get_all_categoria_producto();
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['_view'] = 'reportes/ventacategoria_pagrupado';
            $this->load->view('layouts/main',$data);
        }
    }
    function ventacategoriap()
    {
        $data['sistema'] = $this->sistema;
        //if($this->acceso(156)){
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $data['page_title'] = "Reporte de ventas de productos agrupados por categorias";
            $data['empresa'] = $this->Empresa_model->get_empresa(1);  
            //$this->load->model('Categoria_producto_model');
            //$data['all_categoria'] = $this->Categoria_producto_model->get_all_categoria_producto();
            $data['parametro'] = $this->parametros;
            //$this->load->model('Moneda_model');
            //$data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            //$data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['_view'] = 'reportes/ventacategoriap';
            $this->load->view('layouts/main',$data);
        //}
    }
    /* reeporte de productos agrupados por categoria */
    function buscarprodagrupados_porcategoria()
    {
        if ($this->input->is_ajax_request()) {
            $filtro = $this->input->post('filtro');
            $datos = $this->Reporte_ing_egr_model->reporteventas_prodagrupados($filtro);
            echo json_encode($datos);
        }else{
            show_404();
        }
    }
    
    /* reporte de ventas agrupado por usuario en un rango de fechas(por dia) */
    function ventausuariofecha()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(157)){
        $data['empresa'] = $this->Empresa_model->get_all_empresa();
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        $data['parametro'] = $this->parametros;
        $this->load->model('Moneda_model');
        $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
        $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
        
        $this->load->model('Usuario_model');
        $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
        
        $data['page_title'] = "Reporte de ventas por usuario";
        $data['_view'] = 'reportes/ventausuariofecha';

        $this->load->view('layouts/main',$data);
        }
    }
    
    /* obtiene los reportes de usuarios por fecha y usuario o usuarios */
    function repventa_usuariofecha(){
        
        $data['sistema'] = $this->sistema;
        
            if ($this->input->is_ajax_request()){
                $fecha_desde = $this->input->post('fecha_desde');
                $fecha_hasta = $this->input->post('fecha_hasta');
                $usuario_id = $this->input->post('usuario_id');
                $elusuario = "";
                $this->load->model('Usuario_model');
                if($usuario_id >0){
                    //$elusuario = "and vs.usuario_id = $usuario_id";
                    $allusuario = $this->Usuario_model->get_usuario_activo($usuario_id);
                }else{
                    $allusuario = $this->Usuario_model->get_all_usuario_activo();
                }
                $datos = $allusuario;
                
                echo json_encode($datos);
                
            }else{
                show_404();
            }
    }
    
    function getventatotalusuario(){
        
        if ($this->input->is_ajax_request()){
            $usuario_id = $this->input->post('usuario_id');
            $lafecha = $this->input->post('lafecha');
            $datos = $this->Reporte_ing_egr_model->get_totalventasfecha($usuario_id, $lafecha);
            echo json_encode($datos);
        }else{
            show_404();
        }
        
    }
    
    function getall_totalventasfechas(){
        
        if ($this->input->is_ajax_request()){
            $fecha_desde = $this->input->post('fecha_desde');
            $fecha_hasta = $this->input->post('fecha_hasta');
            $usuario_id = $this->input->post('usuario_id');
            $datos = $this->Reporte_ing_egr_model->getall_totalventasfecha($fecha_desde, $fecha_hasta, $usuario_id);
            echo json_encode($datos);
        }else{
            show_404();
        }
    }
    /* reporte General */
    function reporte_general()
    {
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(157)){
            $data['empresa'] = $this->Empresa_model->get_all_empresa();
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            $data['parametro'] = $this->parametros;
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();

            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();

            $this->load->model('Tipo_transaccion_model');
            $data['all_tipotransaccion'] = $this->Tipo_transaccion_model->get_all_tipo();

            $this->load->model('Forma_pago_model');
            $data['all_formapago'] = $this->Forma_pago_model->get_all_forma();

            $this->load->model('Categoria_clientezona_model');
            $data['all_zona'] = $this->Categoria_clientezona_model->get_all_categoria_clientezona_id1();

            $this->load->model('Producto_preferencia_model');
            $data['all_preferencia'] = $this->Producto_preferencia_model->get_allpreferencia_producto();

            $this->load->model('Clasificador_model');
            $data['all_clasificador'] = $this->Clasificador_model->get_all_clasificador_asc();

            $this->load->model('Categoria_producto_model');
            $data['all_categoria'] = $this->Categoria_producto_model->get_all_categoria_producto();
            /*
            $this->load->model('Categoria_trabajo_model');
            $data['all_categoriatrabajo'] = $this->Categoria_trabajo_model->get_all_categoria_trabajo_id1();

            $this->load->model('Procedencia_model');
            $data['all_procedencia'] = $this->Procedencia_model->get_all_procedencia_id1();

            $this->load->model('Tiempo_uso_model');
            $data['all_tiempouso'] = $this->Tiempo_uso_model->get_all_tiempo_uso_id1();

            $this->load->model('Categoria_servicio_model');
            $data['all_categoriaservicio'] = $this->Categoria_servicio_model->get_all_categoria_servicio_id1();

            $this->load->model('tipo_servicio_model');
            $data['all_tiposervicio'] = $this->tipo_servicio_model->get_all_tipo_servicio_id1();
            */
            $data['page_title'] = "Reporte General";
            $data['_view'] = 'reportes/reporte_general';

            $this->load->view('layouts/main',$data);
        }
    }
    /* busca reportes de ventas; servicios; produccion */
    function reporte_buscarreporte(){
        
        $data['sistema'] = $this->sistema;
        
        if ($this->input->is_ajax_request()){
            $filtrar = $this->input->post('filtrar');
            $fecha_desde = $this->input->post('fecha_desde');
            $fecha_hasta = $this->input->post('fecha_hasta');
            $vendedor_id = $this->input->post('vendedor_id');
            $prevendedor_id = $this->input->post('prevendedor_id');
            $tipotrans_id = $this->input->post('tipotrans_id');
            $forma_id = $this->input->post('forma_id');
            $comprobante = $this->input->post('comprobante');
            $zona_id = $this->input->post('zona_id');
            //$espedido = $this->input->post('espedido');
            $ventapreventa = $this->input->post('ventapreventa');
            $cliente_id = $this->input->post('cliente_id');
            $producto_id = $this->input->post('producto_id');
            $usuario_id = $this->input->post('usuario_id'); // para servicios
            $preferencia_id = $this->input->post('preferencia_id');
            $clasificador_id = $this->input->post('clasificador_id');
            $categoria_id = $this->input->post('categoria_id');
            $subcategoria_id = $this->input->post('subcategoria_id');
            $elfiltro = "";
            $datos = "";
            if($filtrar == 1){ // <-- Venta
                $elfiltro .= "date(vs.venta_fecha) >= '$fecha_desde'
                             and date(vs.venta_fecha) <= '$fecha_hasta'";
                if($vendedor_id >0){
                    $elfiltro .= " and vs.usuario_id = $vendedor_id";
                }
                if($prevendedor_id >0){
                    $elfiltro .= " and vs.usuarioprev_id = $prevendedor_id";
                }
                if($tipotrans_id >0){
                    $elfiltro .= " and vs.tipotrans_id = $tipotrans_id";
                }
                if($forma_id >0){
                    $elfiltro .= " and vs.forma_id = $forma_id";
                }
                if($comprobante ==1){
                    $elfiltro .= " and vs.venta_tipodoc = $comprobante";
                }elseif($comprobante == 2){
                    $elfiltro .= " and vs.venta_tipodoc = $comprobante";
                }
                if($zona_id >0){
                    $elfiltro .= " and vs.zona_id = $zona_id";
                }
                if($ventapreventa ==1){
                    $elfiltro .= " and vs.pedido_id > 0";
                }elseif($comprobante == 2){
                    $elfiltro .= " and vs.pedido_id = 0";
                }
                if($cliente_id >0){
                    $elfiltro .= " and vs.cliente_id = $cliente_id";
                }
                if($producto_id >0){
                    $elfiltro .= " and vs.producto_id = $producto_id";
                }
                if($preferencia_id >0){
                    $elfiltro .= " and vs.preferencia_id = $preferencia_id";
                }
                if($clasificador_id >0){
                    $elfiltro .= " and vs.clasificador_id = $clasificador_id";
                }
                if($categoria_id >0){
                    $elfiltro .= " and vs.categoria_id = $categoria_id";
                }
                if($subcategoria_id >0){
                    $elfiltro .= " and vs.subcategoria_id = $subcategoria_id";
                }
                $datos = $this->Reporte_ing_egr_model->reporte_general($elfiltro);
            }elseif($filtrar == 2){ // <-- Servicios
                $elfiltro .= "date(ci.detalleserv_fechaentregado) >= '$fecha_desde'
                             and date(ci.detalleserv_fechaentregado) <= '$fecha_hasta'";
                if($usuario_id >0){
                    $elfiltro .= " and ci.usuariopsaldo_id = $usuario_id";
                }
                if($tipotrans_id >0){
                    $elfiltro .= " and ci.tipotrans_id = $tipotrans_id";
                }
                if($forma_id >0){
                    $elfiltro .= " and ci.forma_id = $forma_id";
                }
                if($comprobante ==1){
                    $elfiltro .= " and ci.servicio_id = f.servicio_id";
                }elseif($comprobante == 2){
                    $elfiltro .= " and (f.servicio_id is null or f.`servicio_id` = '' or f.`servicio_id` < 0)";
                }
                if($cliente_id >0){
                    $elfiltro .= " and ci.cliente_id = $cliente_id";
                }
                if($producto_id >0){
                    $elfiltro .= " and ci.producto_id = $producto_id";
                }
                if($preferencia_id >0){
                    $elfiltro .= " and ci.preferencia_id = $preferencia_id";
                }
                if($clasificador_id >0){
                    $elfiltro .= " and ci.clasificador_id = $clasificador_id";
                }
                if($categoria_id >0){
                    $elfiltro .= " and ci.categoria_id = $categoria_id";
                }
                if($subcategoria_id >0){
                    $elfiltro .= " and ci.subcategoria_id = $subcategoria_id";
                }
                $datos = $this->Reporte_ing_egr_model->reporte_generalinsumo($elfiltro);
            }elseif($filtrar == 3){ // <-- Produccion
                $elfiltro .= "date(pr.produccion_fecha) >= '$fecha_desde'
                             and date(pr.produccion_fecha) <= '$fecha_hasta'";
                if($usuario_id >0){
                    $elfiltro .= " and pr.usuario_id = $usuario_id";
                }
                /*if($tipotrans_id >0){
                    $elfiltro .= " and ci.tipotrans_id = $tipotrans_id";
                }
                if($forma_id >0){
                    $elfiltro .= " and ci.forma_id = $forma_id";
                }*/
                /*if($comprobante ==1){
                    $elfiltro .= " and ci.venta_tipodoc = $comprobante";
                }elseif($comprobante == 2){
                    $elfiltro .= " and ci.venta_tipodoc = $comprobante";
                }*/                
                /*if($cliente_id >0){
                    $elfiltro .= " and ci.cliente_id = $cliente_id";
                }*/
                if($producto_id >0){
                    $elfiltro .= " and pr.producto_id = $producto_id";
                }
                if($preferencia_id >0){
                    $elfiltro .= " and pr.preferencia_id = $preferencia_id";
                }
                if($clasificador_id >0){
                    $elfiltro .= " and pr.clasificador_id = $clasificador_id";
                }
                if($categoria_id >0){
                    $elfiltro .= " and pr.categoria_id = $categoria_id";
                }
                if($subcategoria_id >0){
                    $elfiltro .= " and pr.subcategoria_id = $subcategoria_id";
                }
                $datos = $this->Reporte_ing_egr_model->reporte_generalproduccion($elfiltro);
            }
            echo json_encode($datos);
        }else{
            show_404();
        }
    }
    /*
     * Reporte de ventas por dia de un usuario dado un rango de fechas!..
     */
    function reporte_usuariodia()
    {
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(18)){
            //**************** inicio contenido ***************
            $data['rolusuario'] = $this->session_data['rol'];
            $data['page_title'] = "Reporte por dia de usuarios";
            $data['parametro'] = $this->parametros;
            //$this->load->model('Estado_model');
            //$data['estado'] = $this->Estado_model->get_tipo_estado(1);
            $this->load->model('Venta_model');
            $data['all_usuario'] = $this->Venta_model->get_usuarios();
            
            $this->load->model('Categoria_clientezona_model');
            $data['all_zona'] = $this->Categoria_clientezona_model->get_all_categoria_clientezona_id1();
            
            $this->load->model('Moneda_model');
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['lamoneda'] = $this->Moneda_model->getalls_monedasact_asc();
            $data['_view'] = 'reportes/reporte_usuariodia';
            $this->load->view('layouts/main',$data);
            //**************** fin contenido ***************
        }
    }
    /* obtiene la suma de las ventas por dia en un rango de fechas de un usuario*/
    function ventas_mes()
    {
        $data['sistema'] = $this->sistema;
        
        $usuario_id = $this->session_data['usuario_id'];
        
            if ($this->input->is_ajax_request()){
                $fecha_inicio = $this->input->post("fecha_inicio");
                $fecha_fin    = $this->input->post("fecha_fin");
                $usuario_id = $this->input->post("usuario_id");
                $zona_id = $this->input->post("zona_id");
                $filtro = " and v.usuario_id = $usuario_id";
                if($zona_id >0){
                    $filtro .= " and c.zona_id = $zona_id";
                }
        $this->load->model('Reporte_ing_egr_model');
        $lasventas = $this->Reporte_ing_egr_model->reporte_generalfecha_usuario($fecha_inicio, $fecha_fin, $filtro);
                echo json_encode($lasventas);
            }else{
                show_404();
            }
        
            
    }
    /**
     * Get reporte de mora de las ventas a credito
     */
    function reporte_mora(){
        
        $data['sistema'] = $this->sistema;
        if($this->acceso(141)){
            $data['empresa'] = $this->Empresa_model->get_all_empresa();
            
            $data['tipousuario_id']  = $this->session_data['tipousuario_id'];
            $data['usuario_id']  = $this->session_data['usuario_id'];
            $data['usuario_nombre']  = $this->session_data['usuario_nombre'];
            $data['categorias'] = $this->Categoria_producto_model->get_all_categoria_producto();      
            $data['parametro'] = $this->parametros;
    
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();
            $data['page_title'] = "Reporte de mora";
            $data['_view'] = 'reportes/reporte_mora';
    
            $this->load->view('layouts/main',$data);
        }
    }

    function get_moras(){
        
        $data['sistema'] = $this->sistema;
        
        if($this->input->is_ajax_request()){
            $usuario = $this->input->post('usuario');
            $categoria = $this->input->post('categoria');
            $sub_categoria = $this->input->post('sub_categoria');
            $condicion1 = $categoria == 0 ? "" : "AND p.categoria_id = $categoria";
            $condicion2 = $sub_categoria == 0 ? "" : "AND p.subcategoria_id = $sub_categoria";
            $all_usuarios = 0;
            $consulta_usuario = "";
            if($usuario != $all_usuarios){
                $consulta_usuario = "AND c2.usuario_id = $usuario";
            }
            $moras = $this->Cuotum_model->get_moras($consulta_usuario,$condicion1,$condicion2);
            echo json_encode($moras);
        }else{
            show_404();
        }
    }
    /*
     * Reporte de productos con fechas de vencimiento
     */
    function productosvencidos()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(18)){
            $data['page_title'] = "Reporte de productos vencidos";
            $data['empresa'] = $this->Empresa_model->get_empresa(1);
            $data['parametro'] = $this->parametros;
            $data['_view'] = 'reportes/productosvencidos';
            $this->load->view('layouts/main',$data);
        }
    }
    /* obtiene los productos con fechas de vencimiento y los guarda en una tabla auxiliar */
    function productos_fechasvencimiento()
    {
        $data['sistema'] = $this->sistema;
        if ($this->input->is_ajax_request()){
            $productos = $this->Inventario_model->get_inventario();
            $this->load->model('Vencimiento_producto_model');
            $this->Vencimiento_producto_model->truncar_vencimientoproducto();
            foreach ($productos as $producto) {
                $existencia = 0;
                $res = 0;
                if($producto["existencia"] >0){
                    $detalles_compra = $this->Compra_model->mostrar_detallescompraproducto($producto["producto_id"]);
                    $existencia = $producto["existencia"];
                    foreach ($detalles_compra as $detalle) {
                        $res = $existencia - $detalle["detallecomp_cantidad"];
                        if($res <= 0){
                            $params = array(
                                'producto_id' => $producto['producto_id'],
                                'producto_nombre' => $producto['producto_nombre'],
                                'producto_codigo' => $producto['producto_codigo'],
                                'producto_cantidad' => $existencia,
                                'compra_id' => $detalle['compra_id'],
                                'proveedor_nombre' => $detalle['proveedor_nombre'],
                                'detallecomp_fechavencimiento' => $detalle['detallecomp_fechavencimiento'],
                            );
                            $vencimientoprod_id = $this->Vencimiento_producto_model->add_vencimientoproducto($params);
                            break;
                        }else{
                            $params = array(
                                'producto_id' => $producto['producto_id'],
                                'producto_nombre' => $producto['producto_nombre'],
                                'producto_codigo' => $producto['producto_codigo'],
                                'producto_cantidad' => $detalle["detallecomp_cantidad"],
                                'compra_id' => $detalle['compra_id'],
                                'proveedor_nombre' => $detalle['proveedor_nombre'],
                                'detallecomp_fechavencimiento' => $detalle['detallecomp_fechavencimiento'],
                            );
                            $vencimientoprod_id = $this->Vencimiento_producto_model->add_vencimientoproducto($params);
                            $existencia = $res;
                        }
                    }
                }
            }
            echo json_encode("ok");
        }else{
            show_404();
        }
    }
    /* obtiene los productos con fechas de vencimiento de vencimiento_producto */
    function get_fechasvencimiento()
    {
        $data['sistema'] = $this->sistema;
        if($this->input->is_ajax_request()){
            $fecha_vencimiento = $this->input->post("fecha_vencimiento");
            $filtrar = $this->input->post("filtrar");
            $tipo_filtro = $this->input->post("tipo_filtro");
            date_default_timezone_set('America/La_Paz');
            $fecha_hoy = date('Y-m-d');
            $fecha_filtro = "";
            $parametro = "";
            if($filtrar != ""){
                $parametro = "and p.producto_nombre like '%".$filtrar."%'";
            }
            if($tipo_filtro == 1){
                $fecha_filtro = " date(p.detallecomp_fechavencimiento) < '".$fecha_hoy."' ";
            }elseif($tipo_filtro == 2){
                $fecha_filtro = " date(p.detallecomp_fechavencimiento) >= '".$fecha_hoy."' ";
            }elseif($tipo_filtro == 3){
                $fecha_filtro = " date(p.detallecomp_fechavencimiento) <= '".$fecha_vencimiento."' ";
            }elseif($tipo_filtro == 4){
                $fecha_filtro = " date(p.detallecomp_fechavencimiento) >= '".$fecha_vencimiento."' ";
            }elseif($tipo_filtro == 5){
                $fecha_filtro = " 1 = 1 ";
            }
            
            $this->load->model('Vencimiento_producto_model');
            $vencimiento = $this->Vencimiento_producto_model->get_vencimiento_parametros($fecha_filtro, $parametro);
            
            echo json_encode($vencimiento);
        }else{
            show_404();
        }
    }
    /* obtiene los detalles de una venta */
    function get_detalleventa()
    {
        if($this->input->is_ajax_request()){
            $venta_id = $this->input->post("venta_id");
            
            $this->load->model('Detalle_venta_model');
            $detalle = $this->Detalle_venta_model->get_detalle_venta($venta_id);
            
            echo json_encode($detalle);
        }else{
            show_404();
        }
    }
    
    /* obtiene los detalles de una venta */
    function resumen_ventascaja()
    {
        $data['sistema'] = $this->sistema;
        
        if($this->input->is_ajax_request()){
            $filtro = $this->input->post("filtro");
            $fecha_reporte = $this->input->post("fecha_reporte");
            $usuario_id = $this->input->post("usuario_id");
            
            $reporte = $this->Detalle_venta_model->get_resumenventasadmin($filtro);
            $caja = $this->Caja_model->get_cajausuario_admin($fecha_reporte, $usuario_id);
            if($usuario_id == 0){
                $elusuario = "";
                $punto_venta = "";
            }else{
                $elusuario = "usuario_id = $usuario_id and";
                $punto_venta = $this->PuntoVenta_model->get_puntoventausuario($usuario_id);
            }
            
            $sql = "select MIN(factura_id) as desde, MAX(factura_id) as hasta,
                    MAX(factura_id)-MIN(factura_id) as ventas from factura
                    where $elusuario date(factura_fecha) = date('$fecha_reporte')";
            $resumen = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as total_ventas
                    from factura
                    where $elusuario date(factura_fecha) = date('$fecha_reporte')";
            $total_ventas = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as ventas_validas
                    from factura
                    where $elusuario date(factura_fecha) = date('$fecha_reporte') 
                    and estado_id=1 and factura_codigodescripcion = 'VALIDADA'";
            $validas = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as mal_emitidas
                    from factura
                    where $elusuario date(factura_fecha) = date('$fecha_reporte') 
                    and factura_codigodescripcion != 'VALIDADA'";
            $mal_emitidas = $this->Venta_model->consultar($sql);
            
            $sql = "select count(*) as anuladas
                    from factura
                    where $elusuario date(factura_fecha) = date('$fecha_reporte')
                    and estado_id<>1 and factura_codigodescripcion = 'VALIDADA'";
            $anuladas = $this->Venta_model->consultar($sql);
            
            $data=array("reporte"=>$reporte, "caja" =>$caja, "punto_venta" =>$punto_venta, "resumen" =>$resumen, "total_ventas" =>$total_ventas, "validas" =>$validas, "mal_emitidas" =>$mal_emitidas, "anuladas" =>$anuladas);
            echo json_encode($data);
            
        }else{
            show_404();
        }
    }
    
}
