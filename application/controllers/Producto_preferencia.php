<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Producto_preferencia extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Producto_preferencia_model');
        
    } 

    /*
     * Listing of producto_preferencia
     */
    function index()
    {
        $data['page_title'] = "Producto - Preferencia";
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('producto_preferencia/index?');
        $config['total_rows'] = $this->Producto_preferencia_model->get_all_producto_preferencia_count();
        $this->pagination->initialize($config);

        $data['producto_preferencia'] = $this->Producto_preferencia_model->get_producto_preferencia_all($params);
        
        $data['_view'] = 'producto_preferencia/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new producto_preferencia
     */
    function add()
    {
        $data['page_title'] = "AÃ±adir Producto - Preferencia";
        $this->load->library('form_validation');
        $this->form_validation->set_rules('producto_id','Producto ','trim|required', array('required' => 'Este Campo no debe ser vacio'));
        if($this->form_validation->run())     
        {
            $params = array(
                'producto_preferencia_descripcion' => $this->input->post('producto_preferencia_descripcion'),
                'producto_preferencia_foto' => $foto,
            );
            
            $producto_preferencia_id = $this->Producto_preferencia_model->add_producto_preferencia($params);
            redirect('producto_preferencia/index');
        }else{
            $estado_id = 1;
            $this->load->model('Preferencia_model');
            $data['all_preferencia'] = $this->Preferencia_model->get_all_preferenciaestado($estado_id);
            $data['_view'] = 'producto_preferencia/add';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Editing a producto_preferencia
     */
    function edit($producto_preferencia_id)
    {
        $data['page_title'] = "Forma Pago";
        // check if the producto_preferencia exists before trying to edit it
        $data['producto_preferencia'] = $this->Producto_producto_preferencia_model->get_producto_preferencia($producto_preferencia_id);
        
        if(isset($data['producto_preferencia']['producto_preferencia_id']))
        {
            $this->load->library('form_validation');
                $this->form_validation->set_rules('producto_preferencia_descripcion','Producto_producto_preferencia','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                if($this->form_validation->run())
                {
                    $params = array(
                        'estado_id' => $this->input->post('estado_id'),
                        'producto_preferencia_descripcion' => $this->input->post('producto_preferencia_descripcion'),
                        'producto_preferencia_foto' => $foto,
                    );
                    $this->Producto_producto_preferencia_model->update_producto_preferencia($producto_preferencia_id,$params);            
                    redirect('producto_preferencia/index');
                }else{
                    $this->load->model('Estado_model');
                    $data['all_estado'] = $this->Estado_model->get_estado_tipo(1);
                    $data['_view'] = 'producto_preferencia/edit';
                    $this->load->view('layouts/main',$data);
                }
        }
        else
            show_error('The producto_preferencia you are trying to edit does not exist.');
    } 

    /*
     * Deleting producto_preferencia
     */
    function remove($producto_preferencia_id)
    {
        $producto_preferencia = $this->Producto_producto_preferencia_model->get_producto_preferencia($producto_preferencia_id);

        // check if the producto_preferencia exists before trying to delete it
        if(isset($producto_preferencia['producto_preferencia_id']))
        {
            $this->Producto_producto_preferencia_model->delete_producto_preferencia($producto_preferencia_id);
            redirect('producto_preferencia/index');
        }
        else
            show_error('The producto_preferencia you are trying to delete does not exist.');
    }
    
    function buscarproducto()
    {
        //if($this->acceso(102)) {
            if ($this->input->is_ajax_request()) {
                $parametro   = $this->input->post('parametro');
                $this->load->model('Producto_model');
                $resultado = $this->Producto_model->get_busqueda_productos($parametro);
                echo json_encode($resultado);
            }else{
                show_404();
            }
        //}
    }
}
