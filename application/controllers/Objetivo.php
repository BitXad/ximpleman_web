<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
class Objetivo extends CI_Controller{
    function __construct(){
        parent::__construct();
        
        $this->load->model(array('Usuario_model', 'Rol_usuario_model', 'Tipo_usuario_model', 'Objetivo_model', 'user_model'));
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    }

    private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
    * Index objetivo
    */
    function index($a = null){
        // if($this->acceso(30)) {
            $data['tipo_usuario_id'] = $this->session_data['tipousuario_id'];
            // $data['usuario'] = $this->Usuario_model->get_all_usuario();
            $data['objetivo']= $this->Objetivo_model->get_usuarios_objetivos();
            $data['_view'] = 'objetivo/index';
            $this->load->view('layouts/main',$data);
        // }
    }
    /*
    * Dar objetivo a un usuario
    */
    function add(){
        // if($this->acceso()){
            $this->load->library('form_validation');
    
            $this->form_validation->set_rules('objetivo_minimo','Objetivo Minimo','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_aceptable','Objetivo Aceptable','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_diario','Objetivo Diario','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_mes','Objetivo Mes','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_pedido','Objetivo Pedido','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_pedido_mes','Objetivo Pedido Mes','trim|required', array('required' => 'Este Campo no debe ser vacio'));
            if($this->form_validation->run())     
            {
                $params = array(
                    'usuario_id' => $this->input->post('usuario_id'),
                    'objetivo_minimo' => $this->input->post('objetivo_minimo'),
                    'objetivo_aceptable' => $this->input->post('objetivo_aceptable'),
                    'objetivo_diario' => $this->input->post('objetivo_diario'),
                    'objetivo_mes' => $this->input->post('objetivo_mes'),
                    'objetivo_pedido' => $this->input->post('objetivo_pedido'),
                    'objetivo_pedido_mes' => $this->input->post('objetivo_pedido_mes'),
                );
                
                $objetivo_id = $this->Objetivo_model->add_objetivo($params);
                redirect('objetivo/index');
            }
            else
            {
                $data['usuarios_obejetivo'] = $this->Objetivo_model->get_usuarios_sin_objetivos();
                $data['page_title'] = "Objetivos";
                $data['_view'] = 'objetivo/add';
                $this->load->view('layouts/main',$data);
            }
        // }
    }
    /*
    * Editar los objetivos de un usuario
    */
    function edit($objetivo_id){
        $data['usuarios_objetivo'] = $this->Objetivo_model->get_objetivo_usuario($objetivo_id);

        if(isset($data['usuarios_objetivo']['objetivo_id'])){
            $this->load->library('form_validation');
    
            $this->form_validation->set_rules('objetivo_minimo','Objetivo Minimo','required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_aceptable','Objetivo Aceptable','required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_diario','Objetivo Diario','required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_mes','Objetivo Mes','required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_pedido','Objetivo Pedido','required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('objetivo_pedido_mes','Objetivo Pedido Mes','required', array('required' => 'Este Campo no debe ser vacio'));
            
            if($this->form_validation->run()){
                $params = array(
                    'usuario_id' => $this->input->post('usuario_id'),
                    'objetivo_minimo' => $this->input->post('objetivo_minimo'),
                    'objetivo_aceptable' => $this->input->post('objetivo_aceptable'),
                    'objetivo_diario' => $this->input->post('objetivo_diario'),
                    'objetivo_mes' => $this->input->post('objetivo_mes'),
                    'objetivo_pedido' => $this->input->post('objetivo_pedido'),
                    'objetivo_pedido_mes' => $this->input->post('objetivo_pedido_mes')
                );
                
                $this->Objetivo_model->update_objetivo($objetivo_id,$params);
                redirect('objetivo/');
            }else{
                $data['usuarios_obejetivo'] = $this->Objetivo_model->get_usuarios_sin_objetivos();
                $data['page_title'] = "Objetivos";
                $data['_view'] = 'objetivo/edit';
                $this->load->view('layouts/main',$data);
            }

        }else{
            show_error('The moneda you are trying to edit does not exist.');
        }
    }
    /*
    * Todos los Objetivos
    */
    function get_all_objetivos(){}

    /*
    * Obtener el ultimo dia del mes
    */
    public function getUltimoDiaMes($elAnio,$elMes) {
        return date("d",(mktime(0,0,0,$elMes+1,1,$elAnio)-1));
    }
    /*
    * Objetivos de un mes
    */
    function objetivos_mes(){
        $anio = $this->input->post("anio");
        $mes = $this->input->post("mes"); 
        $dia = "";                   
    
        $primer_dia = 1;
        $ultimo_dia = $this->getUltimoDiaMes($anio,$mes);
        
        $fecha_inicial = date("Y-m-d H:i:s", strtotime($anio."-".$mes."-".$primer_dia) );
        $fecha_final = date("Y-m-d H:i:s", strtotime($anio."-".$mes."-".$ultimo_dia) );
        
        $fecha_inicial = $anio."-".$mes."-01";
        $fecha_final = $anio."-".$mes."-31";
        // --------------------------------------------------------------------------------------------
        $sql_ventas_mes = "SELECT u.`usuario_nombre`,u.`usuario_imagen`, t.`tipousuario_descripcion`, e.*, o.`objetivo_minimo`,
                                o.`objetivo_aceptable`,o.`objetivo_diario`,o.`objetivo_mes`, SUM(d.detalleven_total) AS total_mes
                        FROM usuario AS u
                        LEFT JOIN objetivo AS o ON o.usuario_id = u.usuario_id
                        LEFT JOIN estado AS e ON u.`estado_id` = e.`estado_id`
                        LEFT JOIN tipo_usuario AS t ON t.`tipousuario_id` = u.`tipousuario_id`
                        LEFT JOIN detalle_venta AS d ON d.`usuario_id` = u.`usuario_id`
                        LEFT JOIN venta AS v ON v.`usuario_id`=o.usuario_id
                        WHERE o.usuario_id = u.usuario_id AND
                        v.venta_id = d.venta_id AND 
                        v.venta_fecha >= '".$fecha_inicial."' AND 
                        v.venta_fecha <= '".$fecha_final."' AND
                        v.usuario_id = u.usuario_id
                        GROUP BY u.usuario_nombre 
                        ORDER BY u.usuario_nombre
                    ";
        $ventas_mes = $this->db->query($sql_ventas)->result_array();
        // --------------------------------------------------------------------------------------------
        $sql_objetivos = "SELECT o.*, u.usuario_nombre
                            FROM objetivo AS o, usuario AS u
                            WHERE o.usuario_id = u.usuario_id";
        $objetivos = $this->db->query($sql_objetivos)->result_array();
        // --------------------------------------------------------------------------------------------
        $sql_ventas_dia = "SELECT sum(d.detalleven_total) AS total
                            FROM usuario AS u
                            LEFT JOIN objetivo AS o ON o.usuario_id = u.usuario_id
                            LEFT JOIN estado AS e ON u.`estado_id` = e.`estado_id`
                            LEFT JOIN tipo_usuario AS t ON t.`tipousuario_id` = u.`tipousuario_id`
                            left join detalle_venta as d on d.`usuario_id` = u.`usuario_id`
                            left join venta as v on v.`usuario_id`=o.usuario_id
                            WHERE o.usuario_id = u.usuario_id AND
                            v.venta_id = d.venta_id AND 
                            v.venta_fecha = '2020-12-10' AND 
                            v.usuario_id = u.usuario_id
                            GROUP BY u.usuario_nombre 
                            order by u.usuario_nombre
                        ";
        $ventas_dia = $this->db->query($sql_ventas_dia)->result_array();
        // --------------------------------------------------------------------------------------------
        $sql_pedidos_mes = "SELECT if(count(p.`venta_total`)>0,COUNT(p.`venta_total`),0) as pedido_mes
                            FROM venta p
                            LEFT JOIN cliente as c on p.cliente_id = c.cliente_id
                            LEFT JOIN usuario as u on p.entrega_usuarioid = u.usuario_id
                            WHERE  p.entrega_id = 2
                            AND venta_fecha >= '".$fecha_inicial."'
                            AND venta_fecha <= '".$fecha_final."'
                            group by u.`usuario_nombre`
                            order by u.usuario_nombre";
        
        $pedidos_mes = $this->db->query($sql_pedidos_mes)->result_array();
        // --------------------------------------------------------------------------------------------
        $sql_pedidos_dia = "SELECT if(count(p.`venta_total`)>0,COUNT(p.`venta_total`),0) as pedido_dia
                            FROM venta p
                            LEFT JOIN cliente as c on  p.cliente_id = c.cliente_id
                            LEFT JOIN usuario as u on p.entrega_usuarioid = u.usuario_id
                            WHERE p.entrega_id = 2
                            AND venta_fecha = '2020-12-10'
                            group by u.`usuario_nombre`
                            order by u.usuario_nombre
                            ";
        $pedidos_mes = $this->db->query($sql_pedidos_dia)->result_array();
        // --------------------------------------------------------------------------------------------
        // $ct = count($ventas_mes);

        //Cargando los arreglos a CERO con todos los dias del mes
        // for($d = 1; $d <= $ultimo_dia; $d++){
        //     $arrayventas[$d] = 0;
        //     $arrayutilidades[$d] = 0;     
        // }
        // foreach($ventas_mes as $res){
        //     // $diasel = intval(date("d",strtotime($res['venta_fecha']) ) );
        //     $suma = $res['total'];
        //     $arrayventas[$diasel] += $suma;
        // }   

        // foreach($utilidades as $resven){
        //     $diasel = intval(date("d",strtotime($resven['venta_fecha']) ) );
        //     $sumautilidad = $resven['utilidad'];
        //     $arrayutilidades[$diasel] += $sumautilidad;
        // }

        $data=array("usuario_nombre" => $usuario_nombre, 
                    "usuario_imagen" => $usuario_imagen, 
                    "totalutilidades" => $arrayutilidades,
                    "tipo_descripcion" => $tipo_descripcion,
                    "estado_id" => $estado_id,
                    "estado_tipo" => $estado_tipo,
                    "estado_descripcion" => $estado_descripcion,
                    "estado_color" => $estado_color,
                    "objetivo_minimo" => $objetivo_minimo,
                    "objetivo_aceptable" => $objetivo_aceptable,
                    "objetivo_diario" => $objetivo_diario,
                    "objetivo_mes" => $objetivo_mes,
                    "total_ventas_mes" => $total_ventas_mes,
                    "total_ventas_dia" => $total_ventas_dia,
                    "total_pedidos_mes" => $total_pedidos_mes,
                    "total_pedidos_dia" => $total_pedidos_dia
                );
        echo json_encode($data);
    }
}