<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Servicio extends CI_Controller{
    
    var $session_data;
    private $sistema;

    function __construct()
    {
        parent::__construct();
        $this->load->model('Servicio_model');
        $this->load->model('Banco_model');
        $this->load->model('Sincronizacion_model');
        $this->load->helper('numeros');
        $this->load->library('ControlCode'); // para generar codigo
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
        $this->load->model('Sistema_model');
        $this->sistema = $this->Sistema_model->get_sistema();
        
    } 

    private function acceso($id_rol){
        
        $data['sistema'] = $this->sistema;
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Listing of servicio
     */
    function index($a = null, $b = null)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $usuario_id  = $this->session_data['usuario_id'];
            
            $data['rol'] = $this->session_data['rol'];
            $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
            //$data['servicio'] = $this->Servicio_model->get_all_servicios_pendientes();
            $data['a']=$a;
            $data['b']=$b;

            $this->load->model('Estado_model');
            $data['all_estado'] = $this->Estado_model->get_all_estado_servicio();

            $this->load->model('Empresa_model');
            $data['all_empresa'] = $this->Empresa_model->get_all_empresa();
            
            $this->load->model('Tipo_transaccion_model');
            $data['tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo();
            $this->load->model('Forma_pago_model');
            $data['forma_pago'] = $this->Forma_pago_model->get_all_forma();
            
            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario_activo();

            $this->load->model('Categoria_servicio_model');
            $data['all_categoria_servicio'] = $this->Categoria_servicio_model->get_all_categoria_servicio_asc();

            $this->load->model('Parametro_model');
            $data['all_parametro'] = $this->Parametro_model->get_all_parametro();
            
            $data['docs_identidad'] = $this->Sincronizacion_model->getall_docs_ident();
            
            $data['page_title'] = "Servicio";
            $data['_view'] = 'servicio/index';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Deleting servicio
     */
    function remove($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $servicio = $this->Servicio_model->get_servicio($servicio_id);
            // check if the servicio exists before trying to delete it
            if(isset($servicio['servicio_id']))
            {
                $this->Servicio_model->delete_servicio($servicio_id);
                redirect('servicio/index');
            }
            else
                show_error('The servicio you are trying to delete does not exist.');
        }
    }
    
    /*
     * Añadir nuevo servicio y un cliente nuevo
     */
    function nuevo_servicio_cliente($cliente_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
        
        // verifica si existe este cliente con el id ingresado antes de registrar un nuevo servicio
        $this->load->model('Cliente_model');
        $data['cliente'] = $this->Cliente_model->get_cliente($cliente_id);
        
        if(isset($data['cliente']['cliente_id']))
        {
            $this->load->library('form_validation');

		$this->form_validation->set_rules('servicio_saldo','Servicio Saldo','required');
		
	    if($this->form_validation->run())     
        {   
            $usuario_id = $this->session_data['usuario_id'];
            date_default_timezone_set('America/La_Paz');
            $fecha_res = date('Y-m-d');
            $hora_res = date('H:i:s');
            $params = array(
                'estado_id' => $this->input->post('estado_id'),
                'tiposerv_id' => $this->input->post('tiposerv_id'),
                'cliente_id' => $this->input->post('cliente_id'),
                'usuario_id' => $usuario_id,
                'servicio_fecharecepcion' => $fecha_res,
                'servicio_horarecepcion' => $hora_res,
                'servicio_total' => $this->input->post('servicio_total'),
                'servicio_acuenta' => $this->input->post('servicio_acuenta'),
                'servicio_saldo' => $this->input->post('servicio_saldo'),
            );
            
            $servicio_id = $this->Servicio_model->add_servicio($params);
            redirect('detalle_serv/detalle_nuevo/'.$servicio_id);
        }
        else
        {
            $this->load->model('Tipo_servicio_model');
            $data['all_tipo_servicio'] = $this->Tipo_servicio_model->get_all_tipo_servicio_id1();
            $data['page_title'] = "Servicio";            
            $data['_view'] = 'servicio/nuevo_servicio_cliente';
            $this->load->view('layouts/main',$data);
        }
        }else
            show_error('The servicio you are trying to edit does not exist.');
    }
}
    
    /* *************Al añadir nuevo servicio; se crea un nuevo servicio con estos parametros**************  */
    function crearservicio()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(70)){
        $estado_id = 5; // este valor (PENDIENTE) esta definido en la tabla Estado
        $usuario_id = $this->session_data['usuario_id'];
        $tiposerv_id = 1; //este valor (Servicio Normal) esta definido en la tabla tipo_servicio
        //$cliente_id = 0; //cliente 0 que es un cliente no definido
        
        date_default_timezone_set('America/La_Paz');
        $fecha_res = date('Y-m-d');
        $hora_res = date('H:i:s');
        $params = array(
            'estado_id' => $estado_id,
            'usuario_id' => $usuario_id,
            'tiposerv_id' => $tiposerv_id,
            'servicio_fecharecepcion' => $fecha_res,
            'servicio_horarecepcion' => $hora_res,
        );
        
        $servicio_id = $this->Servicio_model->add_servicio($params);
        redirect('servicio/serviciocreado/'.$servicio_id);
    }
}
    /*
     * Crea un Nuevo SERVICIO en donde se puede registrar productos para
     * dar amntenimineto, reparar, diagnosticar...
     */
    function serviciocreado($servicio_id, $a = null, $b = null)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(70)){
        $data['a'] = $a;
        $data['b'] = $b;
        $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
	if(count($data['servicio']) >0)
        {
            //$data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            $this->load->model('Parametro_model');
	    $data['parametro'] = $this->Parametro_model->get_parametro_servicio();
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
	    $data['all_cliente_activo'] = $this->Cliente_model->get_all_cliente_id1();
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['usuario_id']);
            
	    $data['all_responsable'] = $this->Usuario_model->get_all_usuario_tecnicoresponsable_ok();
	    //$data['all_responsable'] = $this->Usuario_model->get_all_usuario_activo();
            
            $this->load->model('Categoria_servicio_model');
	    $data['all_categoria_servicio'] = $this->Categoria_servicio_model->get_all_categoria_servicio_id1();
            
            $this->load->model('Subcategoria_servicio_model');
	    $data['all_subcategoria_servicio'] = $this->Subcategoria_servicio_model->get_all_subcategoria_servicio_id1();
            /*
            $this->load->model('Responsable_model');
	    $data['all_responsable'] = $this->Responsable_model->get_all_responsable();
            */    
            $this->load->model('Tipo_servicio_model');
	    $data['tipo_servicio'] = $this->Tipo_servicio_model->get_tipo_servicio($data['servicio']['tiposerv_id']);
	    $data['all_tipo_servicio'] = $this->Tipo_servicio_model->get_all_tipo_servicio_id1();
            
            $this->load->model('Categoria_trabajo_model');
	    $data['all_categoria_trabajo'] = $this->Categoria_trabajo_model->get_all_categoria_trabajo_id1();
            
            $this->load->model('Tiempo_uso_model');
	    $data['all_tiempo_uso'] = $this->Tiempo_uso_model->get_all_tiempo_uso_id1();
            
            $this->load->model('Procedencia_model');
	    $data['all_procedencia'] = $this->Procedencia_model->get_all_procedencia_id1();
            
            $this->load->model('Forma_pago_model');
            $data['forma_pago'] = $this->Forma_pago_model->get_all_forma();
            
            $this->load->model('Tipo_transaccion_model');
            $data['tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo();
            
            $this->load->model('Parametro_model');
	    $data['all_parametro'] = $this->Parametro_model->get_all_parametro();
            $data['page_title'] = "Servicio";
            $data['_view'] = 'servicio/serviciocreado';
            $this->load->view('layouts/main',$data);
        } else {
            redirect('servicio');
        }
    }
}
    
    /*
     * Asigna un cliente a un servicio determinado
     */
    function asignarcliente($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(70)){
                if ($this->input->is_ajax_request()){
                    $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
                    if(isset($data['servicio']['servicio_id']))
                    {
                        $this->load->model('Cliente_model');
                        $cliente_id = $this->input->post('cliente_id');
                        $cliente_celular  = $this->input->post('cliente_celular');
                        $cliente_telefono = $this->input->post('cliente_telefono');
                        $paramsc = array(
                            'cliente_celular'  => $cliente_celular,
                            'cliente_telefono' => $cliente_telefono,
                        );
                        $this->Cliente_model->update_cliente($cliente_id,$paramsc);
                        $params = array(
					'cliente_id' => $cliente_id,
                                        'servicio_codseguimiento' => $this->input->post('codigo_seg'),
                        );
                        $this->Servicio_model->update_servicio($servicio_id,$params);
                        
	                $datos = $this->Cliente_model->get_cliente($cliente_id);
                        
                        echo json_encode($datos);
                    }else{
                        echo json_encode("noexiste");
                    }
                }
                else
                {                 
                    show_404();
                }
    }
}
    
    /*
     * Asigna un tipo de servicio a un servicio determinado
     */
    function asignartiposervicio($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            if ($this->input->is_ajax_request()){
                $tiposerv_id = $this->input->post('tiposerv_id');
                if($tiposerv_id == 1)
                {
                    $params = array(
                        'tiposerv_id' => $tiposerv_id,
                    );
                    $this->Servicio_model->update_servicio($servicio_id,$params);
                    $datos = $this->Servicio_model->get_servicio_tiposervicio($servicio_id);
                    echo json_encode($datos);
                }else{
                    $this->load->library('form_validation');
                    $this->form_validation->set_rules('direccion','Direcció','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                    if($this->form_validation->run())     
                    {
                        $direccion = $this->input->post('direccion');
                        $params = array(
                            'tiposerv_id' => $tiposerv_id,
                            'servicio_direccion' => $direccion,
                        );
                        $this->Servicio_model->update_servicio($servicio_id,$params);
                        $datos = $this->Servicio_model->get_servicio_tiposervicio($servicio_id);
                        echo json_encode($datos);
                    }else{
                        echo json_encode("nodir");
                    }
                }
            }
            else
            {                 
                show_404();
            }
                
    }
}
    
    function buscardetalleservicio($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(74)){
            if(isset($_POST) && count($_POST) > 0)     
            {
                $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
                $palabra =  $this->input->post('buscar_palabra');

                //$this->Servicio_model->update_servicio($servicio_id,$params);
                //redirect('servicio/buscardetalleservicio/'.$servicio_id);
                $data['page_title'] = "Servicio";
                $data['_view'] = 'servicio/buscardetalleservicio/'.$servicio_id;
                $this->load->view('layouts/main',$data);
            }
            else
            {
                redirect('servicio/serviciocreado/'.$servicio_id);
            }
    }
}
    
    
    /*
     * viene de serview
     * *************Deja en cero todos los montos del servicio ($servicio_id)
     * *************y a todos sus detalles de servicio que sean de este servicio**************
     */
    function anularserviciodet($servicio_id)
    {
        
        if($this->acceso(77)){
        $usuario_id = $this->session_data['usuario_id'];  
        $estado_id = 4; // este valor esta definido en la tabla Estado
        
        $this->load->model('Detalle_serv_model');
        $this->load->model('Categoria_insumo_model');
        $this->load->model('Detalle_venta_model');
        $losdetalles = $this->Detalle_serv_model->get_detalle_serv_menos_all($servicio_id);
        foreach($losdetalles as $detalle){
            $insumos_usados = $this->Categoria_insumo_model->get_all_insumos_usados($detalle['detalleserv_id']);
            foreach($insumos_usados as $insumo){
                $detalleventa = array(
                    'detalleven_cantidad' => 0,
                    'detalleven_unidad' => 0,
                    'detalleven_costo' => 0,
                    'detalleven_precio' => 0,
                    'detalleven_descuento' => 0,
                    'detalleven_total' => 0,
                    'detalleven_preferencia' => "-",
                    'detalleven_caracteristicas' => "",
                    'detalleven_comision' => 0,
                );
                $this->Detalle_venta_model->update_detalle_venta($insumo['detalleven_id'], $detalleventa);
            }
        }
        
        $detparams = array(
            'detalleserv_total' => 0,
            'detalleserv_acuenta' => 0,
            'detalleserv_saldo' => 0,
            'estado_id' => $estado_id,
        );
	$this->Detalle_serv_model->anular_detalle_serv($servicio_id, $detparams);
        
        $params = array(
            'servicio_total' => 0,
            'servicio_acuenta' => 0,
            'servicio_saldo' => 0,
            'estado_id' => $estado_id,
        );
        $this->Servicio_model->update_servicio($servicio_id,$params);
        echo json_encode("ok");
        //redirect('servicio/serview/'.$servicio_id);
    }
}
    
    function serview($servicio_id, $a = null)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(71)){
        $data['a'] = $a;
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        
        $thisrolusuario = $this->session_data['rol'];
        $data['reginftecnico']     = $thisrolusuario[80-1]['rolusuario_asignado'];
        $data['asignarinsumos']    = $thisrolusuario[81-1]['rolusuario_asignado'];
        $data['anulardetalle']     = $thisrolusuario[82-1]['rolusuario_asignado'];
        $data['eliminardetalle']   = $thisrolusuario[83-1]['rolusuario_asignado'];
        $data['cobrardetalle']     = $thisrolusuario[87-1]['rolusuario_asignado'];
        $data['pasaracreditodeta'] = $thisrolusuario[88-1]['rolusuario_asignado'];
        $data['cobrarservicio'] = $thisrolusuario[84-1]['rolusuario_asignado'];
        $data['pasaracredito']  = $thisrolusuario[85-1]['rolusuario_asignado'];
        $data['anularservicio'] = $thisrolusuario[77-1]['rolusuario_asignado'];
        
        $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
	    //$data['all_cliente_activo'] = $this->Cliente_model->get_all_cliente_id1();
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['usuario_id']);
            
            $this->load->model('Tipo_servicio_model');
	    $data['tipo_servicio'] = $this->Tipo_servicio_model->get_tipo_servicio($data['servicio']['tiposerv_id']);
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $this->load->model('Parametro_model');
	    $data['all_parametro'] = $this->Parametro_model->get_all_parametro();
        $data['page_title'] = "Servicio";    
        $data['_view'] = 'servicio/serview';
        $this->load->view('layouts/main',$data);
    }
}
    /* 
     * viene de servicio
     * *************Deja en cero todos los montos del servicio ($servicio_id)
     * *************y a todos sus detalles de servicio que sean de este servicio**************
     */
    function anularserv($servicio_id)
    {
        
        if($this->acceso(77)){
        $usuario_id = $this->session_data['usuario_id'];
        $estado_id = 4; // este valor esta definido en la tabla Estado
        
        $this->load->model('Detalle_serv_model');
        $this->load->model('Categoria_insumo_model');
        $this->load->model('Detalle_venta_model');
        $losdetalles = $this->Detalle_serv_model->get_detalle_serv_menos_all($servicio_id);
        foreach($losdetalles as $detalle){
            $insumos_usados = $this->Categoria_insumo_model->get_all_insumos_usados($detalle['detalleserv_id']);
            foreach($insumos_usados as $insumo){
                $detalleventa = array(
                    'detalleven_cantidad' => 0,
                    'detalleven_unidad' => 0,
                    'detalleven_costo' => 0,
                    'detalleven_precio' => 0,
                    'detalleven_descuento' => 0,
                    'detalleven_total' => 0,
                    'detalleven_preferencia' => "-",
                    'detalleven_caracteristicas' => "",
                    'detalleven_comision' => 0,
                );
                $this->Detalle_venta_model->update_detalle_venta($insumo['detalleven_id'], $detalleventa);
            }
        }
        $detparams = array(
            'detalleserv_total' => 0,
            'detalleserv_acuenta' => 0,
            'detalleserv_saldo' => 0,
            'estado_id' => $estado_id,
        );
	$this->Detalle_serv_model->anular_detalle_serv($servicio_id, $detparams);
        
        $params = array(
            'servicio_total' => 0,
            'servicio_acuenta' => 0,
            'servicio_saldo' => 0,
            'estado_id' => $estado_id,
        );
        $this->Servicio_model->update_servicio($servicio_id,$params);
        echo json_encode("ok");
        //redirect('servicio');
    }
}
    /*
     * Funcion para buscar(dado una categoria) y redibujar las subcategorias 
     */
    function fetch_data()
    {
        if($this->acceso(69)){
            $catserv_id = $this->input->post('catserv_id');
            $this->load->model('Subcategoria_servicio_model');
            $res = $this->Subcategoria_servicio_model->get_all_subcategoria_de_categoria($catserv_id);
            echo json_encode($res);
    }
}
    /*
     * Funcion que busca un servicio dado un codigo determinado
     */
    function buscarporcod()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(73)){
        if(isset($_POST) && count($_POST) > 0)     
        {
            $servicio_id = $this->input->post('servicio_id');
            $res = $this->Servicio_model->get_servicio($servicio_id);
            if(isset($res) && !is_null($res)){
                redirect('servicio/serview/'.$servicio_id);
            }else{
            redirect('servicio/index/n');
            }
        }
        else
        {
            redirect('servicio/index/n');
        }
    }
}
    /*
     * Anula un detalle (detalleserv_id) de un Servicio
     */
    function anulardetalle($servicio_id, $detalleserv_id)
    {
        if($this->acceso(82)){
        $estado_id = 4; // este valor esta definido en la tabla Estado = ANULADO
        
        $this->load->model('Detalle_serv_model');
        $this->load->model('Categoria_insumo_model');
        $this->load->model('Detalle_venta_model');
        $insumos_usados = $this->Categoria_insumo_model->get_all_insumos_usados($detalleserv_id);
        foreach($insumos_usados as $insumo){
            $detalleventa = array(
                'detalleven_cantidad' => 0,
                'detalleven_unidad' => 0,
                'detalleven_costo' => 0,
                'detalleven_precio' => 0,
                'detalleven_descuento' => 0,
                'detalleven_total' => 0,
                'detalleven_preferencia' => "-",
                'detalleven_caracteristicas' => "",
                'detalleven_comision' => 0,
            );
            $this->Detalle_venta_model->update_detalle_venta($insumo['detalleven_id'], $detalleventa);
        }
        
        $detparams = array(
            'detalleserv_total' => 0,
            'detalleserv_acuenta' => 0,
            'detalleserv_saldo' => 0,
            'estado_id' => $estado_id,
        );
	$this->Detalle_serv_model->update_detalle_serv($detalleserv_id, $detparams);
        
        $res_ids = $this->Detalle_serv_model->get_ids_estado_detalle_serv($servicio_id);
        $cont = 0;
        foreach($res_ids as $ids)
        {
            if($ids['estado_id'] == $estado_id){
                $cont++;
            }
        }
        if($cont == count($res_ids)){
            $params = array(
                        'estado_id' => $estado_id,
            );
            $this->Servicio_model->update_servicio($servicio_id,$params);
        }

        $data['resultado'] = $this->Detalle_serv_model->sumarmontos($servicio_id);
        $total = $data['resultado']['total'];
        $acuenta = $data['resultado']['acuenta'];
        $saldo = $data['resultado']['saldo'];
        $sumparams = array(
            'servicio_total' => $total,
            'servicio_acuenta' => $acuenta,
            'servicio_saldo' => $saldo,
        );

        $this->Servicio_model->update_servicio($servicio_id,$sumparams);
        echo json_encode("ok");
    }
}
    /*
    * buscar servicios
    */
    function buscarservicios()
    {
        $data['sistema'] = $this->sistema;
        if ($this->input->is_ajax_request()) {
            
            $parametro = $this->input->post('filtro');   
            
            if ($parametro!=""){
                $data['datos'] = $this->Servicio_model->get_busqueda_servicio_parametro($parametro);
                //$datos = $this->Inventario_model->get_inventario_bloque();
            }else{
                $data['datos'] = $this->Servicio_model->get_all_servicios_pendientes();
            }
            $data['bancos'] = $this->Banco_model->getall_bancosact_asc();
            echo json_encode($data);
        }
        else
        {                 
            show_404();
        }
    }
    
    /*************** funcion para mostrar la vista del comprobate  de registro de servicios ******************/
    function imprimircomprobante($servicio_id){
        if($this->acceso(69)){
        //**************** inicio contenido ***************
            $this->load->model('Parametro_model');
            $parametros = $this->Parametro_model->get_parametros();
            if(sizeof($parametros)>0){
                if($parametros[0]['parametro_tipoimpresora']=="FACTURADORA")
                    $this->boletarecepcion_boucher($servicio_id);
                else
                    $this->boletacomprobanteserv($servicio_id);
            }
        //**************** fin contenido ***************
        }
    }
    
    function boletarecepcion_boucher($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
        
            $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
//	    $data['all_cliente_activo'] = $this->Cliente_model->get_all_cliente_id1();
            
            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['usuario_id']);
            $usuario_id = $this->session_data['usuario_id'];
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);

            $this->load->model('Dosificacion_model');
	    $data['all_dosificacion'] = $this->Dosificacion_model->get_all_dosificacion_servicio();
            /* ***** para generar cadena QR ***** */
            $cadenaQR = base_url()."seguimiento/consultar/".$data['cliente']['cliente_id']."/".$servicio_id;
            $this->load->library('ciqrcode');
            //configuarnado
            $params['data'] = $cadenaQR;//$this->random(30);
            $params['level'] = 'H';
            $params['size'] = 5;
            //decimos el directorio a guardar el codigo qr, en este 
            //caso una carpeta en la raíz llamada qr_code
            $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
            //generamos el código qr
            $this->ciqrcode->generate($params);
            $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');
            
            $data['page_title'] = "Servicio";
            $data['_view'] = 'servicio/boletarecepcion_boucher';
            $this->load->view('layouts/main',$data);
    }
}
    
    function boletarecepcion($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
//	    $data['all_cliente_activo'] = $this->Cliente_model->get_all_cliente_id1();
            
            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['usuario_id']);
            
            $usuario_id = $this->session_data['usuario_id'];
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);

            $this->load->model('Dosificacion_model');
	    $data['all_dosificacion'] = $this->Dosificacion_model->get_all_dosificacion_servicio();
            
            /* ***** para generar cadena QR ***** */
            $cadenaQR = base_url()."seguimiento/consultar/".$data['cliente']['cliente_id']."/".$servicio_id;
            $this->load->library('ciqrcode');
            //configuarnado
            $params['data'] = $cadenaQR;//$this->random(30);
            $params['level'] = 'H';
            $params['size'] = 5;
            //decimos el directorio a guardar el codigo qr, en este 
            //caso una carpeta en la raíz llamada qr_code
            $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
            //generamos el código qr
            $this->ciqrcode->generate($params);
            $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');
            
            
            $data['page_title'] = "Servicio";
            $data['_view'] = 'servicio/boletarecepcion';
            $this->load->view('layouts/main',$data);
    }
}
    /*
     * muestra el detalle de un servicio a un usuario CLIENTE
     */
    function verservdet($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
             $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
	    $data['all_cliente_activo'] = $this->Cliente_model->get_all_cliente_id1();
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['usuario_id']);
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $this->load->model('Categoria_servicio_model');
	    $data['all_categoria_servicio'] = $this->Categoria_servicio_model->get_all_categoria_servicio_id1();
                
            $this->load->model('Responsable_model');
	    $data['all_responsable'] = $this->Responsable_model->get_all_responsable();
                
            $this->load->model('Tipo_servicio_model');
	    $data['tipo_servicio'] = $this->Tipo_servicio_model->get_tipo_servicio($data['servicio']['tiposerv_id']);
	    $data['all_tipo_servicio'] = $this->Tipo_servicio_model->get_all_tipo_servicio_id1();
            
            
            $this->load->model('Subcategoria_servicio_model');
	    $data['all_subcategoria_servicio'] = $this->Subcategoria_servicio_model->get_all_subcategoria_servicio_id1();
            
            $this->load->model('Categoria_trabajo_model');
	    $data['all_categoria_trabajo'] = $this->Categoria_trabajo_model->get_all_categoria_trabajo_id1();
            
            $this->load->model('Tiempo_uso_model');
	    $data['all_tiempo_uso'] = $this->Tiempo_uso_model->get_all_tiempo_uso_id1();
            
            $this->load->model('Procedencia_model');
	    $data['all_procedencia'] = $this->Procedencia_model->get_all_procedencia_id1();


            $this->load->model('Estado_model');
            $data['all_estado'] = $this->Estado_model->get_all_estado();

        $data['page_title'] = "Servicio";    
        $data['_view'] = 'servicio/verservdet';
        $this->load->view('layouts/main',$data);
    }
}
    
    /*
    * buscar servicios por fechas
    */
    function buscarserviciosfecha()
    {
        if($this->input->is_ajax_request()){
            $filtro = $this->input->post('filtro');
            //if ($filtro!=""){
            $data['datos'] = $this->Servicio_model->get_busqueda_servicio_filtro($filtro);
            $data['bancos'] = $this->Banco_model->getall_bancosact_asc();
            //$datos = $this->Inventario_model->get_inventario_bloque();
            echo json_encode($data);
            /*}
            else echo json_encode(null);*/
        }else{                 
            show_404();
        }
    }
    
    /*
     * obtenemos los detalles de un determinado servicio
    */
    function getdetalleservicio($servicio_id)
    {
        if($this->acceso(69)){
                if ($this->input->is_ajax_request()){
                    $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
                    if(isset($data['servicio']['servicio_id']))
                    {
                        $this->load->model('Detalle_serv_model');
	                $datos = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
                        echo json_encode($datos);
                    }else{
                        echo json_encode("noexiste");
                    }
                }
                else
                {                 
                    show_404();
                }
        }
    }
    
    /*
     * Obtiene los datos de un servicio; lo que recupera son los montos
     */
    function getmontoservicio($servicio_id)
    {
        if($this->acceso(69)){
                if ($this->input->is_ajax_request()){
                   $datos = $this->Servicio_model->get_servicio($servicio_id);
                    echo json_encode($datos);
                }
                else
                {                 
                    show_404();
                }
    }
}
    /* **********Obtiene todos los insumos usados en un determinado detalle de servicio*************** */
    function obtenerinsumosusados($detalleserv_id = 0)
    {
        $detalleserv_id = $detalleserv_id == 0 ? $this->input->post('detalleserv_id'):$detalleserv_id; 
        //if($this->acceso(69)){
        $this->load->model('Detalle_venta_model');
        $datos = $this->Detalle_venta_model->get_all_insumo_usado($detalleserv_id);
        //if(sizeof($datos)>0){
        if(isset($datos)){
            echo json_encode($datos);
        }else{
            echo json_encode(null);
        }
        
    //}
}
    /*
     * Reporte de los servicios por fechas
     */
    function repserviciofechas($es = null)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(142)){
        $data['servicio'] = $this->Servicio_model->get_all_repservicios();
        $data['a']=$es;
        
        $this->load->model('Empresa_model');
        $data['empresa'] = $this->Empresa_model->get_all_empresa();
        
        $this->load->model('Estado_model');
        $data['all_estado'] = $this->Estado_model->get_all_estado_servicio();
        
        $this->load->model('Usuario_model');
        $data['all_usuario'] = $this->Usuario_model->get_all_usuario();
        /*
        $this->load->model('Responsable_model');
        $data['all_responsable'] = $this->Responsable_model->get_all_responsable();
        */
        $this->load->model('Usuario_model');
        $data['all_responsable'] = $this->Usuario_model->get_all_usuario_tecnicoresponsable_ok();
        
        /*$this->load->model('Cliente_model');
        $data['all_cliente'] = $this->Cliente_model->get_all_cliente();
        */
        $data['page_title'] = "Servicio";
        $data['_view'] = 'servicio/repserviciofechas';
        $this->load->view('layouts/main',$data);
    }
}
    /*
     * Reporte de los servicios por fechas
     */
    function buscarrepservicioall()
    {
        if($this->acceso(142)){
                if ($this->input->is_ajax_request()){
                    $filtro = $this->input->post('filtro');
                    $datos = $this->Servicio_model->get_all_busquedarepservicios($filtro);
                    echo json_encode($datos);
                }
                else
                {                 
                    show_404();
                }
    }
}
    /*
     * Lista de Servicios para Informes Tecnicos
     */
    function repinftecservicio()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(142)){
        $data['servicio'] = $this->Servicio_model->get_all_servicios_pendientes();
        
        $this->load->model('Estado_model');
        $data['all_estado'] = $this->Estado_model->get_all_estado_servicio();
        $data['page_title'] = "Servicio";
        $data['_view'] = 'servicio/repinftecservicio';
        $this->load->view('layouts/main',$data);
    }
}
    /*
     * Boleta de impresion de informe tecnico de un Servicio
     */
    function boletainftecservicio($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(142)){
        
               $contitulo = $this->input->post('contitulo'.$servicio_id);
               if(isset($contitulo)){
                   $data['sintitulo']= 1;
               }
            $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $usuario_id = $this->session_data['usuario_id'];
            $data['usuario_nombre'] = $this->session_data['usuario_nombre'];
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            $data['page_title'] = "Servicio";
            
            /* ***** para generar cadena QR ***** */
            $cadenaQR = base_url()."seguimiento/consultar/".$data['cliente']['cliente_id']."/".$servicio_id;
            $this->load->library('ciqrcode');
            //configuarnado
            $params['data'] = $cadenaQR;//$this->random(30);
            $params['level'] = 'H';
            $params['size'] = 5;
            //decimos el directorio a guardar el codigo qr, en este 
            //caso una carpeta en la raíz llamada qr_code
            $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
            //generamos el código qr
            $this->ciqrcode->generate($params);
            $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');
            
            $data['_view'] = 'servicio/boletainftecservicio';
            $this->load->view('layouts/main',$data);
    }
}
    /*
     * Lista de detalles de servicio para Informes Tecnicos
     */

    function repinftecdetalleserv($es = null)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(142)){
        
        $data['servicio'] = $this->Servicio_model->get_all_repservicios();
        $data['a']=$es;
        
        $this->load->model('Empresa_model');
        $data['empresa'] = $this->Empresa_model->get_all_empresa();
        
        $this->load->model('Estado_model');
        $data['all_estado'] = $this->Estado_model->get_all_estado_servicio();
        
        $this->load->model('Usuario_model');
        $data['all_usuario'] = $this->Usuario_model->get_all_usuario();
        
        $data['all_responsable'] = $this->Usuario_model->get_all_usuario_tecnicoresponsable_ok();
        /*
        $this->load->model('Responsable_model');
        $data['all_responsable'] = $this->Responsable_model->get_all_responsable();
        */
        /*$this->load->model('Cliente_model');
        $data['all_cliente'] = $this->Cliente_model->get_all_cliente();
        */
        $data['page_title'] = "Servicio";
        $data['_view'] = 'servicio/repinftecdetalleserv';
        $this->load->view('layouts/main',$data);
    }
}
    /*
     * Boleta de impresion de informe tecnico de un detalle de Servicio
     */
    function boletainftecdetalleserv($detalleserv_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(142)){
                $contitulo = $this->input->post('contitulo'.$detalleserv_id);
               if(isset($contitulo)){
                   $data['sintitulo']= 1;
               }
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_servinf($detalleserv_id);
            
            $data['servicio'] = $this->Servicio_model->get_servicio($data['detalle_serv']['servicio_id']);
            
            $data['usuario_nombre'] = $this->session_data['usuario_nombre'];
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            $data['page_title'] = "Servicio";
            $data['_view'] = 'servicio/boletainftecdetalleserv';
            $this->load->view('layouts/main',$data);
    }
}
    /*
     * Boleta de impresion de orden de SERVICIO
     */
    function boletacomprobanteserv($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $contitulo = $this->input->post('contitulo'.$servicio_id);
            if(isset($contitulo)){
                $data['sintitulo']= 1;
            }
            $usuario_id = $this->session_data['usuario_id'];
            
            $data['usuario'] = $this->session_data['usuario_nombre'];
            $data['servicio'] = $this->Servicio_model->get_serviciorden_reptec($servicio_id);
            
            $this->load->model('Parametro_model');
            $data['all_parametro'] = $this->Parametro_model->get_all_parametro();
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            $this->load->model('Tipo_servicio_model');
	    $data['tipo_servicio'] = $this->Tipo_servicio_model->get_tipo_servicio($data['servicio']['tiposerv_id']);
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $this->load->model('Dosificacion_model');
	    $data['dosificacion5'] = $this->Dosificacion_model->get_dosificacion_leyenda5();
	    $data['dosificacion3'] = $this->Dosificacion_model->get_dosificacion_leyenda3();
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            $data['page_title'] = "Servicio";
            
            /* ***** para generar cadena QR ***** */
            $cadenaQR = base_url()."seguimiento/consultar/".$data['cliente']['cliente_id']."/".$servicio_id;
            $this->load->library('ciqrcode');
            //configuarnado
            $params['data'] = $cadenaQR;//$this->random(30);
            $params['level'] = 'H';
            $params['size'] = 5;
            //decimos el directorio a guardar el codigo qr, en este 
            //caso una carpeta en la raíz llamada qr_code
            $params['savename'] = FCPATH.'resources/images/qrcode'.$usuario_id.'.png'; //base_url('resources/images/qrcode.png'); //FCPATH.'resourcces\images\qrcode.png'; 
            //generamos el código qr
            $this->ciqrcode->generate($params);
            $data['codigoqr'] = base_url('resources/images/qrcode'.$usuario_id.'.png');
            
            $data['_view'] = 'servicio/boletacomprobanteserv';
            $this->load->view('layouts/main',$data);
    }
}
    /*
    * buscar servicios pendientes
    */
    function buscarserviciospendientes()
    {
        if($this->acceso(69)){
        if ($this->input->is_ajax_request()) {
            
            $data['datos'] = $this->Servicio_model->get_all_servicios_pendientes();
            $data['bancos'] = $this->Banco_model->getall_bancosact_asc();
            echo json_encode($data);
            /*$servicios = $this->Servicio_model->get_all_servicios_pendientes();
            
            $this->load->model('Detalle_serv_model');
            $detalles = $this->Detalle_serv_model->get_name_detalle_serv_allpendiente();
            
            $datos=array("servicios" => $servicios, "detalles" => $detalles);
            echo  json_encode($datos);*/
        }
        else
        {                 
            show_404();
        }
    }
}
    /*
     * Reporte de los servicios diario
     */
    function repserviciodiario()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(76)){
            $data['page_title'] = "Reporte Servicio Diario";
            $data['servicio'] = $this->Servicio_model->get_all_repservicios();

            $this->load->model('Empresa_model');
            $data['empresa'] = $this->Empresa_model->get_all_empresa();

           /* $this->load->model('Estado_model');
            $data['all_estado'] = $this->Estado_model->get_all_estado_servicio();
            */
            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario();

            //$data['all_responsable'] = $this->Usuario_model->get_all_usuario_tecnicoresponsable_ok();
            /*
            $this->load->model('Responsable_model');
            $data['all_responsable'] = $this->Responsable_model->get_all_responsable();
            */
            $this->load->model('Cliente_model');
            $data['all_cliente'] = $this->Cliente_model->get_all_cliente("");
            
            $data['_view'] = 'servicio/repserviciodiario';
            $this->load->view('layouts/main',$data);
    }
}
    /*
    * buscar servicios del dia
    */
    function buscardetalleserv_dia()
    {
        if($this->acceso(69)){
        if ($this->input->is_ajax_request()) {
            
            $datos = $this->Servicio_model->get_all_servicios_dia();
            echo json_encode($datos);
        }
        else
        {                 
            show_404();
        }
    }
}
    /* **********Obtiene Precio de un detalle de venta*************** */
    function obtener_preciosinsumosusados($detalleserv_id)
    {
        if($this->acceso(69)){
                $this->load->model('Detalle_venta_model');
                $datos = $this->Detalle_venta_model->get_costototal_insumos_usados($detalleserv_id);
                echo json_encode($datos);
    }
}
    
    /* buscar servicios para repinforme */
    function buscarservicios_infrep()
    {
        if($this->acceso(142)){
        if ($this->input->is_ajax_request()) {
            
            $parametro = $this->input->post('parametro');   
            
            if ($parametro!=""){
            $datos = $this->Servicio_model->get_busqueda_infservicio_parametro($parametro);
            //$datos = $this->Inventario_model->get_inventario_bloque();
            echo json_encode($datos);
            }else{
                $datos = $this->Servicio_model->get_all_servicios_pendientes();
            echo json_encode($datos);
            }
        }
        else
        {                 
            show_404();
        }
    }
}
    /* modificar servicio fechas y generar su CODIGO seguimiento */
    function modificarservicio()
    {
        if($this->acceso(69)){
        if ($this->input->is_ajax_request())
        {
            $fecha_reg = date('Y-m-d');
            $hora_reg = date('H:i:s');
            $minseg = date('is');
            $servicio_id = $this->input->post('servicio_id');
            
            $minutosegundo = date('is');
        
        $this->load->model('Dosificacion_model');
        $dosificacion   = $this->Dosificacion_model->get_dosificacion_activa();
        $autorizacion   = $dosificacion[0]['dosificacion_autorizacion'];
        $llave          = $dosificacion[0]['dosificacion_llave'];
        $codseguimiento = $this->codigo_control1($llave, $autorizacion, $servicio_id, $servicio_id,$fecha_reg, $minseg);
        
            $params = array(
                'servicio_fecharecepcion' => $fecha_reg,
                'servicio_horarecepcion' => $hora_reg,
                'servicio_codseguimiento' => $codseguimiento,
            );
            $this->Servicio_model->update_servicio($servicio_id,$params);

            echo json_encode("ok");
        }
        else
        {                 
            show_404();
        }
    }
}
    
    function codigo_control1($dosificacion_llave, $dosificacion_autorizacion, $dosificacion_numfact, $nit,$fecha_trans, $monto)
    {

        //include 'ControlCode.php';

        $code = $this->controlcode->generate($dosificacion_autorizacion,//Numero de autorizacion
                                                   $dosificacion_numfact,//Numero de factura
                                                   $nit,//Número de Identificación Tributaria o Carnet de Identidad
                                                   str_replace('-','',$fecha_trans),//fecha de transaccion de la forma AAAAMMDD
                                                   $monto,//Monto de la transacción
                                                   $dosificacion_llave//Llave de dosificación
                        );        
         return str_replace('-','',$code);
    }
    
    /* elimina el servicio incluido sus detalles */
    function removeall()
    {
        if($this->acceso(78)){
        if ($this->input->is_ajax_request())
        {
            $this->load->model('Detalle_serv_model');
            
            $servicio_id = $this->input->post('servicio_id');
            $detalle_serv = $this->Detalle_serv_model->get_ids_detalleserv_all($servicio_id);
          /*  if(isset($detalle_serv['detalleserv_id']))
            {*/
            $this->load->model('Detalle_venta_model');
            $this->load->model('Inventario_model');
            foreach($detalle_serv as $det_serv)
            {
                $detalle_venta = $this->Detalle_venta_model->get_all_detalle_ventas_servicio($det_serv['detalleserv_id']);
                foreach($detalle_venta as $detalle){
                    $this->Inventario_model->incrementar_inventario($detalle['detalleven_cantidad'], $detalle['producto_id']);
                    $this->Detalle_venta_model->delete_detalle_venta($detalle['detalleven_id']);
                }
            }
           // }
            $this->Detalle_serv_model->delete_detalle_serv_all($servicio_id);
            
            $this->Servicio_model->delete_servicio($servicio_id);

            echo json_encode("ok");
        }
        else
        {                 
            show_404();
        }
    }
}
    /*
     * obtenemos los nombres de los detalles de un determinado servicio
    */
    function getname_detalleservicio($servicio_id)
    {
        if($this->acceso(69)){
            if ($this->input->is_ajax_request()){
                $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
                if(isset($data['servicio']['servicio_id']))
                {
                    $this->load->model('Detalle_serv_model');
                    $datos = $this->Detalle_serv_model->get_name_detalle_serv_all($servicio_id);
                    echo json_encode($datos);
                }else{
                    echo json_encode("noexiste");
                }
            }
            else
            {                 
                show_404();
            }
        }
    }
    /* registrar servicio tgerminado */
    function registrar_servicioterminado()
    {
        $data['sistema'] = $this->sistema;
        //if($this->acceso(69)){
            if ($this->input->is_ajax_request()){
                
                $this->load->library('form_validation');
                $this->form_validation->set_rules('detalleserv_diagnostico','Diagnostico','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                $this->form_validation->set_rules('detalleserv_solucion','Solución','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                $this->form_validation->set_rules('detalleserv_total','Total','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                if($this->form_validation->run())
                {
                    $servicio_id = $this->input->post('servicio_id');
                    $detalleserv_id = $this->input->post('detalleserv_id');
                    $estado_id = 6; // 6 ---> TERMINADO
                    $fecha_terminado = date('Y-m-d');
                    $hora_terminado = date('H:i:s');
                    $tipousuario_id = $this->session_data['tipousuario_id'];
                    if($tipousuario_id == 1){
                        $params = array(
                            'detalleserv_fechaterminado' => $fecha_terminado,
                            'detalleserv_horaterminado' => $hora_terminado,
                            'estado_id' => $estado_id,
                            'detalleserv_descripcion' => $this->input->post('detalleserv_descripcion'),
                            'detalleserv_glosa' => $this->input->post('detalleserv_glosa'),
                            'detalleserv_falla' => $this->input->post('detalleserv_falla'),
                            'detalleserv_diagnostico' => $this->input->post('detalleserv_diagnostico'),
                            'detalleserv_solucion'    => $this->input->post('detalleserv_solucion'),
                            'detalleserv_total'       => $this->input->post('detalleserv_total'),
                            'detalleserv_saldo'       => $this->input->post('detalleserv_saldo'),
                            'detalleserv_precioexterno'  => $this->input->post('detalleserv_precioexterno'),
                            'detalleserv_detalleexterno' => $this->input->post('detalleserv_detalleexterno'),
                            'responsable_id' => $this->input->post('este_responsable_reginf'),
                        );
                    }else{
                        $params = array(
                            'detalleserv_fechaterminado' => $fecha_terminado,
                            'detalleserv_horaterminado' => $hora_terminado,
                            'estado_id' => $estado_id,
                            'detalleserv_diagnostico' => $this->input->post('detalleserv_diagnostico'),
                            'detalleserv_solucion'    => $this->input->post('detalleserv_solucion'),
                            'detalleserv_total'       => $this->input->post('detalleserv_total'),
                            'detalleserv_saldo'       => $this->input->post('detalleserv_saldo'),
                            'detalleserv_precioexterno'  => $this->input->post('detalleserv_precioexterno'),
                            'detalleserv_detalleexterno' => $this->input->post('detalleserv_detalleexterno'),
                        );
                    }
                    $this->load->model('Detalle_serv_model');
                    $datos = $this->Detalle_serv_model->update_detalle_serv($detalleserv_id,$params);
                    /* **************Suma los montos de los detalles y actualiza servicio************* */
                    $data['resultado'] = $this->Detalle_serv_model->sumarmontos($servicio_id);
                    
                    $total = $data['resultado']['total'];
                    $acuenta = $data['resultado']['acuenta'];
                    $saldo = $data['resultado']['saldo'];
                    $sumparams = array(
                            'servicio_total' => $total,
                            'servicio_acuenta' => $acuenta,
                            'servicio_saldo' => $saldo,
                    );
                    $this->Servicio_model->update_servicio($servicio_id,$sumparams);
                    /* **********Cambia el estado del servicio segun el estado de los detalles*********** */
                    $res_ids = $this->Detalle_serv_model->get_ids_estado_detalle_serv($servicio_id);
                    $cont = 0;
                    foreach($res_ids as $ids)
                    {
                        if($ids['estado_id'] == $estado_id){
                            $cont++;
                        }
                    }
                    if($cont == count($res_ids)){
                        $params = array(
                                    'estado_id' => $estado_id,
                        );
                        
                        $this->Servicio_model->update_servicio($servicio_id,$params);
                    }
                    echo json_encode("ok");
                }else{
                    echo json_encode("faltainf");
                }
            }
            else
            {
                show_404();
            }
        //}
    }
    /* registrar servicio entegado */
    function registrar_servicioentregado()
    {
        $data['sistema'] = $this->sistema;
        //if($this->acceso(69)){
            if ($this->input->is_ajax_request()){
                
                $this->load->library('form_validation');
                $this->form_validation->set_rules('detalleserv_entregadoa','Entregado a','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                $this->form_validation->set_rules('detalleserv_saldo','Saldo','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                if($this->form_validation->run())
                {
                    $usuario_id  = $this->session_data['usuario_id'];
                    $servicio_id = $this->input->post('servicio_id');
                    $detalleserv_id = $this->input->post('detalleserv_id');
                    $estado_id = 7; // 7 ---> ENTREGADO
                    $fecha_entregado = date('Y-m-d');
                    $hora_entregado  = date('H:i:s');
                    $tipousuario_id = $this->session_data['tipousuario_id'];
                    $forma_id = $this->input->post('forma_pago');
                    $banco_id = $forma_id == 1 ? '0':$this->input->post('banco_id');
                    $glosa = $forma_id == 1 ? '':$this->input->post('glosa');
                    if($tipousuario_id == 1){
                        $params = array(
                            'responsable_id'       => $this->input->post('este_responsable_regent'),
                            'usuariopsaldo_id' => $usuario_id,
                            'detalleserv_fechaentregado' => $fecha_entregado,
                            'detalleserv_horaentregado' => $hora_entregado,
                            'detalleserv_fpagosaldo' => $fecha_entregado." ".$hora_entregado,
                            'estado_id' => $estado_id,
                            'detalleserv_total'       => $this->input->post('detalleserv_total'),
                            'detalleserv_saldo'       => $this->input->post('detalleserv_saldo'),
                            'detalleserv_entregadoa'  => $this->input->post('detalleserv_entregadoa'),
                            'detalleserv_diagnostico'  => $this->input->post('detalleserv_diagnosticot'),
                            'detalleserv_solucion'  => $this->input->post('detalleserv_soluciont'),
                            'detalleserv_precioexterno'  => $this->input->post('detalleserv_precioexterno'),
                            'detalleserv_detalleexterno'  => $this->input->post('detalleserv_detalleexterno'),
                            'forma_id'  => $this->input->post('forma_pago'),
                            'tipotrans_id'  => $this->input->post('tipo_transaccion'),
                            'banco_id'=> $banco_id,
                            'glosa' => $glosa,
                        );
                    }else{
                        $params = array(
                            'usuariopsaldo_id' => $usuario_id,
                            'detalleserv_fechaentregado' => $fecha_entregado,
                            'detalleserv_horaentregado' => $hora_entregado,
                            'detalleserv_fpagosaldo' => $fecha_entregado." ".$hora_entregado,
                            'estado_id' => $estado_id,
                            'detalleserv_total'       => $this->input->post('detalleserv_total'),
                            'detalleserv_saldo'       => $this->input->post('detalleserv_saldo'),
                            'detalleserv_entregadoa'  => $this->input->post('detalleserv_entregadoa'),
                            'detalleserv_diagnostico'  => $this->input->post('detalleserv_diagnosticot'),
                            'detalleserv_solucion'  => $this->input->post('detalleserv_soluciont'),
                            'detalleserv_precioexterno'  => $this->input->post('detalleserv_precioexterno'),
                            'detalleserv_detalleexterno'  => $this->input->post('detalleserv_detalleexterno'),
                            'forma_id'  => $this->input->post('forma_pago'),
                            'tipotrans_id'  => $this->input->post('tipo_transaccion'),
                            'banco_id'=> $banco_id,
                            'glosa' => $glosa,
                        );
                    }
                    $this->load->model('Detalle_serv_model');
                    $datos = $this->Detalle_serv_model->update_detalle_serv($detalleserv_id,$params);
                    /* **************Suma los montos de los detalles y actualiza servicio************* */
                    $data['resultado'] = $this->Detalle_serv_model->sumarmontos($servicio_id);
                    
                    $total = $data['resultado']['total'];
                    $acuenta = $data['resultado']['acuenta'];
                    $saldo = $data['resultado']['saldo'];
                    $sumparams = array(
                            'servicio_total' => $total,
                            'servicio_acuenta' => $acuenta,
                            'servicio_saldo' => $saldo,
                    );
                    $this->Servicio_model->update_servicio($servicio_id,$sumparams);
                    /* **********Cambia el estado del servicio segun el estado de los detalles*********** */
                    $res_ids = $this->Detalle_serv_model->get_ids_estado_detalle_serv($servicio_id);
                    $cont = 0;
                    foreach($res_ids as $ids)
                    {
                        if($ids['estado_id'] == $estado_id){
                            $cont++;    
                        }
                    }
                    if($cont == count($res_ids)){
                        $params = array(
                            'estado_id' => $estado_id,
                            'servicio_fechafinalizacion' => $fecha_entregado,
                            'servicio_horafinalizacion' => $hora_entregado,
                        );
                        
                        $this->Servicio_model->update_servicio($servicio_id,$params);
                    }
                    /* *********************inicio para credito********************* */
                    $tipo_transaccion = $this->input->post('tipo_transaccion');
                    if($tipo_transaccion==2) //Si la transaccion es a credito
                    {
                        //$credito_id =  
                        $estadocredito_id =  8; //8 pendiente 9 cancelado
                        $detalleserv_saldo = $this->input->post('detalleserv_saldo');
                        $cuota_inicial = $this->input->post('cuota_inicial');
                        $credito_monto =  $detalleserv_saldo - $cuota_inicial;
                        $credito_interes = $this->input->post('credito_interes');
                        //$credito_interesproc =  $credito_interes;
                        //$credito_interes = $this->input->post('credito_interes');
                        
                        $credito_interesmonto =  $credito_monto * $credito_interes; //revisar
                        //$credito_numpagos =  $this->input->post('cuotas');
                        $credito_fechalimite =  "date_add(date(now()), INTERVAL +1 WEEK)";
                        $credito_fecha = date('Y-m-d');
                        $time = time();
                        $credito_hora =  date("H:i:s", $time);
                        $credito_tipo = 1; // 1- ventas 2 - compras

                        $cuotas       = $this->input->post('cuotas');
                        $interes      = $this->input->post('interes');
                        $modalidad    = $this->input->post('modalidad');
                        $dia_pago     = $this->input->post('dia_pago');
                        $fecha_inicio = $this->input->post('fecha_inicio');
                        $numcuota = $cuotas; //numero de cuotas

                        if ($modalidad == "MENSUAL") $intervalo = 30; //si los pagos son mensuales
                        else $intervalo = 7; //si los pagos son semanales

                            $cuota_numcuota = 1;
                            for ($i=1; $i <= $numcuota; $i++) { // ciclo para llenar las cuotas
                                $cuota_numcuota = $i;

                                $cuota_fechalimitex = (time() + ($intervalo * $i * 24 * 60 * 60 ));
                                if ($modalidad == "MENSUAL") 
                                    $cuota_fechalimite = date('Y-m-'.$dia_pago, $cuota_fechalimitex);
                                else 
                                    $cuota_fechalimite = date('Y-m-d', $cuota_fechalimitex);
                            }
                            $credito_fechalimite = $cuota_fechalimite;
                        /*$sql = "insert  into credito(estado_id,compra_id,venta_id,credito_monto,credito_cuotainicial,credito_interesproc,credito_interesmonto,credito_numpagos,credito_fechalimite,credito_fecha,credito_hora,credito_tipo) value(".
                                $estado_id.",".$compra_id.",".$venta_id.",".$credito_monto.",".$credito_cuotainicial.",".$credito_interesproc.",".$credito_interesmonto.",".$credito_numpagos.",'".$credito_fechalimite."','".$credito_fecha."','".$credito_hora."',".$credito_tipo.")";
                        $credito_id = $this->Venta_model->ejecutar($sql);// cargar los productos del detalle_aux al detalle_venta
                        */
                        $cadcredito = array(
                            'estado_id' => $estadocredito_id,
                            'compra_id' => 0,
                            'venta_id'  => 0,
                            'credito_monto' => $credito_monto,
                            'credito_cuotainicial' => $cuota_inicial,
                            'credito_interesproc' => $credito_interes,
                            'credito_interesmonto' => $credito_interesmonto,
                            'credito_numpagos' => $this->input->post('cuotas'),
                            'credito_fechalimite' => $credito_fechalimite,
                            'credito_fecha' => $credito_fecha,
                            'credito_hora' => $credito_hora,
                            'credito_tipo' => 1,
                            'servicio_id' => $this->input->post('servicio_id'),
                        );
                        $this->load->model('Credito_model');
                        $credito_id = $this->Credito_model->add_credito($cadcredito);
                        
                        $usuario_id = $this->session_data['usuario_id'];
                        
                        

                        $estado_id =  8; //8 pendiente 9 cancelado
                        $cuota_numcuota = 1;
                        $cuota_capital = $detalleserv_saldo - $cuota_inicial;
                        $cuota_interes = ($detalleserv_saldo - $cuota_inicial)*($credito_interes/100);
                        $cuota_moradias = 0;
                        $cuota_multa = 0;
                        $cuota_subtotal =  $detalleserv_saldo - $cuota_inicial;
                        $cuota_descuento = 0;
                        $cuota_total = $detalleserv_saldo - $cuota_inicial+$cuota_interes;

                        $cuota_cancelado = 0;
                        //$cuota_fecha = "'1900-01-01'";
                        //$cuota_hora = "'00:00'";
                        //$cuota_numercibo =  0;
                        $cuota_saldo = $detalleserv_saldo - $cuota_inicial;
                        //$cuota_glosa = "''";
                        //$cuota_saldocredito = $detalleserv_saldo - $cuota_inicial;


                        $dias_mora = 0;
                        $multa = 0;
                        $descuento = 0;
                        $cancelado = 0;
                        $credito_monto = $detalleserv_saldo - $cuota_inicial;

                        $patron = ($numcuota*0.5) + 0.5;
                        $cuota_capital = ($credito_monto)/$numcuota;   // bien         
                        $fijo = $patron * $credito_monto * ($credito_interes/100/$numcuota);
                        $cuota_subtotal = $fijo + $cuota_capital + $dias_mora + $multa;
                        $total = $cuota_subtotal - $descuento;
                        $saldo_deudor = $credito_monto;

                        $siguiente= 0;
                        $cuota_fechalimite = $fecha_inicio;

                       // $fecha_inicio = date('YYYY', $fecha_inicio)."-".date('MM', $fecha_inicio)."-".$dia_pago;

                        //$cuota_fechalimite = $fecha_inicio;
                        
                        for ($i=1; $i <= $numcuota; $i++) { // ciclo para llenar las cuotas
                            $cuota_numcuota = $i;

                            $cuota_fechalimitex = (time() + ($intervalo * $i * 24 * 60 * 60 ));
                            if ($modalidad == "MENSUAL") 
                                $cuota_fechalimite = date('Y-m-'.$dia_pago, $cuota_fechalimitex);
                            else 
                                $cuota_fechalimite = date('Y-m-d', $cuota_fechalimitex); 

                            /*$cuota ="insert into cuota (
                                    credito_id,usuario_id,estado_id,cuota_numcuota,
                                    cuota_capital,cuota_interes,cuota_moradias,cuota_multa,
                                    cuota_descuento,cuota_cancelado,cuota_total,cuota_subtotal,
                                    cuota_fechalimite,cuota_saldo) VALUES (".
                                    $credito_id.",".$usuario_id.",".$estado_id.",".$cuota_numcuota."
                                    ,".$cuota_capital.",".$fijo.",".$dias_mora.",".$multa."
                                    ,".$descuento.",".$cancelado.",".$total.",".$cuota_subtotal."
                                    ,'".$cuota_fechalimite."',".$saldo_deudor.")";
                            $this->Venta_model->ejecutar($cuota);
                            */
                            $cadcuota = array(
                                'credito_id' => $credito_id,
                                'usuario_id' => $usuario_id,
                                'estado_id' => $estadocredito_id,
                                'cuota_numcuota' => $cuota_numcuota,
                                'cuota_capital' => $cuota_capital,
                                'cuota_interes' => $fijo,
                                'cuota_moradias' => $dias_mora,
                                'cuota_multa' => $multa,
                                'cuota_subtotal' => $cuota_subtotal,
                                'cuota_descuento' => $descuento,
                                'cuota_total' => $total,
                                'cuota_fechalimite' => $cuota_fechalimite,
                                'cuota_cancelado' => $cancelado,
                                'cuota_saldo' => $saldo_deudor,
                            );
                        $this->load->model('Cuotum_model');
                        $cuota_id = $this->Cuotum_model->add_cuotum($cadcuota);

        //                    $saldo_deudor = $cuota_total - $cuota_capital;
        //                    $cuota_total = $saldo_deudor;
                            $saldo_deudor = $saldo_deudor - $cuota_capital;
                            //$cuota_total = $saldo_deudor;
                        }



                    }
                    /* *********************f i n  para credito********************* */
                    echo json_encode("ok");
                }else{
                    echo json_encode("faltainf");
                }
            }
            else
            {
                show_404();
            }
        //}
    }
   
    /* registrar servicio entegado */
    function registrar_detalleservicioentregado()
    {
        $data['sistema'] = $this->sistema;
        //if($this->acceso(69)){
            if ($this->input->is_ajax_request()){
                
                $this->load->library('form_validation');
                $this->form_validation->set_rules('detalleserv_entregadoa','Entregado a','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                $this->form_validation->set_rules('detalleserv_saldo','Saldo','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                if($this->form_validation->run())
                {
                    $usuario_id  = $this->session_data['usuario_id'];
                    $detalleserv_id = $this->input->post('detalleserv_id');
                    $estado_id = 7; // 7 ---> ENTREGADO
                    $fecha_entregado = date('Y-m-d');
                    $hora_entregado  = date('H:i:s');
                    
                    $params = array(
                        'usuariopsaldo_id' => $usuario_id,
                        'detalleserv_fechaentregado' => $fecha_entregado,
                        'detalleserv_horaentregado' => $hora_entregado,
                        'detalleserv_fpagosaldo' => $fecha_entregado." ".$hora_entregado,
                        'estado_id' => $estado_id,
                        'detalleserv_saldo'       => $this->input->post('detalleserv_saldo'),
                        'detalleserv_entregadoa'  => $this->input->post('detalleserv_entregadoa'),
                    );
                    $this->load->model('Detalle_serv_model');
                    $datos = $this->Detalle_serv_model->update_detalle_serv($detalleserv_id,$params);
                    /* **************Suma los montos de los detalles y actualiza servicio************* */
                    $data['resultado'] = $this->Detalle_serv_model->sumarmontos($servicio_id);
                    
                    $total = $data['resultado']['total'];
                    $acuenta = $data['resultado']['acuenta'];
                    $saldo = $data['resultado']['saldo'];
                    $sumparams = array(
                            'servicio_total' => $total,
                            'servicio_acuenta' => $acuenta,
                            'servicio_saldo' => $saldo,
                    );
                    $this->Servicio_model->update_servicio($servicio_id,$sumparams);
                    /* **********Cambia el estado del servicio segun el estado de los detalles*********** */
                    $res_ids = $this->Detalle_serv_model->get_ids_estado_detalle_serv($servicio_id);
                    $cont = 0;
                    foreach($res_ids as $ids)
                    {
                        if($ids['estado_id'] == $estado_id){
                            $cont++;
                        }
                    }
                    if($cont == count($res_ids)){
                        $params = array(
                                    'estado_id' => $estado_id,
                        );
                        
                        $this->Servicio_model->update_servicio($servicio_id,$params);
                    }
                    
                    echo json_encode("ok");
                }else{
                    echo json_encode("faltainf");
                }
            }
            else
            {
                show_404();
            }
        //}
    }
    
    /*
     * *************Registra el cobro total (DE TODOS LOS DETALLES QUE ESTEN EN TERMINADO(estado_id = 6)) de un servicio *********************
     * *************y recalcula los valores de los detalles y cambia todos los estados a ENTREGADO(estado_id = 7)***********
     */
    function registrarcobrototalservicio()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(84)){
            if ($this->input->is_ajax_request()){
                $this->load->library('form_validation');
                $this->form_validation->set_rules('servicio_saldo','Saldo','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                $this->form_validation->set_rules('detalleserv_entregadoa','Entregado a','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                if($this->form_validation->run())
                {
                    $usuario_id = $this->session_data['usuario_id'];
                    $servicio_id =  $this->input->post('servicio_id');
                    $detalleserv_entregadoa =  $this->input->post('detalleserv_entregadoa');
                    //$fecha_finalizacion = date("Y-m-d", strtotime($fecha_cobro));
                    //$hora_finalizacion = date("H:i:s", strtotime($fecha_cobro));
                    //$fechahora = date("Y-m-d H:i:s", strtotime($fecha_cobro));
                    $fecha_finalizacion = date("Y-m-d");
                    $hora_finalizacion  = date("H:i:s");
                    $fechahora = date("Y-m-d H:i:s");

                    $this->load->model('Detalle_serv_model');
                    //recupera a todos los detalles de servicio que su estado sean 6= TERMINADO
                    $res_detalle_serv = $this->Detalle_serv_model->get_detalle_serv_all_terminado($servicio_id);
                    $estado_id = 7; //es el estado ENTREGADO
                    $estado_creditoid = 16; //es el estado CREDITO
                    foreach ($res_detalle_serv as $det_serv)
                    {
                        $cad = array(
                                'estado_id' => $estado_id,
                                'detalleserv_fechaentregado' => $fecha_finalizacion,
                                'detalleserv_horaentregado' => $hora_finalizacion,
                                'detalleserv_fpagosaldo' => $fechahora,
                                'usuariopsaldo_id' => $usuario_id,
                                'detalleserv_entregadoa' => $detalleserv_entregadoa,
                        );
                        $this->Detalle_serv_model->update_detalle_serv($det_serv['detalleserv_id'],$cad);
                    }

                    $res_ids = $this->Detalle_serv_model->get_ids_estado_detalle_serv($servicio_id);
                    $cont = 0;
                    foreach($res_ids as $ids)
                    {
                        if($ids['estado_id'] == $estado_id || $ids['estado_id'] == $estado_creditoid){
                            $cont++;
                        }
                    }
                    if($cont == count($res_ids)){
                        $params = array(
                                    'estado_id' => $estado_id,
                                    'servicio_fechafinalizacion' => $fecha_finalizacion,
                                    'servicio_horafinalizacion' => $hora_finalizacion,
                                    'entregausuario_id' => $usuario_id,
                        );

                        $this->Servicio_model->update_servicio($servicio_id,$params);
                    }
                    $forma_pago       =  $this->input->post('forma_pago');
                    $tipo_transaccion =  $this->input->post('tipo_transaccion');
                    if($tipo_transaccion==2) //Si la transaccion es a credito
                    {
                        $estado_id =  8; //8 pendiente 9 cancelado
                        $compra_id =  0;
                        $venta_id =  $venta_id;
                        $credito_monto =  $venta_total - $cuota_inicial;
                        $credito_cuotainicial =  $cuota_inicial;
                        $credito_interesproc =  $credito_interes;
                        $credito_interesmonto =  $venta_total * $venta_interes; //revisar
                        $credito_numpagos =  $cuotas;
                        $credito_fechalimite =  "date_add(date(now()), INTERVAL +1 WEEK)";
                        $credito_fecha = date('Y-m-d');
                        $time = time();
                        $credito_hora =  date("H:i:s", $time);
                        $credito_tipo = 1; // 1- ventas 2 - compras

                        $cuotas       = $this->input->post('cuotas');
                        $interes       = $this->input->post('interes');
                        $modalidad    = $this->input->post('modalidad');
                        $dia_pago     = $this->input->post('dia_pago');
                        $fecha_inicio = $this->input->post('fecha_inicio');
                        $numcuota = $cuotas; //numero de cuotas


                        if ($modalidad == "MENSUAL") $intervalo = 30; //si los pagos son mensuales
                        else $intervalo = 7; //si los pagos son semanales

                            $cuota_numcuota = 1;
                            for ($i=1; $i <= $numcuota; $i++) { // ciclo para llenar las cuotas
                                $cuota_numcuota = $i;

                                $cuota_fechalimitex = (time() + ($intervalo * $i * 24 * 60 * 60 ));
                                if ($modalidad == "MENSUAL") 
                                    $cuota_fechalimite = date('Y-m-'.$dia_pago, $cuota_fechalimitex);
                                else 
                                    $cuota_fechalimite = date('Y-m-d', $cuota_fechalimitex); 

                            }
                            $credito_fechalimite = $cuota_fechalimite;

                        $sql = "insert  into credito(estado_id,compra_id,venta_id,credito_monto,credito_cuotainicial,credito_interesproc,credito_interesmonto,credito_numpagos,credito_fechalimite,credito_fecha,credito_hora,credito_tipo) value(".
                                $estado_id.",".$compra_id.",".$venta_id.",".$credito_monto.",".$credito_cuotainicial.",".$credito_interesproc.",".$credito_interesmonto.",".$credito_numpagos.",'".$credito_fechalimite."','".$credito_fecha."','".$credito_hora."',".$credito_tipo.")";
                        $credito_id = $this->Venta_model->ejecutar($sql);// cargar los productos del detalle_aux al detalle_venta


                        $estado_id =  8; //8 pendiente 9 cancelado
                        $cuota_numcuota = 1;
                        $cuota_capital = $venta_total - $cuota_inicial;
                        $cuota_interes = ($venta_total - $cuota_inicial)*($credito_interes/100);
                        $cuota_moradias = 0;
                        $cuota_multa = 0;
                        $cuota_subtotal =  $venta_total - $cuota_inicial;
                        $cuota_descuento = 0;
                        $cuota_total = $venta_total - $cuota_inicial+$cuota_interes;

                        $cuota_cancelado = 0;
                        $cuota_fecha = "'1900-01-01'";
                        $cuota_hora = "'00:00'";
                        $cuota_numercibo =  0;
                        $cuota_saldo = $venta_total - $cuota_inicial;
                        $cuota_glosa = "''";
                        $cuota_saldocredito = $venta_total - $cuota_inicial;


                        $dias_mora = 0;
                        $multa = 0;
                        $descuento = 0;
                        $cancelado = 0;
                        $credito_monto = $venta_total - $cuota_inicial;

                        $patron = ($numcuota*0.5) + 0.5;
                        $cuota_capital = ($credito_monto)/$numcuota;   // bien         
                        $fijo = $patron * $credito_monto * ($credito_interes/100/$numcuota);
                        $cuota_subtotal = $fijo + $cuota_capital + $dias_mora + $multa;
                        $total = $cuota_subtotal - $descuento;
                        $saldo_deudor = $credito_monto;

                        $siguiente= 0;
                        $cuota_fechalimite = $fecha_inicio;

                       // $fecha_inicio = date('YYYY', $fecha_inicio)."-".date('MM', $fecha_inicio)."-".$dia_pago;

                        $cuota_fechalimite = $fecha_inicio;




                            for ($i=1; $i <= $numcuota; $i++) { // ciclo para llenar las cuotas
                                $cuota_numcuota = $i;

                                $cuota_fechalimitex = (time() + ($intervalo * $i * 24 * 60 * 60 ));
                                if ($modalidad == "MENSUAL") 
                                    $cuota_fechalimite = date('Y-m-'.$dia_pago, $cuota_fechalimitex);
                                else 
                                    $cuota_fechalimite = date('Y-m-d', $cuota_fechalimitex); 

                                $cuota ="insert into cuota (credito_id,usuario_id,estado_id,cuota_numcuota,cuota_capital,cuota_interes,cuota_moradias,cuota_multa,cuota_descuento,cuota_cancelado,cuota_total,cuota_subtotal,cuota_fechalimite,cuota_saldo) VALUES (".
                                        $credito_id.",".$usuario_id.",".$estado_id.",".$cuota_numcuota.",".$cuota_capital.",".$fijo.",".
                                        $dias_mora.",".$multa.",".$descuento.",".$cancelado.",".$total.",".$cuota_subtotal.",'".$cuota_fechalimite."',".$saldo_deudor.")";

                                $this->Venta_model->ejecutar($cuota);

            //                    $saldo_deudor = $cuota_total - $cuota_capital;
            //                    $cuota_total = $saldo_deudor;
                                $saldo_deudor = $saldo_deudor - $cuota_capital;
                                //$cuota_total = $saldo_deudor;
                            }



                    }
                   echo json_encode("ok");
               }else{
                    echo json_encode("faltainf");
                }
               //redirect('servicio/serview/'.$servicio_id);
            }else{ show_404(); }
        }
    }
    
    /* ***********Imprime comprobante de pago de un detalle de servicio, tamaño carta sin IMAGEN********** */
    function notaesi_carta($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $data['page_title'] = "Comprobante de Servicio";
            
            $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            
            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            $this->load->model('Categoria_clientezona_model');
	    $data['zona'] = $this->Categoria_clientezona_model->get_categoria_clientezona($data['cliente']['zona_id']);
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['entregausuario_id']);
            
            $this->load->model('Dosificacion_model');
	    $data['all_dosificacion'] = $this->Dosificacion_model->get_all_dosificacion_servicio();
            
            $data['_view'] = 'servicio/notaesi_carta';
            $this->load->view('layouts/main',$data);
        }
    }
    /* ***********Imprime comprobante de pago de un detalle de servicio, tamaño carta con IMAGEN********** */
    function notaeci_carta($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $data['page_title'] = "Comprobante de Servicio";
            
            $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            
            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            $this->load->model('Categoria_clientezona_model');
	    $data['zona'] = $this->Categoria_clientezona_model->get_categoria_clientezona($data['cliente']['zona_id']);
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['entregausuario_id']);
            
            $this->load->model('Dosificacion_model');
	    $data['all_dosificacion'] = $this->Dosificacion_model->get_all_dosificacion_servicio();
            
            $data['_view'] = 'servicio/notaeci_carta';
            $this->load->view('layouts/main',$data);
        }
    }
    /* ***********Imprime comprobante de pago de un detalle de servicio, tamaño boucher sin IMAGEN********** */
    function notaesi_boucher($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $data['page_title'] = "Comprobante de Servicio";
            
            $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            
            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            $this->load->model('Categoria_clientezona_model');
	    $data['zona'] = $this->Categoria_clientezona_model->get_categoria_clientezona($data['cliente']['zona_id']);
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['entregausuario_id']);
            
            $this->load->model('Dosificacion_model');
	    $data['all_dosificacion'] = $this->Dosificacion_model->get_all_dosificacion_servicio();
            
            $data['_view'] = 'servicio/notaesi_boucher';
            $this->load->view('layouts/main',$data);
        }
    }
    /* ***********Imprime comprobante de pago de un detalle de servicio, tamaño carta con IMAGEN********** */
    function notaeci_boucher($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(69)){
            
            $data['page_title'] = "Comprobante de Servicio";
            
            $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            
            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            $this->load->model('Categoria_clientezona_model');
	    $data['zona'] = $this->Categoria_clientezona_model->get_categoria_clientezona($data['cliente']['zona_id']);
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['entregausuario_id']);
            
            $this->load->model('Dosificacion_model');
	    $data['all_dosificacion'] = $this->Dosificacion_model->get_all_dosificacion_servicio();
            
            $data['_view'] = 'servicio/notaeci_boucher';
            $this->load->view('layouts/main',$data);
        }
    }
    /* ***********Imprime comprobante de pago de un detalle de servicio, tamaño boucher********** */
    function servcompdetalle_pago_boucher($servicio_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $data['page_title'] = "Comprobante de Servicio";
            $data['servicio'] = $this->Servicio_model->get_servicio($servicio_id);
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['entregausuario_id']);
            
            $this->load->model('Dosificacion_model');
	    $data['all_dosificacion'] = $this->Dosificacion_model->get_all_dosificacion_servicio();
            
            $data['_view'] = 'servicio/servcompdetalle_pago_boucher';
            $this->load->view('layouts/main',$data);
        }
    }
    
    
    function seguimiento($cliente_id,$servicio_id){

        $data['sistema'] = $this->sistema;
//        if($this->acceso(69)){
            $data['page_title'] = "Seguimiento de Servicios";
            
            $servicios = $this->Servicio_model->get_servicio_id($cliente_id,$servicio_id);
            $data['servicio'] =  $servicios;
            
            $this->load->model('Parametro_model');
            $data['all_parametro'] = $this->Parametro_model->get_all_parametro();
//            
//            if (sizeof($servicios)>0){
                //Catalogo de imagenes
                $this->load->model('Detalle_serv_model');
                $this->load->model('Imagen_producto_model');
//                $detalle_serv = $this->Detalle_serv_model->get_detalle_serv($detalleserv_id);
//                $data['detalleserv_descripcion'] = $detalle_serv['detalleserv_descripcion'];
//                $data['detalleserv_id'] = $detalleserv_id;
                $data['imagenes'] = $this->Imagen_producto_model->get_all_imagen_mi_serv($servicio_id);
                //Catalogo de imagenes
                
                
                $this->load->model('Detalle_serv_model');
                $data['detalle_servicio'] = $this->Detalle_serv_model->get_detalle_serv_all($servicio_id);

                $empresa_id = 1;
                $this->load->model('Empresa_model');
                $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);

                $data['_view'] = 'servicio/seguimiento_servicio';
                $this->load->view('layouts/clientmain',$data);
//            } 
//        }
        
    }
    /* registrar servicio en proceso */
    function registrar_servicioenproceso()
    {
            if ($this->input->is_ajax_request()){
                    $servicio_id = $this->input->post('servicio_id');
                    $detalleserv_id = $this->input->post('detalleserv_id');
                    $estado_id = 28; // 28 ---> EN PROCESO
                    $fecha_enproceso = date('Y-m-d');
                    $hora_enproceso  = date('H:i:s');
                    if($this->session_data['tipousuario_id'] == 1){
                        $responsable_id = $this->input->post('este_responsable');
                    }else{
                        $responsable_id = $this->session_data['usuario_id'];
                    }
                    $params = array(
                        'detalleserv_fechaproceso' => $fecha_enproceso,
                        'detalleserv_horaproceso' => $hora_enproceso,
                        'estado_id' => $estado_id,
                        'responsable_id' => $responsable_id,
                    );
                    $this->load->model('Detalle_serv_model');
                    $datos = $this->Detalle_serv_model->update_detalle_serv($detalleserv_id,$params);
                    
                    /* **********Cambia el estado del servicio segun el estado de los detalles*********** */
                    $res_ids = $this->Detalle_serv_model->get_ids_estado_detalle_serv($servicio_id);
                    $cont = 0;
                    foreach($res_ids as $ids)
                    {
                        if($ids['estado_id'] == $estado_id){
                            $cont++;
                        }
                    }
                    if($cont == count($res_ids)){
                        $params = array(
                                    'estado_id' => $estado_id,
                        );
                        
                        $this->Servicio_model->update_servicio($servicio_id,$params);
                    }
                    echo json_encode("ok");
            }
            else
            {
                show_404();
            }
        //}
    }
    /* registrar servicio tgerminado */
    function registrarinformacion_detalleservicio()
    {
        $data['sistema'] = $this->sistema;
        //if($this->acceso(69)){
            if ($this->input->is_ajax_request()){
                
                $this->load->library('form_validation');
                $this->form_validation->set_rules('detalleserv_diagnostico','Diagnostico','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                $this->form_validation->set_rules('detalleserv_solucion','Solución','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                $this->form_validation->set_rules('detalleserv_total','Total','trim|required', array('required' => 'Este Campo no debe ser vacio'));
                if($this->form_validation->run())
                {
                    $servicio_id = $this->input->post('servicio_id');
                    $detalleserv_id = $this->input->post('detalleserv_id');
                    $estado_id = 6; // 6 ---> TERMINADO
                    $fecha_terminado = date('Y-m-d');
                    $hora_terminado = date('H:i:s');
                    $tipousuario_id = $this->session_data['tipousuario_id'];
                    if($tipousuario_id == 1){
                        $params = array(
                            /*'detalleserv_fechaterminado' => $fecha_terminado,
                            'detalleserv_horaterminado' => $hora_terminado,*/
                            //'estado_id' => $estado_id,
                            'detalleserv_descripcion' => $this->input->post('detalleserv_descripcion'),
                            'detalleserv_glosa' => $this->input->post('detalleserv_glosa'),
                            'detalleserv_falla' => $this->input->post('detalleserv_falla'),
                            'detalleserv_diagnostico' => $this->input->post('detalleserv_diagnostico'),
                            'detalleserv_solucion'    => $this->input->post('detalleserv_solucion'),
                            'detalleserv_total'       => $this->input->post('detalleserv_total'),
                            'detalleserv_saldo'       => $this->input->post('detalleserv_saldo'),
                            'detalleserv_precioexterno'  => $this->input->post('detalleserv_precioexterno'),
                            'detalleserv_detalleexterno' => $this->input->post('detalleserv_detalleexterno'),
                            'responsable_id' => $this->input->post('este_responsable_reginf'),
                        );
                    }else{
                        $params = array(
                            /*'detalleserv_fechaterminado' => $fecha_terminado,
                            'detalleserv_horaterminado' => $hora_terminado,*/
                            //'estado_id' => $estado_id,
                            'detalleserv_diagnostico' => $this->input->post('detalleserv_diagnostico'),
                            'detalleserv_solucion'    => $this->input->post('detalleserv_solucion'),
                            'detalleserv_total'       => $this->input->post('detalleserv_total'),
                            'detalleserv_saldo'       => $this->input->post('detalleserv_saldo'),
                            'detalleserv_precioexterno'  => $this->input->post('detalleserv_precioexterno'),
                            'detalleserv_detalleexterno' => $this->input->post('detalleserv_detalleexterno'),
                        );
                    }
                    $this->load->model('Detalle_serv_model');
                    $datos = $this->Detalle_serv_model->update_detalle_serv($detalleserv_id,$params);
                    /* **************Suma los montos de los detalles y actualiza servicio************* */
                    $data['resultado'] = $this->Detalle_serv_model->sumarmontos($servicio_id);
                    
                    $total = $data['resultado']['total'];
                    $acuenta = $data['resultado']['acuenta'];
                    $saldo = $data['resultado']['saldo'];
                    $sumparams = array(
                            'servicio_total' => $total,
                            'servicio_acuenta' => $acuenta,
                            'servicio_saldo' => $saldo,
                    );
                    $this->Servicio_model->update_servicio($servicio_id,$sumparams);
                    /* **********Cambia el estado del servicio segun el estado de los detalles*********** */
                    /*$res_ids = $this->Detalle_serv_model->get_ids_estado_detalle_serv($servicio_id);
                    $cont = 0;
                    foreach($res_ids as $ids)
                    {
                        if($ids['estado_id'] == $estado_id){
                            $cont++;
                        }
                    }
                    if($cont == count($res_ids)){
                        $params = array(
                                    'estado_id' => $estado_id,
                        );
                        
                        $this->Servicio_model->update_servicio($servicio_id,$params);
                    }*/
                    echo json_encode("ok");
                }else{
                    echo json_encode("faltainf");
                }
            }
            else
            {
                show_404();
            }
        //}
    }
    /* registrar pago a cuenta de un detalle de servicio */
    function registrar_pago_acuenta(){
        
        $data['sistema'] = $this->sistema;
        if ($this->input->is_ajax_request()){
                $servicio_id = $this->input->post('servicio_id');
                $detalleserv_id = $this->input->post('detalleserv_id');
                //$estado_id = 28; // 28 ---> EN PROCESO
                //$fecha_enproceso = date('Y-m-d');
                //$hora_enproceso  = date('H:i:s');
                //if($this->session_data['tipousuario_id'] == 1){
                    //$fecha_acuenta = $this->input->post('fecha_acuenta');
                    //$monto_acuenta = $this->input->post('monto_acuenta');
                /*}else{
                    $responsable_id = $this->session_data['usuario_id'];
                }*/
                $this->load->model('Detalle_serv_model');
                //$detalleservdatos = $this->Detalle_serv_model->get_detalle_serv($detalleserv_id);
                $saldo = floatval($this->input->post('monto_total')) - floatval($this->input->post('monto_acuenta'));
                $params = array(
                    'detalleserv_total' => $this->input->post('monto_total'),
                    'detalleserv_acuenta' => $this->input->post('monto_acuenta'),
                    'detalleserv_fpagoacuenta' => $this->input->post('fecha_acuenta'),
                    'detalleserv_saldo' => $saldo,
                );
                
                $datos = $this->Detalle_serv_model->update_detalle_serv($detalleserv_id,$params);
                
                $data['resultado'] = $this->Detalle_serv_model->sumarmontos($servicio_id);
                
                $total = $data['resultado']['total'];
                $acuenta = $data['resultado']['acuenta'];
                $saldo = $data['resultado']['saldo'];
                $sumparams = array(
                        'servicio_total' => $total,
                        'servicio_acuenta' => $acuenta,
                        'servicio_saldo' => $saldo,
                );
                $this->Servicio_model->update_servicio($servicio_id,$sumparams);
                
                echo json_encode("ok");
        }else{
            show_404();
        }   
    }
    /*************** funcion para mostrar la vista de la nota de entrega de servicios ******************/
    function imprimir_notaentrega($servicio_id){
        if($this->acceso(69)){
        //**************** inicio contenido ***************
            $this->load->model('Parametro_model');
            $parametros = $this->Parametro_model->get_parametros();
            if(sizeof($parametros)>0){
                if($parametros[0]['parametro_tipoimpresora']=="FACTURADORA")
                    $this->notaesi_boucher($servicio_id);
                else
                    $this->notaesi_carta($servicio_id);
            }
        //**************** fin contenido ***************
        }
    }
    /*************** funcion para mostrar la vista de la nota de entrega de servicios ******************/
    function imprimir_notaentregadetalle($detalleserv_id){
        if($this->acceso(69)){
        //**************** inicio contenido ***************
            $this->load->model('Parametro_model');
            $parametros = $this->Parametro_model->get_parametros();
            if(sizeof($parametros)>0){
                if($parametros[0]['parametro_tipoimpresora']=="FACTURADORA")
                    $this->notaesi_boucherdet($detalleserv_id);
                else
                    $this->notaesi_cartadet($detalleserv_id);
            }
        //**************** fin contenido ***************
        }
    }
    /* ***********Imprime comprobante de pago de un detalle de servicio, tamaño boucher sin IMAGEN********** */
    function notaesi_boucherdet($detalleserv_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $data['page_title'] = "Comprobante de Servicio";
            
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv($detalleserv_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            
            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            
            $data['servicio'] = $this->Servicio_model->get_servicio($data['detalle_serv']['servicio_id']);
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            $this->load->model('Categoria_clientezona_model');
	    $data['zona'] = $this->Categoria_clientezona_model->get_categoria_clientezona($data['cliente']['zona_id']);
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['entregausuario_id']);
            
            $this->load->model('Dosificacion_model');
	    $data['all_dosificacion'] = $this->Dosificacion_model->get_all_dosificacion_servicio();
            
            $data['_view'] = 'servicio/notaesi_boucherdet';
            $this->load->view('layouts/main',$data);
        }
    }
    /* ***********Imprime comprobante de pago de un detalle de servicio, tamaño carta sin IMAGEN********** */
    function notaesi_cartadet($detalleserv_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(69)){
            $data['page_title'] = "Comprobante de Servicio";
            
            
            $this->load->model('Detalle_serv_model');
	    $data['detalle_serv'] = $this->Detalle_serv_model->get_detalle_serv($detalleserv_id);
            
            $empresa_id = 1;
            $this->load->model('Empresa_model');
	    $data['empresa'] = $this->Empresa_model->get_empresa($empresa_id);
            
            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            
            $data['servicio'] = $this->Servicio_model->get_servicio($data['detalle_serv']['servicio_id']);
            $this->load->model('Cliente_model');
	    $data['cliente'] = $this->Cliente_model->get_cliente($data['servicio']['cliente_id']);
            
            $this->load->model('Categoria_clientezona_model');
	    $data['zona'] = $this->Categoria_clientezona_model->get_categoria_clientezona($data['cliente']['zona_id']);
            
            $this->load->model('Usuario_model');
	    $data['usuario'] = $this->Usuario_model->get_usuario($data['servicio']['entregausuario_id']);
            
            $this->load->model('Dosificacion_model');
	    $data['all_dosificacion'] = $this->Dosificacion_model->get_all_dosificacion_servicio();
            
            $data['_view'] = 'servicio/notaesi_cartadet';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Reporte de los servicios por fechas
     */
    function reproximovencer($es = null)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(142)){
            $this->load->model('Empresa_model');
            $data['empresa'] = $this->Empresa_model->get_empresa(1);

            $this->load->model('Parametro_model');
            $data['parametro'] = $this->Parametro_model->get_parametros();
            
            $data['all_detservicio'] = $this->Servicio_model->proximos_avencer();

            $data['page_title'] = "Servicios proximos a vencer";
            $data['_view'] = 'servicio/reproximovencer';
            $this->load->view('layouts/main',$data);
        }
    }
}