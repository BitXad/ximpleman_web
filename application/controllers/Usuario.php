<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */

class Usuario extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Usuario_model');
        $this->load->model('Rol_usuario_model');
        $this->load->model('Tipo_usuario_model');
        $this->load->library('form_validation');
        $this->load->model('user_model');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    }

private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Listing of usuario
     */
    function index()
    {
        if($this->acceso(148)){

                /*$data = array(
                    'usuario_login' => $session_data['usuario_login'],
                    'usuario_id' => $session_data['usuario_id'],
                    'usuario_nombre' => $session_data['usuario_nombre'],
                    'rol' => $this->getRol($session_data['tipousuario_id']),
                    'tipousuario_id' => $session_data['tipousuario_id'],
                    'usuario_imagen' => $session_data['usuario_imagen'],
                    'usuario_email' => $session_data['usuario_email'],
                    'page_title' => 'Admin >> Mi Cuenta',
                    'thumb' => $session_data['thumb']
                );*/

                
                $config = $this->config->item('pagination');
                $config['base_url'] = site_url('usuario/index?');
                $config['total_rows'] = $this->Usuario_model->get_all_usuario_count();
                $this->pagination->initialize($config);
                $data['page_title'] = "Usuario";
                $data['usuario'] = $this->Usuario_model->get_all_usuario();
                //$data['rol_usuario'] = $this->Rol_usuario_model->get_all_rol_usuario($params);
                //$data['tipo_usuario'] = $this->Tipo_usuario_model->get_all_tipo_usuario($params);


                $data['_view'] = 'usuario/index';

                $this->load->view('layouts/main', $data);

            }

    }

    /*
     * Adding a new usuario
     */
    function add()
    {
        if($this->acceso(148)){

               /* $data = array(
                    'usuario_login' => $session_data['usuario_login'],
                    'usuario_id' => $session_data['usuario_id'],
                    'usuario_nombre' => $session_data['usuario_nombre'],
                    'rol' => $this->getRol($session_data['tipousuario_id']),
                    'tipousuario_id' => $session_data['tipousuario_id'],
                    'usuario_imagen' => $session_data['usuario_imagen'],
                    'usuario_email' => $session_data['usuario_email'],
                    'page_title' => 'Admin >> Nuevo Usuario',
                    'thumb' => $session_data['thumb']
                );*/

                $this->form_validation->set_rules('usuario_nombre', 'Usuario Nombre', 'required');
                $this->form_validation->set_rules('usuario_email', 'Email', 'trim|required|valid_email|min_length[5]|max_length[250]|callback_hay_email2');//OJO
                $this->form_validation->set_message('hay_email2', 'El email ya se registro, escriba uno diferente');
                $this->form_validation->set_rules('usuario_login', 'usuario_login', 'required|is_unique[usuario.usuario_login]',
                    array('is_unique' => 'Este login de usuario ya existe.'));

                if ($this->form_validation->run()) {

                    
                    /* *********************INICIO imagen***************************** */
            $foto="";
            if (!empty($_FILES['usuario_imagen']['name'])){
                        $this->load->library('image_lib');
                        $config['upload_path'] = './resources/images/usuarios/';
                        $img_full_path = $config['upload_path'];

                        $config['allowed_types'] = 'gif|jpeg|jpg|png';
                        $config['max_size'] = 200000;
                        $config['max_width'] = 2900;
                        $config['max_height'] = 2900;
                        
                        $new_name = time(); //str_replace(" ", "_", $this->input->post('proveedor_nombre'));
                        $config['file_name'] = $new_name; //.$extencion;
                        $config['file_ext_tolower'] = TRUE;

                        $this->load->library('upload', $config);
                        $this->upload->do_upload('usuario_imagen');

                        $img_data = $this->upload->data();
                        $extension = $img_data['file_ext'];
                        /* ********************INICIO para resize***************************** */
                        if ($img_data['file_ext'] == ".jpg" || $img_data['file_ext'] == ".png" || $img_data['file_ext'] == ".jpeg" || $img_data['file_ext'] == ".gif") {
                            $conf['image_library'] = 'gd2';
                            $conf['source_image'] = $img_data['full_path'];
                            $conf['new_image'] = './resources/images/usuarios/';
                            $conf['maintain_ratio'] = TRUE;
                            $conf['create_thumb'] = FALSE;
                            $conf['width'] = 400;
                            $conf['height'] = 300;
                            $this->image_lib->clear();
                            $this->image_lib->initialize($conf);
                            if(!$this->image_lib->resize()){
                                echo $this->image_lib->display_errors('','');
                            }
                        }
                        /* ********************F I N  para resize***************************** */
                        $confi['image_library'] = 'gd2';
                        $confi['source_image'] = './resources/images/usuarios/'.$new_name.$extension;
                        $confi['new_image'] = './resources/images/usuarios/'."thumb_".$new_name.$extension;
                        $confi['create_thumb'] = FALSE;
                        $confi['maintain_ratio'] = TRUE;
                        $confi['width'] = 100;
                        $confi['height'] = 100;

                        $this->image_lib->clear();
                        $this->image_lib->initialize($confi);
                        $this->image_lib->resize();

                        $foto = $new_name.$extension;
                    }else{
                        $foto = 'default.jpg';
                    }
            /* *********************FIN imagen***************************** */


                    $params = array(
                        'estado_id' => 1,
                        'tipousuario_id' => $this->input->post('tipousuario_id'),
                        'usuario_nombre' => $this->input->post('usuario_nombre'),
                        'usuario_email' => $this->input->post('usuario_email'),
                        'usuario_login' => $this->input->post('usuario_login'),
                        'usuario_clave' => md5($this->input->post('usuario_clave')),
                        'usuario_imagen' => $foto,
                    );


                    $usuario_id = $this->Usuario_model->add_usuario($params);
                    redirect('usuario/index');
                } else {
                   
                    $this->load->model('Tipo_usuario_model');
                    $data['all_tipo_usuario'] = $this->Tipo_usuario_model->get_all_tipo_usuario();
                    $data['page_title'] = "Usuarios";
                    $data['_view'] = 'usuario/add';
                    $this->load->view('layouts/main', $data);
                }

            } 

    }

    function editar($usuario_id){

        if($this->acceso(148)){


                /*$data = array(
                    'usuario_login' => $session_data['usuario_login'],
                    'usuario_id' => $session_data['usuario_id'],
                    'usuario_nombre' => $session_data['usuario_nombre'],
                    'rol' => $this->getRol($session_data['tipousuario_id']),
                    'tipousuario_id' => $session_data['tipousuario_id'],
                    'usuario_imagen' => $session_data['usuario_imagen'],
                    'usuario_email' => $session_data['usuario_email'],
                    'page_title' => 'Admin >> Nuevo Usuario',
                    'thumb' => $session_data['thumb']
                );*/

                $data['usuario'] = $this->Usuario_model->get_usuario($usuario_id);

                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado_activo_inactivo();

                $this->load->model('Tipo_usuario_model');
                $data['all_tipo_usuario'] = $this->Tipo_usuario_model->get_all_tipo_usuario();
                $data['page_title'] = "Usuario";
                $data['_view'] = 'usuario/edit';
                $this->load->view('layouts/main', $data);


            }
    }

    /*
     * Editing a usuario
     */
    function edit($usuario_id)
    {
        if($this->acceso(148)){
        $original_value = $this->db->query("SELECT usuario_login FROM usuario WHERE usuario_id = " . $usuario_id)->row()->usuario_login;

        if ($this->input->post('usuario_login') != $original_value) {
            $is_unique = '|is_unique[usuario.usuario_login]';
        } else {
            $is_unique = '';
        }
        // check if the usuario exists before trying to edit it
        $data['usuario'] = $this->Usuario_model->get_usuario($usuario_id);


        $this->form_validation->set_rules('usuario_nombre', 'Usuario Nombre', 'required');
        $this->form_validation->set_rules('usuario_email', 'Usuario Email', 'valid_email');

        $this->form_validation->set_rules('usuario_login', 'usuario_login', 'required|trim|xss_clean' . $is_unique, array('is_unique' => 'Este login de usuario ya existe.'));

        if (isset($data['usuario']['usuario_id'])) {

            if ($this->form_validation->run()) {

                /* *********************INICIO imagen***************************** */
                $foto="";
                    $foto1= $this->input->post('foto');
                if (!empty($_FILES['usuario_imagen']['name']))
                {
                    $this->load->library('image_lib');
                    $config['upload_path'] = './resources/images/usuarios/';
                    $config['allowed_types'] = 'gif|jpeg|jpg|png';
                    $config['max_size'] = 0;
                    $config['max_width'] = 5900;
                    $config['max_height'] = 5900;

                    $new_name = time(); //str_replace(" ", "_", $this->input->post('proveedor_nombre'));
                    $config['file_name'] = $new_name; //.$extencion;
                    $config['file_ext_tolower'] = TRUE;

                    $this->load->library('upload', $config);
                    $this->upload->do_upload('usuario_imagen');

                    $img_data = $this->upload->data();
                    $extension = $img_data['file_ext'];
                    /* ********************INICIO para resize***************************** */
                    if($img_data['file_ext'] == ".jpg" || $img_data['file_ext'] == ".png" || $img_data['file_ext'] == ".jpeg" || $img_data['file_ext'] == ".gif") {
                        $conf['image_library'] = 'gd2';
                        $conf['source_image'] = $img_data['full_path'];
                        $conf['new_image'] = './resources/images/usuarios/';
                        $conf['maintain_ratio'] = TRUE;
                        $conf['create_thumb'] = FALSE;
                        $conf['width'] = 400;
                        $conf['height'] = 300;
                        $this->image_lib->clear();
                        $this->image_lib->initialize($conf);
                        if(!$this->image_lib->resize()){
                            echo $this->image_lib->display_errors('','');
                        }
                    }
                    /* ********************F I N  para resize***************************** */
                    $base_url = explode('/', base_url());
                    //$directorio = base_url().'resources/imagenes/';
                    //$directorio = FCPATH.'resources\images\usuarios\\';
                    $directorio = $_SERVER['DOCUMENT_ROOT'].'/'.$base_url[3].'/resources/images/usuarios/';
                    //$directorio = $_SERVER['DOCUMENT_ROOT'].'/ximpleman_web/resources/images/usuarios/';
                    if(isset($foto1) && !empty($foto1)){
                      if(file_exists($directorio.$foto1)){
                          unlink($directorio.$foto1);
                          $mimagenthumb = "thumb_".$foto1;
                          //$mimagenthumb = str_replace(".", "_thumb.", $foto1);
                          unlink($directorio.$mimagenthumb);
                      }
                  }
                    $confi['image_library'] = 'gd2';
                    $confi['source_image'] = './resources/images/usuarios/'.$new_name.$extension;
                    $confi['new_image'] = './resources/images/usuarios/'."thumb_".$new_name.$extension;
                    $confi['create_thumb'] = FALSE;
                    $confi['maintain_ratio'] = TRUE;
                    $confi['width'] = 100;
                    $confi['height'] = 100;

                    $this->image_lib->clear();
                    $this->image_lib->initialize($confi);
                    $this->image_lib->resize();

                    $foto = $new_name.$extension;
                }else{
                    $foto = $foto1;
                }
            /* *********************FIN imagen***************************** */
                $params = array(
                    'estado_id' => $this->input->post('estado_id'),
                    'tipousuario_id' => $this->input->post('tipousuario_id'),
                    'usuario_nombre' => $this->input->post('usuario_nombre'),
                    'usuario_email' => $this->input->post('usuario_email'),
                    'usuario_login' => $this->input->post('usuario_login'),
                    'usuario_clave' => $this->input->post('usuario_clave'),
                    'usuario_imagen' => $foto,
                );

                $this->Usuario_model->update_usuario($usuario_id, $params);
                redirect('usuario/index');

            } else {
                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado_activo_inactivo();

                $this->load->model('Tipo_usuario_model');
                $data['all_tipo_usuario'] = $this->Tipo_usuario_model->get_all_tipo_usuario();
                $data['page_title'] = "Usuario";
                $data['_view'] = 'usuario/edit';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The usuario you are trying to edit does not exist.');
        }
    }


    function password($usuario_id)
    {
        // check if the usuario exists before trying to edit it
        if($this->acceso(148)){
        $data['usuario'] = $this->Usuario_model->get_usuario($usuario_id);

        if (isset($data['usuario']['usuario_id'])) {
            $this->load->library('form_validation');


            $this->form_validation->set_rules('usuario_clave', 'Usuario clave', 'required');
            $this->form_validation->set_rules('newpass', 'clave nueva', 'required');
            $this->form_validation->set_rules('confpass', 'confirma clave', 'required');

            if ($this->form_validation->run()) {

                $curr_password = md5($this->input->post('usuario_clave'));
                $new_password = md5($this->input->post('newpass'));
                $conf_password = md5($this->input->post('confpass'));
                $this->load->model('Usuario_model');

                $passwd = $this->Usuario_model->getCurrentPassword($usuario_id);

                if ($passwd->usuario_clave == $curr_password) {
                    if ($new_password == $conf_password) {
                        if ($this->Usuario_model->password($usuario_id, $new_password)) {
                            redirect('usuario/index');
                        } else {
                            $data['_view'] = 'usuario/password';
                            $this->load->view('layouts/main', $data);
                            echo 'fallaste';
                        }
                    } else {
                        $data['mensaje'] = 'Las claves nuevas ingresadas no coinciden.';
                        $data['_view'] = 'usuario/password';
                        $this->load->view('layouts/main', $data);

                    }
                } else {
                    $data['mensaje'] = 'La clave ingresada no coincide con la clave antigua.';
                    $data['_view'] = 'usuario/password';
                    $this->load->view('layouts/main', $data);

                }
            } else {


                echo validation_errors();
                $data['mensaje'] = '';
                $data['page_title'] = "Usuario";
                $data['_view'] = 'usuario/password';
                $this->load->view('layouts/main', $data);
            }
        } else
            show_error('The usuario you are trying to edit does not exist.');
        }
    }

    /*
     * Deleting usuario
     */
    function remove($usuario_id)
    {
        if($this->acceso(148)){
        $usuario = $this->Usuario_model->get_usuario($usuario_id);

        // check if the usuario exists before trying to delete it
        if (isset($usuario['usuario_id'])) {
            $this->Usuario_model->delete_usuario($usuario_id);
            redirect('usuario/index');
        } else
            show_error('The usuario you are trying to delete does not exist.');
        }
    }

    public function getRol($tipousuario_idol)
    {
        $rol = 'ADMIN';
        if ($tipousuario_idol == 1) {
            $rol = 'ADMINISTRADOR';
        }
        if ($tipousuario_idol == 2) {
            $rol = 'CAJERO';
        }
        if ($tipousuario_idol == 3) {
            $rol = 'VENDEDOR';
        }
        if ($tipousuario_idol == 4) {
            $rol = 'PREVENDEDOR';
        }
        return $rol;
    }

    function set()
    {
        if($this->acceso(148)){

                $this->form_validation->set_rules('usuario_nombre', 'Nombre', 'trim|required|min_length[3]|max_length[150]');
                $this->form_validation->set_rules('usuario_email', 'Email', 'trim|required|valid_email|min_length[5]|max_length[250]|callback_hay_email2');//OJO
                $this->form_validation->set_message('hay_email2', 'El email ya se registro, escriba uno diferente');
                $this->form_validation->set_rules('usuario_login', 'Login', 'trim|required|min_length[3]|max_length[50]|callback_hay_login2');//OJO
                $this->form_validation->set_message('hay_login2', 'El login ya se registro, escriba uno diferente');


                $usuario_id = $this->input->post('userid');

                if ($this->form_validation->run() == FALSE) {
                    $data1['user'] = $this->user_model->get_usuario( $usuario_id );


                   /*$data = array(
                        'usuario_login' => $session_data['usuario_login'],
                        'usuario_id' => $session_data['usuario_id'],
                        'usuario_nombre' => $session_data['usuario_nombre'],
                        'rol' => $this->getRol($session_data['tipousuario_id']),
                        'tipousuario_id' => $session_data['tipousuario_id'],
                        'usuario_imagen' => $session_data['usuario_imagen'],
                        'usuario_email' => $session_data['usuario_email'],
                        'page_title' => 'Admin >> Nuevo Usuario',
                        'thumb' => $session_data['thumb']
                    );*/
                    $data['usuario'] = $this->Usuario_model->get_usuario($usuario_id);

                    $this->load->model('Estado_model');
                    $data['all_estado'] = $this->Estado_model->get_all_estado_activo_inactivo();

                    $this->load->model('Tipo_usuario_model');
                    $data['all_tipo_usuario'] = $this->Tipo_usuario_model->get_all_tipo_usuario();
                    $data['page_title'] = "Usuario";
                    $data['_view'] = 'usuario/edit';
                    $this->load->view('layouts/main', $data);

                }
                else {
//ini
                    /* *********************INICIO imagen***************************** */
                $foto="";
                    $foto1= $this->input->post('foto');
                if (!empty($_FILES['usuario_imagen']['name']))
                {
                    $this->load->library('image_lib');
                    $config['upload_path'] = './resources/images/usuarios/';
                    $config['allowed_types'] = 'gif|jpeg|jpg|png';
                    $config['max_size'] = 0;
                    $config['max_width'] = 5900;
                    $config['max_height'] = 5900;

                    $new_name = time(); //str_replace(" ", "_", $this->input->post('proveedor_nombre'));
                    $config['file_name'] = $new_name; //.$extencion;
                    $config['file_ext_tolower'] = TRUE;

                    $this->load->library('upload', $config);
                    $this->upload->do_upload('usuario_imagen');

                    $img_data = $this->upload->data();
                    $extension = $img_data['file_ext'];
                    /* ********************INICIO para resize***************************** */
                    if($img_data['file_ext'] == ".jpg" || $img_data['file_ext'] == ".png" || $img_data['file_ext'] == ".jpeg" || $img_data['file_ext'] == ".gif") {
                        $conf['image_library'] = 'gd2';
                        $conf['source_image'] = $img_data['full_path'];
                        $conf['new_image'] = './resources/images/usuarios/';
                        $conf['maintain_ratio'] = TRUE;
                        $conf['create_thumb'] = FALSE;
                        $conf['width'] = 400;
                        $conf['height'] = 300;
                        $this->image_lib->clear();
                        $this->image_lib->initialize($conf);
                        if(!$this->image_lib->resize()){
                            echo $this->image_lib->display_errors('','');
                        }
                    }
                    /* ********************F I N  para resize***************************** */
                    //$directorio = base_url().'resources/imagenes/';
                    $base_url = explode('/', base_url());
                    //$directorio = FCPATH.'resources\images\usuarios\\';
                    $directorio = $_SERVER['DOCUMENT_ROOT'].'/'.$base_url[3].'/resources/images/usuarios/';
                    //$directorio = $_SERVER['DOCUMENT_ROOT'].'/ximpleman_web/resources/images/usuarios/';
                    if(isset($foto1) && !empty($foto1)){
                      if(file_exists($directorio.$foto1)){
                          unlink($directorio.$foto1);
                          $mimagenthumb = "thumb_".$foto1;
                          //$mimagenthumb = str_replace(".", "_thumb.", $foto1);
                          unlink($directorio.$mimagenthumb);
                      }
                  }
                    $confi['image_library'] = 'gd2';
                    $confi['source_image'] = './resources/images/usuarios/'.$new_name.$extension;
                    $confi['new_image'] = './resources/images/usuarios/'."thumb_".$new_name.$extension;
                    $confi['create_thumb'] = FALSE;
                    $confi['maintain_ratio'] = TRUE;
                    $confi['width'] = 100;
                    $confi['height'] = 100;

                    $this->image_lib->clear();
                    $this->image_lib->initialize($confi);
                    $this->image_lib->resize();

                    $foto = $new_name.$extension;
                }else{
                    $foto = $foto1;
                }
            /* *********************FIN imagen***************************** */

                    $data = array(
                        'usuario_nombre' => $this->input->post('usuario_nombre'),
                        'usuario_email' => $this->input->post('usuario_email'),
                        'usuario_imagen' => $foto,
                        'usuario_login' => $this->input->post('usuario_login'),
                        'estado_id' => $this->input->post('estado_id'),
                        'tipousuario_id' => $this->input->post('tipousuario_id')
                    );

                    if (!$this->user_model->update_usuario($data, $usuario_id)) {

                        $this->session->set_flashdata('msg',
                            '<div class="alert alert-success text-center fade in" style="margin-top:18px;">
                                    <a class="close" title="close" aria-label="close" data-dismiss="alert" href="#">×</a>
                                    Usuario Actualizado con <strong>Exito!</strong>
                                </div>');
                        redirect('usuario');

                    } else {
                        // error
                        $this->session->set_flashdata('msg', '<div class="alert alert-danger text-center">Oops! Error.  Intente mas tarde!!!</div>');
                        redirect('usuario');
                    }
                }
            } 
    }

    public function hay_email2($email_field)
    {
        $idu = $this->input->post('userid');
        if ($this->user_model->email_repeat2($email_field, $idu)) {
            return FALSE;
        } else {
            return TRUE;
        }
    }

    public function hay_login2($login_field)
    {
        $idu = $this->input->post('userid');
        if ($this->user_model->login_repeat2($login_field, $idu)) {
            return FALSE;
        } else {
            return TRUE;
        }
    }

}
