<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Promocion extends CI_Controller{
    
    private $session_data = "";
    private $sistema;

    function __construct()
    {
        parent::__construct();
        $this->load->model('Promocion_model');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
        $this->load->model('Sistema_model');
        $this->sistema = $this->Sistema_model->get_sistema();
        
    }
    /* *****Funcion que verifica el acceso al sistema**** */
    private function acceso($id_rol){
        
        $data['sistema'] = $this->sistema;
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
        
    }
    /*
     * Listing of promocion
     */  
    function index()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(155)){
            $params['limit'] = RECORDS_PER_PAGE; 
            $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

            $config = $this->config->item('pagination');
            $config['base_url'] = site_url('promocion/index?');
            $config['total_rows'] = $this->Promocion_model->get_all_promocion_count();
            $this->pagination->initialize($config);

            $data['promocion'] = $this->Promocion_model->get_all_promocion($params);
            $data['page_title'] = "Promocion";
            $data['_view'] = 'promocion/index';
            $this->load->view('layouts/main',$data);
        }
    }

    function nomproducto($producto)
    {
            $data['sistema'] = $this->sistema;
            $sql="SELECT producto_nombre, producto_precio FROM producto WHERE producto_id=".$producto." ";
            $nombre=$this->db->query($sql)->row_array();
            echo json_encode($nombre);
    }
    
    /*
     * Adding a new promocion
     */
    function add()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(155)){
            
            $this->load->library('form_validation');
            $this->form_validation->set_rules('promocion_titulo','Promocion Titulo','required');
            $this->form_validation->set_rules('promocion_cantidad','Promocion Cantidad','required');
            $this->form_validation->set_rules('promocion_preciototal','Promocion Preciototal','required');
            if($this->form_validation->run())     
            {
                //$fecha = date("Y-m-d");
                //$estado_id = 1;
//                $params = array(
//                    'producto_id' => $this->input->post('producto_id'),
//                    'estado_id' => $estado_id,
//                    'promocion_titulo' => $this->input->post('promocion_titulo'),
//                    'promocion_cantidad' => $this->input->post('promocion_cantidad'),
//                    'promocion_preciototal' => $this->input->post('promocion_preciototal'),
//                    'promocion_descripcion' => $this->input->post('promocion_descripcion'),
//                    'promocion_fecha' => $fecha,
//                );

                $params = array(
                    'estado_id' => $this->input->post('estado_id'),
                    'producto_id' => $this->input->post('producto_id'),
                    'promocion_titulo' => $this->input->post('promocion_titulo'),
                    'promocion_cantidad' => $this->input->post('promocion_cantidad'),
                    'promocion_preciototal' => $this->input->post('promocion_preciototal'),
                    'promocion_fecha' => $this->input->post('promocion_fecha'),
                    'promocion_descripcion' => $this->input->post('promocion_descripcion'),
                );                
                
                
                $promocion_id = $this->Promocion_model->add_promocion($params);
                redirect('promocion/edit/'.$promocion_id);
            }
            else
            {
                $this->load->model('Producto_model');
                $data['all_producto'] = $this->Producto_model->get_busqueda_productos_all();
                
                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_tipo_estado(1);
                
                $data['page_title'] = "Promocion";
                $data['_view'] = 'promocion/add';
                $this->load->view('layouts/main',$data);
            }
        }
    }  

    /*
     * Editing a promocion
     */
    function edit($promocion_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(155)){
            // check if the promocion exists before trying to edit it
            $data['promocion'] = $this->Promocion_model->get_promocion($promocion_id);
            $data['detalle_promocion'] = $this->Promocion_model->get_detalle_promocion($promocion_id);

            if(isset($data['promocion']['promocion_id']))
            {
                $this->load->library('form_validation');

                $this->form_validation->set_rules('promocion_titulo','Promocion Titulo','required');
                $this->form_validation->set_rules('promocion_cantidad','Promocion Cantidad','required');
                $this->form_validation->set_rules('promocion_preciototal','Promocion Preciototal','required');

                if($this->form_validation->run())     
                {   
                    
                    if($this->input->post('promocion_total_final')>0)
                        $preciototal = $this->input->post('promocion_total_final');
                    else
                        $preciototal = $this->input->post('promocion_preciototal');
                    
                    $params = array(
                        'estado_id' => $this->input->post('estado_id'),
                        //'producto_id' => $this->input->post('producto_id'),
                        'promocion_titulo' => $this->input->post('promocion_titulo'),
                        'promocion_cantidad' => $this->input->post('promocion_cantidad'),
                        'promocion_preciototal' => $preciototal,
                        'promocion_fecha' => $this->input->post('promocion_fecha'),
                        'promocion_descripcion' => $this->input->post('promocion_descripcion'),
                    );

                    $this->Promocion_model->update_promocion($promocion_id,$params);            
                    redirect('promocion/index');
                    }
                    else
                    {
                        $this->load->model('Producto_model');
                        $data['all_producto'] = $this->Producto_model->get_busqueda_productos_all();

                        $this->load->model('Estado_model');
                        $data['all_estado'] = $this->Estado_model->get_estado_tipo(1);
                        $data['page_title'] = "Promocion";
                        $data['_view'] = 'promocion/edit';
                        $this->load->view('layouts/main',$data);
                    }
            }
            else
                show_error('The promocion you are trying to edit does not exist.');
        }
    } 

    /*
     * Deleting promocion
     */
    function remove($promocion_id)
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(155)){
            $promocion = $this->Promocion_model->get_promocion($promocion_id);

            // check if the promocion exists before trying to delete it
            if(isset($promocion['promocion_id']))
            {
                $this->Promocion_model->delete_promocion($promocion_id);
                redirect('promocion/index');
            }
            else
                show_error('The promocion you are trying to delete does not exist.');
        }
    }

    /*
     * registrar producto al detalle
     */
    function registrar_detalle()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(155)){
            $cantidad = $this->input->post("cantidad");
            $producto_id = $this->input->post("producto_id");
            $precio = $this->input->post("precio");
            $promocion_id = $this->input->post("promocion_id");
            
            $sql = "insert into detalle_promocion(detallepromo_cantidad,detallepromo_precio,producto_id,promocion_id) values ".
                   "(".$cantidad.",".$precio.",".$producto_id.",".$promocion_id.")";
                    
            $this->Promocion_model->ejecutar($sql);
            
            echo json_encode(true);
            
        }
    }
    
    /*
     * registrar producto al detalle
     */
    function buscar_detallepromocion()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(155)){
            
            $detallepromo_id = $this->input->post("detallepromo_id");
            $this->load->model('Detalle_promocion_model');
            $datos = $this->Detalle_promocion_model->get_detalle_promocion($detallepromo_id);
            echo json_encode($datos);
        }
    }
    /*
     * registrar producto al detalle
     */
    function modificar_detallepromocion()
    {
        $data['sistema'] = $this->sistema;
        if($this->acceso(155)){
            $this->load->library('form_validation');
            $this->form_validation->set_rules('detallepromo_cantidad','Cantidad','trim|numeric|required', array('required' => 'Este Campo no debe ser vacio'));
            $this->form_validation->set_rules('detallepromo_precio','Precio','trim|numeric|required', array('required' => 'Este Campo no debe ser vacio'));
            if($this->form_validation->run())     
            {
                $detallepromo_id = $this->input->post("detallepromo_id");
                $params = array(
                    'detallepromo_cantidad' => $this->input->post('detallepromo_cantidad'),
                    'detallepromo_precio' => $this->input->post('detallepromo_precio'),
                );
                $this->load->model('Detalle_promocion_model');
                $this->Detalle_promocion_model->update_detalle_promocion($detallepromo_id, $params);
                echo json_encode("ok");
            }else{
                echo json_encode("no");
            }
            
        }
    }
    
}
