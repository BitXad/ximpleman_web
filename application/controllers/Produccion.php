<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Produccion extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Produccion_model');
        $this->session_data = $this->session->userdata('logged_in');
    } 

    /*
     * Listing of produccion
     */
    function index()
    {
        $data['produccion'] = $this->Produccion_model->get_all_produccion();
        
        $data['_view'] = 'produccion/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new produccion
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'produccion_numeroorden' => $this->input->post('produccion_numeroorden'),
				'formula_id' => $this->input->post('formula_id'),
				'usuario_id' => $this->input->post('usuario_id'),
				'produccion_fecha' => $this->input->post('produccion_fecha'),
				'produccion_hora' => $this->input->post('produccion_hora'),
				'produccion_unidad' => $this->input->post('produccion_unidad'),
				'produccion_cantidad' => $this->input->post('produccion_cantidad'),
				'produccion_total' => $this->input->post('produccion_total'),
				'produccion_costounidad' => $this->input->post('produccion_costounidad'),
				'produccion_preciounidad' => $this->input->post('produccion_preciounidad'),
            );
            
            $produccion_id = $this->Produccion_model->add_produccion($params);
            redirect('produccion/index');
        }
        else
        {			$data['all_produccion'] = $this->Produccion_model->get_all_produccion();

			$this->load->model('Formula_model');
			$data['all_formula'] = $this->Formula_model->get_all_formula();

			$this->load->model('Usuario_model');
			$data['all_usuario'] = $this->Usuario_model->get_all_usuario();
            
            $data['_view'] = 'produccion/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a produccion
     */
    function edit($produccion_id)
    {   
        // check if the produccion exists before trying to edit it
        $data['produccion'] = $this->Produccion_model->get_produccion($produccion_id);
        
        if(isset($data['produccion']['produccion_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'produccion_numeroorden' => $this->input->post('produccion_numeroorden'),
					'formula_id' => $this->input->post('formula_id'),
					'usuario_id' => $this->input->post('usuario_id'),
					'produccion_fecha' => $this->input->post('produccion_fecha'),
					'produccion_hora' => $this->input->post('produccion_hora'),
					'produccion_unidad' => $this->input->post('produccion_unidad'),
					'produccion_cantidad' => $this->input->post('produccion_cantidad'),
					'produccion_total' => $this->input->post('produccion_total'),
					'produccion_costounidad' => $this->input->post('produccion_costounidad'),
					'produccion_preciounidad' => $this->input->post('produccion_preciounidad'),
                );

                $this->Produccion_model->update_produccion($produccion_id,$params);            
                redirect('produccion/index');
            }
            else
            {				$data['all_produccion'] = $this->Produccion_model->get_all_produccion();

				$this->load->model('Formula_model');
				$data['all_formula'] = $this->Formula_model->get_all_formula();

				$this->load->model('Usuario_model');
				$data['all_usuario'] = $this->Usuario_model->get_all_usuario();

                $data['_view'] = 'produccion/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The produccion you are trying to edit does not exist.');
    } 

    /*
     * Deleting produccion
     */
    function remove($produccion_id)
    {
        $produccion = $this->Produccion_model->get_produccion($produccion_id);

        // check if the produccion exists before trying to delete it
        if(isset($produccion['produccion_id']))
        {
            $this->Produccion_model->delete_produccion($produccion_id);
            redirect('produccion/index');
        }
        else
            show_error('The produccion you are trying to delete does not exist.');
    }
    
    function producir()
    {
        $this->load->model('Formula_model');
        $data['all_formula'] = $this->Formula_model->get_all_formula();
        
        $data['_view'] = 'produccion/producir';
        $this->load->view('layouts/main',$data);
    }
    /* busca insumos de una formula */
    function buscardetalleformula()
    {
        //if($this->acceso(118)){
            if ($this->input->is_ajax_request()) {
                $formula_id = $this->input->post('formula_id');
                $this->load->model('Detalle_formula_model');
                $datos = $this->Detalle_formula_model->get_all_detalles_deuna_formula($formula_id);
                echo json_encode($datos);
            }   
            else
            {                 
                show_404();
            }
        //}
    }
    
    /* verifica que la cantidad de insumos exista en Inventario(Almacen) */
    function verificar_existencia()
    {
        //if($this->acceso(118)){
            if ($this->input->is_ajax_request()) {
                $verif_existencia = $this->input->post('verif_existencia');
                $this->load->model('Inventario_model');
                $cadena =array();
                foreach ($verif_existencia as $verif) {
                    $prod_inv = $this->Inventario_model->get_productoinventario($verif["producto_id"]);
                    if($verif["cantidad"] > $prod_inv['existencia']){
                       $cadena[] = array("producto_nombre" => $prod_inv['producto_nombre'], "existencia" => $prod_inv['existencia'], "falta" =>$verif["cantidad"]-$prod_inv['existencia'], "cantidad" => $verif["cantidad"]);
                    }
                }
                echo json_encode($cadena);
            }   
            else
            {                 
                show_404();
            }
        //}
    }
    
    /* Funcion que hace la salida(venta) de los insumos;
     * y el registro (en compras) del producto producido */
    function registrar_productoproducido()
    {
        //if($this->acceso(118)){
            if ($this->input->is_ajax_request()) {
                $formula_id = $this->input->post('formula_id');
                $usuario_id = $this->session_data['usuario_id'];
                $produccion_fecha = date("Y-m-d");
                $produccion_hora = date("H:i:s");
                
                $this->load->model('Parametro_model');
                $parametro = $this->Parametro_model->get_parametro(1);
                $produccion_numeroorden = $parametro['parametro_numordenproduccion']+1;
                $produccion_total = $this->input->post('formula_cantidad')*$this->input->post('formula_preciounidad');
                $params = array(
                    'formula_id' => $formula_id,
                    'usuario_id' => $usuario_id,
                    'produccion_numeroorden' => $produccion_numeroorden,
                    'produccion_fecha' => $produccion_fecha,
                    'produccion_hora' => $produccion_hora,
                    'produccion_unidad' => $this->input->post('formula_unidad'),
                    'produccion_cantidad' => $this->input->post('formula_cantidad'),
                    'produccion_total' => $produccion_total,
                    'produccion_costounidad' => $this->input->post('formula_costounidad'),
                    'produccion_preciounidad' => $this->input->post('formula_preciounidad'),
                );
                $produccion_id = $this->Produccion_model->add_produccion($params);
                
                $paramsp = array(
                    'parametro_numordenproduccion' => $produccion_numeroorden,
                );
                $this->Parametro_model->update_parametro($parametro['parametro_id'],$paramsp);
                
                $this->load->model('Detalle_formula_model');
                $datos = $this->Detalle_formula_model->get_all_detalles_deuna_formula($formula_id);
                echo json_encode($datos);
            }
            else
            {                 
                show_404();
            }
        //}
    }
    
}
