<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Moneda extends CI_Controller{
    
    private $sistema;
    private $parametros;
    
    function __construct()
    {
        parent::__construct();
        
        $this->load->model('Moneda_model');
        $this->load->model('Parametro_model');
        $this->load->model('Sistema_model');
        
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
        $this->sistema = $this->Sistema_model->get_sistema();
        $parametro = $this->Parametro_model->get_parametros();
        $this->parametros = $parametro[0];
        
    }
    
    private function acceso($id_rol){
    	
        $data['parametro'] =  $this->parametros;
        $data['sistema'] = $this->sistema;
        
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    } 

    /*
     * Listing of moneda
     */
    function index()
    {
        $data['sistema'] = $this->sistema;
        $data['parametro'] =  $this->parametros;
        
        if($this->acceso(124)){
            
            $params['limit'] = RECORDS_PER_PAGE; 
            $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;

            $config = $this->config->item('pagination');
            $config['base_url'] = site_url('moneda/index?');
            $config['total_rows'] = $this->Moneda_model->get_all_moneda_count();
            $this->pagination->initialize($config);
            $data['moneda'] = $this->Moneda_model->get_moneda(2); //Obtener moneda extragera
            $data['monedas'] = $this->Moneda_model->get_all_moneda($params);
            $data['page_title'] = "Moneda";
            $data['_view'] = 'moneda/index';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Adding a new moneda
     */
    function add()
    {
        $data['parametro'] =  $this->parametros;
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(124)){
            $this->load->library('form_validation');

            $this->form_validation->set_rules('moneda_descripcion','Moneda Descripcion','required');
            if($this->form_validation->run())     
            {
                $estado = 1;
                $params = array(
                    'estado_id' => $estado,
                    'moneda_descripcion' => $this->input->post('moneda_descripcion'),
                    'moneda_tc' => $this->input->post('moneda_tc'),
                );

                $moneda_id = $this->Moneda_model->add_moneda($params);
                redirect('moneda/index');
            }
            else
            {
                $data['page_title'] = "Moneda";
                $data['_view'] = 'moneda/add';
                $this->load->view('layouts/main',$data);
            }
        }  
    }

    /*
     * Editing a moneda
     */
    function edit($moneda_id)
    {  
        $data['parametro'] =  $this->parametros;
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(124)){ 
            // check if the moneda exists before trying to edit it
            $data['moneda'] = $this->Moneda_model->get_moneda($moneda_id);

            if(isset($data['moneda']['moneda_id']))
            {
                $this->load->library('form_validation');

                            $this->form_validation->set_rules('moneda_descripcion','Moneda Descripcion','required');

                            if($this->form_validation->run())     
                {   
                    $params = array(
                            'estado_id' => $this->input->post('estado_id'),
                            'moneda_descripcion' => $this->input->post('moneda_descripcion'),
                            'moneda_tc' => $this->input->post('moneda_tc'),
                    );

                    $this->Moneda_model->update_moneda($moneda_id,$params);            
                    redirect('moneda/index');
                }
                else
                {
                    $this->load->model('Estado_model');
                    $data['all_estado'] = $this->Estado_model->get_tipo_estado(1);
                    $data['page_title'] = "Moneda";
                    $data['_view'] = 'moneda/edit';
                    $this->load->view('layouts/main',$data);
                }
            }
            else
                show_error('The moneda you are trying to edit does not exist.');
        } 
    }

    /*
     * Deleting moneda
     */
    function remove($moneda_id)
    {
        $data['parametro'] =  $this->parametros;
        $data['sistema'] = $this->sistema;
        
        if($this->acceso(124)){
        $moneda = $this->Moneda_model->get_moneda($moneda_id);

        // check if the moneda exists before trying to delete it
        if(isset($moneda['moneda_id']))
        {
            $this->Moneda_model->delete_moneda($moneda_id);
            redirect('moneda/index');
        }
        else
            show_error('The moneda you are trying to delete does not exist.');
    }
}
    
}
