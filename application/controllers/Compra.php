<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Compra extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Compra_model');
        $this->load->model('Producto_model');
        //$this->load->model('Inventario_model');
        $this->load->model('Estado_model');
        $this->load->model('Tipo_transaccion_model');
        $this->load->model('Empresa_model');
        $this->load->model('Parametro_model');
        $this->load->helper('numeros');  
    } 

    
      public function boucher($compra_id){

      if ($this->session->userdata('logged_in')) {
            $session_data = $this->session->userdata('logged_in');
            if($session_data['tipousuario_id']==1) {
                $usuario_id = $session_data['usuario_id'];  
$data = array(
                    'page_title' => 'Admin >> Mi Cuenta'
                );
         $this->load->model('Empresa_model');
        $data['empresa'] = $this->Empresa_model->get_empresa(1);
       $data['compra'] = $this->Compra_model->join_compras($compra_id);
        $this->load->model('detalle_compra_model');
                $data['detalle_compra'] = $this->Compra_model->get_detalle_compra($compra_id);
          $data['_view'] = 'compra/boucher';
            $this->load->view('layouts/main',$data);
  
      
            }
            else{
                redirect('alerta');
            }
        } else {
            redirect('', 'refresh');
        }
       
    } 
    /*
     * Listing of compra
     */
    function index()
     {
         if ($this->session->userdata('logged_in')) {
            $session_data = $this->session->userdata('logged_in');
            if($session_data['tipousuario_id']==1) {
                $usuario_id = $session_data['usuario_id'];
              $data = array(
                    'page_title' => 'Admin >> Mi Cuenta'
                );
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
       // $config = $this->config->item('pagination');
        //$config['base_url'] = site_url('compra/index?');
       // $config['total_rows'] = $this->Compra_model->get_all_compra_count();
        //$this->pagination->initialize($config);

        $filtro = $this->input->post('filtro');
        
        if ($filtro == null){
            $data['compra'] = $this->Compra_model->get_all_compra($params);
        }
        else{
            $data['compra'] = $this->Compra_model->fechacompras($filtro);            
        }
        $data['parametro'] = $this->Parametro_model->get_parametro(1);
        $data['comprasn'] = $this->Compra_model->get_compra_sin_nombre($usuario_id);
        $data['tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
        $data['estado'] = $this->Estado_model->get_tipo_estado(1);
        $data['_view'] = 'compra/index1';
        $this->load->view('layouts/main',$data);
            }
            else{
                redirect('alerta');
            }
        } else {
            redirect('', 'refresh');
        }
    }
    
    function reportes()
     {
        $usuario_id = 1;
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
       // $config = $this->config->item('pagination');
        //$config['base_url'] = site_url('compra/index?');
       // $config['total_rows'] = $this->Compra_model->get_all_compra_count();
        //$this->pagination->initialize($config);
        $filtro = $this->input->post('filtro');
        
        if ($filtro == null){
            $data['compra'] = $this->Compra_model->get_all_compra($params);
        }
        else{
            $data['compra'] = $this->Compra_model->fechacompras($filtro);            
        }

        $data['empresa'] = $this->Empresa_model->get_empresa(1);
        $data['tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();
        $data['estado'] = $this->Estado_model->get_tipo_estado(1);
        $data['_view'] = 'compra/reportesCompra';
        $this->load->view('layouts/main',$data);
    }
    function repoProveedor()
     {
        $usuario_id = 1;
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
       // $config = $this->config->item('pagination');
        //$config['base_url'] = site_url('compra/index?');
       // $config['total_rows'] = $this->Compra_model->get_all_compra_count();
        //$this->pagination->initialize($config);
        $filtro = $this->input->post('filtro');
        
        if ($filtro == null){
            $data['compra'] = $this->Compra_model->get_all_compra($params);
        }
        else{
            $data['compra'] = $this->Compra_model->fechacompras($filtro);            
        }

       $this->load->model('Proveedor_model');
        $data['comprasn'] = $this->Compra_model->get_compra_sin_nombre($usuario_id);
        $data['empresa'] = $this->Empresa_model->get_empresa(1);
        $data['proveedor'] = $this->Proveedor_model->get_all_proveedor();
        $data['_view'] = 'compra/compraProveedor';
        $this->load->view('layouts/main',$data);
    }
    function repoProducto()
     {
        $usuario_id = 1;
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
       // $this->load->model('Inventario_model');
       // $config = $this->config->item('pagination');
        //$config['base_url'] = site_url('compra/index?');
       // $config['total_rows'] = $this->Compra_model->get_all_compra_count();
        //$this->pagination->initialize($config);
        $filtro = $this->input->post('filtro');
        
        if ($filtro == null){
            $data['compra'] = $this->Compra_model->get_all_compra($params);
        }
        else{
            $data['compra'] = $this->Compra_model->fechacompras($filtro);            
        }
        $data['inventario'] = $this->Producto_model->get_all_productos(); 
        $this->load->model('Proveedor_model');
        $data['comprasn'] = $this->Compra_model->get_compra_sin_nombre($usuario_id);
        $data['empresa'] = $this->Empresa_model->get_empresa(1);
        $data['proveedor'] = $this->Proveedor_model->get_all_proveedor();
        $data['_view'] = 'compra/compraProducto';
        $this->load->view('layouts/main',$data);
    }


    function buscarprove()
    {
         

        if ($this->input->is_ajax_request()) {
            
            $parametro = $this->input->post('parametro');   
            
            if ($parametro!=""){
            $datos = $this->Compra_model->buscarprovedo($parametro);            
            //$datos = $this->Inventario_model->get_inventario_bloque();
            echo json_encode($datos);
            }
            else echo json_encode(null);
        }
        else
        {                 
            show_404();
        }              
    }

     function buscarfecha()
    {
         
        if ($this->input->is_ajax_request()) {
            
            $filtro = $this->input->post('filtro');
            
           if ($filtro == null){
            $result = $this->Compra_model->get_all_compra($params);
            }
            else{
            $result = $this->Compra_model->fechacompras($filtro);            
            }
           echo json_encode($result);
            
        }
        else
        {                 
                    show_404();
        }          
    }
    
     function buscarrepofecha()
    {
         
         $usuario_id = 1;

        if ($this->input->is_ajax_request()) {
            
            $filtro = $this->input->post('filtro');
            
           if ($filtro == null){
           // $result = $this->Compra_model->get_all_compra($params);
            }
            else{
            $result = $this->Compra_model->fechacompra($filtro);            
            }
           echo json_encode($result);
            
        }
        else
        {                 
                    show_404();
        }          
    }
    
    
     function anula()
     {
       if ($this->session->userdata('logged_in')) {
            $session_data = $this->session->userdata('logged_in');
            if($session_data['tipousuario_id']==1) {
                $usuario_id = $session_data['usuario_id'];
        $bandera = 1;
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('compra/index?');
        $config['total_rows'] = $this->Compra_model->get_all_compra_count();
        $this->pagination->initialize($config);

        $data['compra'] = $this->Compra_model->get_all_compra($params);
        $data['comprasn'] = $this->Compra_model->get_compra_sin_nombre($usuario_id);
        

        
        $data['_view'] = 'compra/anula';
        $this->load->view('layouts/main',$data);
     }
            else{
                redirect('alerta');
            }
        } else {
            redirect('', 'refresh');
        }
    }

     function crearcompra()
    {
        if ($this->session->userdata('logged_in')) {
            $session_data = $this->session->userdata('logged_in');
            if($session_data['tipousuario_id']==1) {
                $usuario_id = $session_data['usuario_id'];
        $bandera = 0;
        //Registrar Compra
        $compra_id = $this->Compra_model->crear_compra($usuario_id);        
        redirect('compra/edit/'.$compra_id.'/'.$bandera);
    }
            else{
                redirect('alerta');
            }
        } else {
            redirect('', 'refresh');
        }
    }

     function buscarcompra()
{
        $usuario_id = 1;

        if ($this->input->is_ajax_request()) {
            
            $parametro = $this->input->post('parametro');   
            
            if ($parametro!=""){
            $datos = $this->Inventario_model->get_inventario_coti($parametro);            
            //$datos = $this->Inventario_model->get_inventario_bloque();
            echo json_encode($datos);
            }
            else echo json_encode(null);
        }
        else
        {                 
            show_404();
        }              
}
    /*
     * Adding a new compra
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
                'estado_id' => $this->input->post('estado_id'),
                'tipotrans_id' => $this->input->post('tipotrans_id'),
                'usuario_id' => $this->input->post('usuario_id'),
                'moneda_id' => $this->input->post('moneda_id'),
                'proveedor_id' => $this->input->post('proveedor_id'),
                'forma_id' => $this->input->post('forma_id'),
                'compra_fecha' => $this->input->post('compra_fecha'),
                'compra_hora' => $this->input->post('compra_hora'),
                'compra_subtotal' => $this->input->post('compra_subtotal'),
                'compra_descuento' => $this->input->post('compra_descuento'),
                'compra_descglobal' => $this->input->post('compra_descglobal'),
                'compra_total' => $this->input->post('compra_total'),
                'compra_efectivo' => $this->input->post('compra_efectivo'),
                'compra_cambio' => $this->input->post('compra_cambio'),
                'compra_glosa' => $this->input->post('compra_glosa'),
                'compra_tipocambio' => $this->input->post('compra_tipocambio'),
                'compra_chofer' => $this->input->post('compra_chofer'),
                'compra_placamovil' => $this->input->post('compra_placamovil'),
                'compra_fechallegada' => $this->input->post('compra_fechallegada'),
                'compra_horallegada' => $this->input->post('compra_horallegada'),
                'compra_numdoc' => $this->input->post('compra_numdoc'),
                'documento_respaldo_id' => $this->input->post('documento_respaldo_id'),
            );
            
            $compra_id = $this->Compra_model->add_compra($params);
            redirect('compra/index');
        }
        else
        {
            $data['compra'] = $this->Compra_model->get_all_compra($params);
            $data['proveedor'] = $this->Compra_model->get_all_proveedor($usuario_id);

            $this->load->model('Estado_model');
            $data['all_estado'] = $this->Estado_model->get_all_estado();

            $this->load->model('Tipo_transaccion_model');
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();

            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario();

            $this->load->model('Moneda_model');
            $data['all_moneda'] = $this->Moneda_model->get_all_moneda();

            $this->load->model('Proveedor_model');
            $data['all_proveedor'] = $this->Proveedor_model->get_all_proveedor();

            $this->load->model('Forma_pago_model');
            $data['all_forma_pago'] = $this->Forma_pago_model->get_all_forma_pago();

            $this->load->model('Detalle_compra_model');
            $data['all_detalle_compra'] = $this->Detalle_compra_model->get_all_detalle_compra();
            
            $data['_view'] = 'compra/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a compra
     */
    function edit($compra_id,$bandera)
    {   

        if ($this->session->userdata('logged_in')) {
            $session_data = $this->session->userdata('logged_in');
            if($session_data['tipousuario_id']==1) {
                $usuario_id = $session_data['usuario_id'];      
               $data = array(
                    'page_title' => 'Admin >> Mi Cuenta'
                );
        // check if the compra exists before trying to edit it
        $data['compra'] = $this->Compra_model->get_compra($compra_id);
        $compra = $this->Compra_model->get_proveedor_id($compra_id);
        $proveedor_id = $compra[0]['proveedor_id'];
       
        $cargar_aux = "INSERT INTO detalle_compra_aux
                            (compra_id,
                            moneda_id,
                            producto_id,
                            detallecomp_codigo,
                            detallecomp_cantidad,
                            detallecomp_unidad,
                            detallecomp_costo,
                            detallecomp_precio,
                            detallecomp_subtotal,
                            detallecomp_descuento,
                            detallecomp_total,
                            detallecomp_descglobal,
                            detallecomp_fechavencimiento,
                            detallecomp_tipocambio,
                            cambio_id
                            )
                            (SELECT 
                            compra_id,
                            moneda_id,
                            producto_id,
                            detallecomp_codigo,
                            detallecomp_cantidad,
                            detallecomp_unidad,
                            detallecomp_costo,
                            detallecomp_precio,
                            detallecomp_subtotal,
                            detallecomp_descuento,
                            detallecomp_total,
                            detallecomp_descglobal,
                            detallecomp_fechavencimiento,
                            detallecomp_tipocambio,
                            cambio_id
                            FROM 
                            detalle_compra
                            WHERE 
                            detalle_compra.compra_id = ".$compra_id.")"; 
            $this->db->query($cargar_aux);                
            $borrar_detalle = "DELETE from detalle_compra WHERE  detalle_compra.compra_id = ".$compra_id." "; 
            $this->db->query($borrar_detalle);  
            if($proveedor_id==0)     
            {   
                 $data['compra'] = $this->Compra_model->get_compra_proveedor($compra_id); 
               /* $data['compra'] = $this->Compra_model->get_all_compra($params);*/

                $data['compra_id'] = $compra_id;
                $data['compra'] = $this->Compra_model->get_compra($compra_id);
                $data['bandera'] = $bandera;
               /* $data['proveedor'] = $this->Compra_model->get_all_proveedor($usuario_id);*/

                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado();

                $this->load->model('Tipo_transaccion_model');
                $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();

                $this->load->model('Usuario_model');
                $data['all_usuario'] = $this->Usuario_model->get_all_usuario();

                $this->load->model('Moneda_model');
                $data['all_moneda'] = $this->Moneda_model->get_all_moneda();

                $this->load->model('Proveedor_model');
                $data['all_proveedor'] = $this->Proveedor_model->get_all_proveedor();

                $this->load->model('Forma_pago_model');
                $data['all_forma_pago'] = $this->Forma_pago_model->get_all_forma_pago();

                $this->load->model('Detalle_compra_model');
                $data['detalle_compra'] = $this->Compra_model->get_detalle_compra_aux($compra_id);

              
            $this->load->model('Producto_model');
            $data['inventario'] = $this->Producto_model->get_all_productos();  
            //$this->load->model('Inventario_model');
            //$data['inventario'] = $this->Inventario_model->get_all_inventario();
                $this->load->model('Documento_respaldo_model');
                 $data['all_documento_respaldo'] = $this->Documento_respaldo_model->get_all_documento_respaldo(); 

                 $this->load->model('Categoria_producto_model');
            $data['all_categoria_producto'] = $this->Categoria_producto_model->get_all_categoria_producto();

            $this->load->model('Presentacion_model');
            $data['all_presentacion'] = $this->Presentacion_model->get_all_presentacion();
           

                $data['_view'] = 'compra/edit';
                $this->load->view('layouts/main',$data);
           
               
            } 
            else
            {
                $data['compra'] = $this->Compra_model->get_compra_proveedor($compra_id); 
               /* $data['compra'] = $this->Compra_model->get_all_compra($params);*/

                $data['compra_id'] = $compra_id;

                $data['bandera'] = $bandera;
               /* $data['proveedor'] = $this->Compra_model->get_all_proveedor($usuario_id);*/

                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado();

                $this->load->model('Tipo_transaccion_model');
                $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();

                $this->load->model('Usuario_model');
                $data['all_usuario'] = $this->Usuario_model->get_all_usuario();

                $this->load->model('Moneda_model');
                $data['all_moneda'] = $this->Moneda_model->get_all_moneda();

                $this->load->model('Proveedor_model');
                $data['all_proveedor'] = $this->Proveedor_model->get_all_proveedor();

                $this->load->model('Forma_pago_model');
                $data['all_forma_pago'] = $this->Forma_pago_model->get_all_forma_pago();

                $this->load->model('Detalle_compra_model');
                $data['detalle_compra'] = $this->Compra_model->get_detalle_compra_aux($compra_id);

                $this->load->model('Producto_model');
            $data['inventario'] = $this->Producto_model->get_all_productos();  
            $this->load->model('Inventario_model');
            //$data['inventario'] = $this->Inventario_model->get_all_inventario();
                
                $this->load->model('Documento_respaldo_model');
                 $data['all_documento_respaldo'] = $this->Documento_respaldo_model->get_all_documento_respaldo(); 

                 $this->load->model('Categoria_producto_model');
            $data['all_categoria_producto'] = $this->Categoria_producto_model->get_all_categoria_producto();

            $this->load->model('Presentacion_model');
            $data['all_presentacion'] = $this->Presentacion_model->get_all_presentacion();
           

                $data['_view'] = 'compra/edit';
                $this->load->view('layouts/main',$data);
            }
     
            }
            else{
                redirect('alerta');
            }
        } else {
            redirect('', 'refresh');
        }
    }

    function anular()
    {
        
       if ($this->session->userdata('logged_in')) {
            $session_data = $this->session->userdata('logged_in');
            if($session_data['tipousuario_id']==1) {
                $usuario_id = $session_data['usuario_id'];  
        $compra_id = $this->input->post('compra_id');
        $vaciar =    "UPDATE inventario i, detalle_compra_aux d
                            SET i.existencia =  i.existencia-d.detallecomp_cantidad 
                            WHERE  d.compra_id = ".$compra_id." 
                            and i.producto_id = d.producto_id ";
                            
             $this->db->query($vaciar);
        $sql = "UPDATE detalle_compra_aux
                SET
                detallecomp_cantidad = 0,               
                detallecomp_descuento = 0,
                detallecomp_subtotal = 0,
                detallecomp_total = 0                       
                WHERE compra_id = ".$compra_id."
                ";

        $this->Compra_model->ejecutar($sql);
        

        $comp = "UPDATE compra
                    SET
                estado_id = 3,
                compra_subtotal = 0,
                compra_descuento = 0,
                compra_descglobal = 0,
                compra_total = 0,
                compra_totalfinal = 0
                WHERE compra_id = ".$compra_id."
                    ";
                    $this->Compra_model->ejecutar($comp);

         redirect('compra/index');
            }
            else{
                redirect('alerta');
            }
        } else {
            redirect('', 'refresh');
        }
    }

    function finalizarcompra($compra_id)
    {
        if ($this->session->userdata('logged_in')) {
            $session_data = $this->session->userdata('logged_in');
            if($session_data['tipousuario_id']==1) {
                $usuario_id = $session_data['usuario_id'];
        $this->load->model('Compra_model');

        $num = $this->Compra_model->numero();
        $maximo = $num[0]['parametro_montomax'];
        $diasgra = $num[0]['parametro_diasgracia'];
        $diapago = $num[0]['parametro_diapago'];
        $periodo = $num[0]['parametro_periododias'];
        $numcuota = $num[0]['parametro_numcuotas'];
        $interes = $num[0]['parametro_interes'];
        $nroDia = date('N');
        $proxima_semana = time() + (7 * 24 * 60 * 60); 
        $proximo_martes = time() + ( ($diasgra-($nroDia-$diapago)) * 24 * 60 * 60 );
        $proximo_martes2 = time() + ( ($diasgra+$periodo-($nroDia-$diapago)) * 24 * 60 * 60 );
        $patron = ($numcuota*0.5) + 0.5;
        if(isset($_POST) && count($_POST) > 0)     
        {   
                   
                $params = array(

                'compra_glosa' => $this->input->post('compra_glosa'),
                'compra_numdoc' => $this->input->post('compra_numdoc'),
                'documento_respaldo_id' => $this->input->post('documento_respaldo_id'),
                'tipotrans_id' => $this->input->post('tipotrans_id'),                       
                'forma_id' => $this->input->post('forma_id'),
                'compra_subtotal' => $this->input->post('compra_subtotal'),
                'compra_descuento' => $this->input->post('compra_descuento'),
                'compra_descglobal' => $this->input->post('compra_descglobal'),
                'compra_total' => $this->input->post('compra_total'),
                'compra_totalfinal' => $this->input->post('compra_totalfinal'),
                'usuario_id' => $usuario_id,
                'compra_fecha' => date('Y-m-d'),
                'compra_hora' => date('H:i:s'),
                'compra_efectivo' => $this->input->post('compra_efectivo'),
                'compra_cambio' => $this->input->post('compra_cambio'),
                'compra_caja' => $this->input->post('compra_caja'),

           );
                
                $fechalimite = $this->input->post('credito_fechalimite');
                $fecha = $this->Compra_model->normalize_date($fechalimite);
                $estado_id = 8;
                $compra_id = $this->input->post('compra_id');
                $credito_monto =  $this->input->post('compra_totalfinal');
                $credito_cuotainicial = $this->input->post('credito_cuotainicial');
                $credito_interesproc = 0;
                $credito_interesmonto = 0;
                $credito_tipointeres = $this->input->post('credito_tipointeres');
                $credito_fecmite = "'".$fecha."'";
                $credito_fecha = "'".date('Y-m-d')."'";               
                $credito_tipo = $this->input->post('credito_tipo');
                $credito_hora = "'".date('H:i:s')."'";      
                $saldo = $credito_monto - $credito_cuotainicial;
                $cuota_total = $saldo;

                $credito_fechalimite = "'".date('Y-m-d', $proximo_martes)."'";
               
                $credito_numpagos = $numcuota;
               
           $this->Compra_model->update_compra($compra_id,$params);

        $vaciar_detalle = "INSERT INTO detalle_compra 
                            (compra_id,
                            moneda_id,
                            producto_id,
                            detallecomp_codigo,
                            detallecomp_cantidad,
                            detallecomp_unidad,
                            detallecomp_costo,
                            detallecomp_precio,
                            detallecomp_subtotal,
                            detallecomp_descuento,
                            detallecomp_total,
                            detallecomp_descglobal,
                            detallecomp_fechavencimiento,
                            detallecomp_tipocambio,
                            cambio_id
                            )
                            (SELECT 
                            ".$compra_id.",
                            moneda_id,
                            producto_id,
                            detallecomp_codigo,
                            detallecomp_cantidad,
                            detallecomp_unidad,
                            detallecomp_costo,
                            detallecomp_precio,
                            detallecomp_subtotal,
                            detallecomp_descuento,
                            detallecomp_total,
                            detallecomp_descglobal,
                            detallecomp_fechavencimiento,
                            detallecomp_tipocambio,
                            cambio_id
                            FROM 
                            detalle_compra_aux
                            WHERE
                            compra_id=".$compra_id.")";
        $this->db->query($vaciar_detalle);
         $eliminar_aux = "DELETE FROM detalle_compra_aux WHERE compra_id=".$compra_id." ";
        $this->db->query($eliminar_aux);
              
    if ($_POST['tipotrans_id']==2) { // tipotrans_id = 2 : CREDITO
        
      

                    $dias_mora = 0;
                    $multa = 0;
                    $descuento = 0;
                    $cancelado = 0;

    if ($maximo == 0){
         $sql = "INSERT INTO credito (estado_id,compra_id,credito_monto,credito_cuotainicial,credito_interesproc,credito_interesmonto,credito_numpagos,credito_tipointeres,credito_fechalimite,credito_fecha,credito_tipo,credito_hora) VALUES (".$estado_id.",".$compra_id.",".$credito_monto.",".$credito_cuotainicial.",".$credito_interesproc.",".$credito_interesmonto.",".$credito_numpagos.",".$credito_tipointeres.",".$credito_fechalimite.",".$credito_fecha.",".$credito_tipo.",".$credito_hora.")"; 
                    $this->db->query($sql);
                    $credito_id = $this->db->insert_id();
              if ($credito_tipointeres==1){
                 $cuota_capital = $credito_monto/$numcuota;
             $fijo = $patron * $credito_monto * ($interes/100/$numcuota);
             $cuota_subtotal = $fijo + $cuota_capital + $dias_mora + $multa;

                $saldo_deudor = $cuota_total;
                $total =  $cuota_subtotal - $descuento;
                 $siguiente= 0;
                for ($i=1; $i <= $numcuota; $i++) { 

                $cuota_numcuota = $i;
                $proximo_martes2 = time() + ( ($diasgra+$siguiente-($nroDia-$diapago)) * 24 * 60 * 60 );
                               $credito_fechalimite = "'".date('Y-m-d', $proximo_martes2)."'";
                  $cuota ="INSERT INTO cuota (credito_id,usuario_id,estado_id,cuota_numcuota,cuota_capital,cuota_interes,cuota_moradias,cuota_multa,cuota_descuento,cuota_cancelado,cuota_total,cuota_subtotal,cuota_fechalimite,cuota_fecha,cuota_saldo,cuota_hora) VALUES (".$credito_id.",".$usuario_id.",".$estado_id.",".$cuota_numcuota.",".$cuota_capital.",".$fijo.",".$dias_mora.",".$multa.",".$descuento.",".$cancelado.",".$total.",".$cuota_subtotal.",".$credito_fechalimite.",".$credito_fecha.",".$saldo_deudor.",".$credito_hora.")";
                $this->db->query($cuota);
                $siguiente = $siguiente+$periodo;
                $saldo_deudor = $cuota_total - $cuota_capital;
                $cuota_total = $saldo_deudor;
                }
              }
                else{
                    
                     $sql = "INSERT INTO credito (estado_id,compra_id,credito_monto,credito_cuotainicial,credito_interesproc,credito_interesmonto,credito_numpagos,credito_tipointeres,credito_fechalimite,credito_fecha,credito_tipo,credito_hora) VALUES (".$estado_id.",".$compra_id.",".$credito_monto.",".$credito_cuotainicial.",".$credito_interesproc.",".$credito_interesmonto.",".$credito_numpagos.",".$credito_tipointeres.",".$credito_fechalimite.",".$credito_fecha.",".$credito_tipo.",".$credito_hora.")"; 
                    $this->db->query($sql);
                    $credito_id = $this->db->insert_id();
                    
                     $cuota_capital = $credito_monto/$numcuota;
                     $saldo_deudor = $cuota_total;
                    
            
                 $siguiente= 0;
                for ($i=1; $i <= $numcuota; $i++) { 
                $variable = $saldo_deudor * ($interes/100);
                $cuota_subtotal = $variable + $cuota_capital + $dias_mora + $multa;
                $cuota_numcuota = $i;
                $total = $cuota_subtotal - $descuento;
                $proximo_martes2 = time() + ( ($diasgra+$siguiente-($nroDia-$diapago)) * 24 * 60 * 60 );
                               $credito_fechalimite = "'".date('Y-m-d', $proximo_martes2)."'";
                 $cuota ="INSERT INTO cuota (credito_id,usuario_id,estado_id,cuota_numcuota,cuota_capital,cuota_interes,cuota_moradias,cuota_multa,cuota_descuento,cuota_cancelado,cuota_total,cuota_subtotal,cuota_fechalimite,cuota_fecha,cuota_saldo,cuota_hora) VALUES (".$credito_id.",".$usuario_id.",".$estado_id.",".$cuota_numcuota.",".$cuota_capital.",".$variable.",".$dias_mora.",".$multa.",".$descuento.",".$cancelado.",".$total.",".$cuota_subtotal.",".$credito_fechalimite.",".$credito_fecha.",".$saldo_deudor.",".$credito_hora.")";
                $this->db->query($cuota);
                $siguiente = $siguiente+$periodo;
                $saldo_deudor = $cuota_total - $cuota_capital;
                
                $cuota_total = $saldo_deudor;
                } 
                }
    } else {
        if ($credito_monto > $maximo){
            $numcuota = 2;
             $credito_numpagos = $numcuota;
             $sql = "INSERT INTO credito (estado_id,compra_id,credito_monto,credito_cuotainicial,credito_interesproc,credito_interesmonto,credito_numpagos,credito_tipointeres,credito_fechalimite,credito_fecha,credito_tipo,credito_hora) VALUES (".$estado_id.",".$compra_id.",".$credito_monto.",".$credito_cuotainicial.",".$credito_interesproc.",".$credito_interesmonto.",".$credito_numpagos.",".$credito_tipointeres.",".$credito_fechalimite.",".$credito_fecha.",".$credito_tipo.",".$credito_hora.")"; 
                    $this->db->query($sql);
                    $credito_id = $this->db->insert_id();
            
                 $cuota_capital = $credito_monto/$numcuota;
             $fijo = $patron * $credito_monto * ($interes/100/$numcuota);
             $cuota_subtotal = $fijo + $cuota_capital + $dias_mora + $multa;;
             $total = $cuota_subtotal - $descuento;
                $saldo_deudor = $cuota_total;
            
                 $siguiente= 0;
                for ($i=1; $i <= $numcuota; $i++) { 

                $cuota_numcuota = $i;
                $proximo_martes2 = time() + ( ($diasgra+$siguiente-($nroDia-$diapago)) * 24 * 60 * 60 );
                               $credito_fechalimite = "'".date('Y-m-d', $proximo_martes2)."'";
                   $cuota ="INSERT INTO cuota (credito_id,usuario_id,estado_id,cuota_numcuota,cuota_capital,cuota_interes,cuota_moradias,cuota_multa,cuota_descuento,cuota_cancelado,cuota_total,cuota_subtotal,cuota_fechalimite,cuota_fecha,cuota_saldo,cuota_hora) VALUES (".$credito_id.",".$usuario_id.",".$estado_id.",".$cuota_numcuota.",".$cuota_capital.",".$fijo.",".$dias_mora.",".$multa.",".$descuento.",".$cancelado.",".$total.",".$cuota_subtotal.",".$credito_fechalimite.",".$credito_fecha.",".$saldo_deudor.",".$credito_hora.")";
                $this->db->query($cuota);
                $siguiente = $siguiente+$periodo;
                $saldo_deudor = $cuota_total - $cuota_capital;
                $cuota_total = $saldo_deudor;
             }
         }
             else{
                  $sql = "INSERT INTO credito (estado_id,compra_id,credito_monto,credito_cuotainicial,credito_interesproc,credito_interesmonto,credito_numpagos,credito_tipointeres,credito_fechalimite,credito_fecha,credito_tipo,credito_hora) VALUES (".$estado_id.",".$compra_id.",".$credito_monto.",".$credito_cuotainicial.",".$credito_interesproc.",".$credito_interesmonto.",".$credito_numpagos.",".$credito_tipointeres.",".$credito_fechalimite.",".$credito_fecha.",".$credito_tipo.",".$credito_hora.")"; 
                    $this->db->query($sql);
                    $credito_id = $this->db->insert_id();
                 $cuota_capital = $credito_monto/$numcuota;
             $fijo = $patron * $credito_monto * ($interes/100/$numcuota);
             $cuota_subtotal = $fijo + $cuota_capital + $dias_mora + $multa;;
             $total = $cuota_subtotal - $descuento;
                $saldo_deudor = $cuota_total;
            
                 $siguiente= 0;
                for ($i=1; $i <= $numcuota; $i++) { 

                $cuota_numcuota = $i;
                $proximo_martes2 = time() + ( ($diasgra+$siguiente-($nroDia-$diapago)) * 24 * 60 * 60 );
                               $credito_fechalimite = "'".date('Y-m-d', $proximo_martes2)."'";
                $cuota ="INSERT INTO cuota (credito_id,usuario_id,estado_id,cuota_numcuota,cuota_capital,cuota_interes,cuota_moradias,cuota_multa,cuota_descuento,cuota_cancelado,cuota_total,cuota_subtotal,cuota_fechalimite,cuota_fecha,cuota_saldo,cuota_hora) VALUES (".$credito_id.",".$usuario_id.",".$estado_id.",".$cuota_numcuota.",".$cuota_capital.",".$fijo.",".$dias_mora.",".$multa.",".$descuento.",".$cancelado.",".$total.",".$cuota_subtotal.",".$credito_fechalimite.",".$credito_fecha.",".$saldo_deudor.",".$credito_hora.")";
                $this->db->query($cuota);
                $siguiente = $siguiente+$periodo;
                $saldo_deudor = $cuota_total - $cuota_capital;
                $cuota_total = $saldo_deudor;
                }
             }
                
}  }
                redirect('compra/index');
      
    }  }
            else{
                redirect('alerta');
            }
        } else {
            redirect('', 'refresh');
        }
    }
    
    function detallecompra()
    {

         if ($this->input->is_ajax_request()) {  
        $compra_id = $this->input->post('compra_id');
        $datos = $this->Compra_model->get_detalle_compra_aux($compra_id);
     if(isset($datos)){
                        echo json_encode($datos);
                    }else echo json_encode(null);
    }
        else
        {                 
                    show_404();
        }          
     
    }
    function ingresarproducto()
    {
       
        
        
        if ($this->input->is_ajax_request()) {
       
        $compra_id = $this->input->post('compra_id');
        $producto_id = $this->input->post('producto_id');
        $cantidad = $this->input->post('cantidad'); 
        $descuento = $this->input->post('descuento'); 
        $producto_costo = $this->input->post('producto_costo');
        $producto_precio = $this->input->post('producto_precio');
        
       $sql = "INSERT into detalle_compra_aux(
                compra_id,
                producto_id,
                detallecomp_codigo,
                detallecomp_unidad,
                detallecomp_costo,
                detallecomp_cantidad,
                detallecomp_precio,
                detallecomp_descuento,
                detallecomp_subtotal,
                detallecomp_total              
                )
                (
                SELECT
                ".$compra_id.",
                producto_id,
                producto_codigo,
                producto_unidad,
                ".$producto_costo.",
                ".$cantidad.",
                ".$producto_precio.",
                ".$descuento.",
                ".$cantidad." * ".$producto_costo.",
                (".$cantidad." * ".$producto_costo.") - ".$descuento."
                
                from producto where producto_id = ".$producto_id."
                )";
        $this->db->query($sql);
        $detalles = $this->db->insert_id();
                $pro = "UPDATE producto
                SET
                      
                producto_costo = ".$producto_costo.",
                producto_precio = ".$producto_precio."
                      
                WHERE producto_id = ".$producto_id."
                ";
                $llenar =    "UPDATE inventario i, detalle_compra_aux d
                            SET i.existencia =  i.existencia+d.detallecomp_cantidad 
                            WHERE  d.compra_id = ".$compra_id." 
                            and i.producto_id = ".$producto_id."
                            and d.detallecomp_id = ".$detalles." ";
                            
             $this->db->query($llenar);
        $this->Compra_model->ejecutar($pro);
        $datos = $this->Compra_model->get_detalle_compra_aux($compra_id);
     if(isset($datos)){
                        echo json_encode($datos);
                    }else echo json_encode(null);
    }
        else
        {                 
                    show_404();
        }          
    }

function updateDetalle()
    {
        
                
        $detallecomp_id = $this->input->post('detallecomp_id');
        $cantidad = $this->input->post('cantidad'); 
        $descuento = $this->input->post('descuento'); 
        $producto_costo = $this->input->post('costo');
        $producto_precio = $this->input->post('precio');   
        $producto_id = $this->input->post('producto_id');    
        $compra_id = $this->input->post('compra_id');

         $vaciar =    "UPDATE inventario i, detalle_compra_aux d
                            SET i.existencia =  i.existencia-d.detallecomp_cantidad 
                            WHERE  d.compra_id = ".$compra_id." 
                            and i.producto_id = d.producto_id ";
                            
             $this->db->query($vaciar);
        
        $sql = "UPDATE detalle_compra_aux
                SET
                
                
                detallecomp_costo = ".$producto_costo.",
                detallecomp_cantidad = ".$cantidad.",
                detallecomp_precio = ".$producto_precio.",
                detallecomp_descuento = ".$descuento.",
                detallecomp_subtotal = ".$cantidad." * ".$producto_costo.",
                detallecomp_total = (".$cantidad." * ".$producto_costo.") - ".$descuento."          
                WHERE compra_id = ".$compra_id." and producto_id = ".$producto_id." and detallecomp_id = ".$detallecomp_id."
                ";
                $this->Compra_model->ejecutar($sql);

        
        $llenar =    "UPDATE inventario i, detalle_compra_aux d
                            SET i.existencia =  i.existencia+d.detallecomp_cantidad 
                            WHERE  d.compra_id = ".$compra_id." 
                            and i.producto_id = d.producto_id ";
                            
             $this->db->query($llenar);
            
            return true;
            
           
    }

     function quitar($detallecomp_id)
    {
        if ($this->session->userdata('logged_in')) {
            $session_data = $this->session->userdata('logged_in');
            if($session_data['tipousuario_id']==1) {
                $data = array(
                    'page_title' => 'Admin >> Mi Cuenta'
                );
        //**************** inicio contenido ***************        
        $vaciar =    "UPDATE inventario i, detalle_compra_aux d
                            SET i.existencia =  i.existencia-d.detallecomp_cantidad 
                            WHERE  d.detallecomp_id = ".$detallecomp_id." 
                            and i.producto_id = d.producto_id ";
                            
             $this->db->query($vaciar);
        $sql = "delete from detalle_compra_aux where detallecomp_id = ".$detallecomp_id;
        $this->Compra_model->ejecutar($sql);
        
        return true;
                    
        //**************** fin contenido ***************
                    }
                    else{ redirect('alerta'); }
        } else { redirect('', 'refresh'); }
        
    }

    /*
     * Deleting compra
     */
function edito($compra_id)
    {   
        // check if the compra exists before trying to edit it
        $data['compra'] = $this->Compra_model->get_compra($compra_id);
        
        if(isset($data['compra']['compra_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
                    'estado_id' => $this->input->post('estado_id'),
                    'tipotrans_id' => $this->input->post('tipotrans_id'),
                    'usuario_id' => $this->input->post('usuario_id'),
                    'moneda_id' => $this->input->post('moneda_id'),
                    'proveedor_id' => $this->input->post('proveedor_id'),
                    'forma_id' => $this->input->post('forma_id'),
                    'compra_fecha' => $this->input->post('compra_fecha'),
                    'compra_hora' => $this->input->post('compra_hora'),
                    'compra_subtotal' => $this->input->post('compra_subtotal'),
                    'compra_descuento' => $this->input->post('compra_descuento'),
                    'compra_descglobal' => $this->input->post('compra_descglobal'),
                    'compra_total' => $this->input->post('compra_total'),
                    'compra_efectivo' => $this->input->post('compra_efectivo'),
                    'compra_cambio' => $this->input->post('compra_cambio'),
                    'compra_glosa' => $this->input->post('compra_glosa'),
                    'compra_tipocambio' => $this->input->post('compra_tipocambio'),
                    'compra_chofer' => $this->input->post('compra_chofer'),
                'compra_placamovil' => $this->input->post('compra_placamovil'),
                'compra_fechallegada' => $this->input->post('compra_fechallegada'),
                'compra_horallegada' => $this->input->post('compra_horallegada'),
                'compra_numdoc' => $this->input->post('compra_numdoc'),
                'documento_respaldo_id' => $this->input->post('documento_respaldo_id'),
                );

                $this->Compra_model->update_compra($compra_id,$params);            
                redirect('compra/index');
            }
            else
            {
                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado();

                $this->load->model('Tipo_transaccion_model');
                $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();

                $this->load->model('Usuario_model');
                $data['all_usuario'] = $this->Usuario_model->get_all_usuario();

                $this->load->model('Moneda_model');
                $data['all_moneda'] = $this->Moneda_model->get_all_moneda();

                $this->load->model('Proveedor_model');
                $data['all_proveedor'] = $this->Proveedor_model->get_all_proveedor();

                $this->load->model('Forma_pago_model');
                $data['all_forma_pago'] = $this->Forma_pago_model->get_all_forma_pago();

                $data['_view'] = 'compra/edito';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The compra you are trying to edit does not exist.');
    } 
    function editar()

    {   

         $data['compra'] = $this->Compra_model->get_all_compra($params);
        $compra_id = $this->input->post('compra_id');

        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
                
              
              
               
                'compra_glosa' => $this->input->post('compra_glosa'),
                'compra_tipocambio' => $this->input->post('compra_tipocambio'),
                'compra_chofer' => $this->input->post('compra_chofer'),
                'compra_placamovil' => $this->input->post('compra_placamovil'),
                'compra_fechallegada' => $this->input->post('compra_fechallegada'),
                'compra_horallegada' => $this->input->post('compra_horallegada'),
                'compra_numdoc' => $this->input->post('compra_numdoc'),
                'documento_respaldo_id' => $this->input->post('documento_respaldo_id'),
            );
            
            $this->Compra_model->update_compra($compra_id,$params);            
               redirect('compra/edit/'.$compra_id);
        }
        else
        {
              $this->load->model('Compra_model');
            $data['compra'] = $this->Compra_model->get_all_compra($params);
            $data['proveedor'] = $this->Compra_model->get_all_proveedor($usuario_id);

            $this->load->model('Estado_model');
            $data['all_estado'] = $this->Estado_model->get_all_estado();

            $this->load->model('Tipo_transaccion_model');
            $data['all_tipo_transaccion'] = $this->Tipo_transaccion_model->get_all_tipo_transaccion();

            $this->load->model('Usuario_model');
            $data['all_usuario'] = $this->Usuario_model->get_all_usuario();

            $this->load->model('Moneda_model');
            $data['all_moneda'] = $this->Moneda_model->get_all_moneda();

            $this->load->model('Proveedor_model');
            $data['all_proveedor'] = $this->Proveedor_model->get_all_proveedor();

            $this->load->model('Forma_pago_model');
            $data['all_forma_pago'] = $this->Forma_pago_model->get_all_forma_pago();

            $this->load->model('Detalle_compra_model');
            $data['all_detalle_compra_aux'] = $this->Detalle_compra_model->get_all_detalle_compra();

            $this->load->model('Documento_respaldo_model');
            $data['all_documento_respaldo'] = $this->Documento_respaldo_model->get_all_documento_respaldo(); 
           
            
            $data['_view'] = 'compra/add';
            $this->load->view('layouts/main',$data);
        }
    } 

    

    function remove($compra_id)
    {
        $compra = $this->Compra_model->get_compra($compra_id);

        // check if the compra exists before trying to delete it
        if(isset($compra['compra_id']))
        {
            $this->Compra_model->delete_compra($compra_id);
            redirect('compra/index');
        }
        else
            show_error('The compra you are trying to delete does not exist.');
    }

 function pdf($compra_id){
     if ($this->session->userdata('logged_in')) {
            $session_data = $this->session->userdata('logged_in');
            if($session_data['tipousuario_id']==1) {
                $usuario_id = $session_data['usuario_id'];  
$data = array(
                    'page_title' => 'Admin >> Mi Cuenta'
                );
         $this->load->model('Empresa_model');
        $data['empresa'] = $this->Empresa_model->get_empresa(1);
       $data['compra'] = $this->Compra_model->join_compras($compra_id);
        $this->load->model('Detalle_compra_model');
                $data['detalle_compra'] = $this->Compra_model->get_detalle_compra($compra_id);
          $data['_view'] = 'compra/reciboCompra';
            $this->load->view('layouts/main',$data);
  
      
            }
            else{
                redirect('alerta');
            }
        } else {
            redirect('', 'refresh');
        }
    }
    
}
