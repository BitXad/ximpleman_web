<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Configuracion_email extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Configuracion_email_model');
    } 

    /*
     * Listing of configuracion_email
     */
    function index()
    {
        $data['configuracion_email'] = $this->Configuracion_email_model->get_all_configuracion_email();
        
        $data['_view'] = 'configuracion_email/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new configuracion_email
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'email_protocolo' => $this->input->post('email_protocolo'),
				'email_host' => $this->input->post('email_host'),
				'email_puerto' => $this->input->post('email_puerto'),
				'email_usuario' => $this->input->post('email_usuario'),
				'email_clave' => $this->input->post('email_clave'),
				'email_nombre' => $this->input->post('email_nombre'),
				'email_prioridad' => $this->input->post('email_prioridad'),
				'email_charset' => $this->input->post('email_charset'),
				'email_encriptacion' => $this->input->post('email_encriptacion'),
				'email_tipo' => $this->input->post('email_tipo'),
				'email_copia' => $this->input->post('email_copia'),
				'estado_id' => $this->input->post('estado_id'),
            );
            
            $configuracion_email_id = $this->Configuracion_email_model->add_configuracion_email($params);
            redirect('configuracion_email/index');
        }
        else
        {            
            $data['_view'] = 'configuracion_email/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a configuracion_email
     */
    function edit($email_id)
    {   
        // check if the configuracion_email exists before trying to edit it
        $data['configuracion_email'] = $this->Configuracion_email_model->get_configuracion_email($email_id);
        
        if(isset($data['configuracion_email']['email_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'email_protocolo' => $this->input->post('email_protocolo'),
					'email_host' => $this->input->post('email_host'),
					'email_puerto' => $this->input->post('email_puerto'),
					'email_usuario' => $this->input->post('email_usuario'),
					'email_clave' => $this->input->post('email_clave'),
					'email_nombre' => $this->input->post('email_nombre'),
					'email_prioridad' => $this->input->post('email_prioridad'),
					'email_charset' => $this->input->post('email_charset'),
					'email_encriptacion' => $this->input->post('email_encriptacion'),
					'email_tipo' => $this->input->post('email_tipo'),
					'email_copia' => $this->input->post('email_copia'),
					'estado_id' => $this->input->post('estado_id'),
                );

                $this->Configuracion_email_model->update_configuracion_email($email_id,$params);            
                redirect('configuracion_email/index');
            }
            else
            {
                $data['_view'] = 'configuracion_email/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The configuracion_email you are trying to edit does not exist.');
    } 

    /*
     * Deleting configuracion_email
     */
    function remove($email_id)
    {
        $configuracion_email = $this->Configuracion_email_model->get_configuracion_email($email_id);

        // check if the configuracion_email exists before trying to delete it
        if(isset($configuracion_email['email_id']))
        {
            $this->Configuracion_email_model->delete_configuracion_email($email_id);
            redirect('configuracion_email/index');
        }
        else
            show_error('The configuracion_email you are trying to delete does not exist.');
    }
    
}
