<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Tipo_usuario extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Tipo_usuario_model');
          $this->load->model('Rol_model');
    } 

    /*
     * Listing of tipo_usuario
     */
    function index()
    {
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('tipo_usuario/index?');
        $config['total_rows'] = $this->Tipo_usuario_model->get_all_tipo_usuario_count();
        $this->pagination->initialize($config);

        $data['tipo_usuario'] = $this->Tipo_usuario_model->get_all_tipo_usuario($params);
        $data['rol'] = $this->Rol_model->get_all_rol($params);
         
        $data['_view'] = 'tipo_usuario/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new tipo_usuario
     */
    function add()
    {   
        $this->load->library('form_validation');

		$this->form_validation->set_rules('tipousuario_descripcion','Tipousuario Descripcion','required');
		
		if($this->form_validation->run())     
        {   
            $params = array(
				'estado_id' => $this->input->post('estado_id'),
				'tipousuario_descripcion' => $this->input->post('tipousuario_descripcion'),
            );
            
            $tipo_usuario_id = $this->Tipo_usuario_model->add_tipo_usuario($params);
            redirect('tipo_usuario/index');
        }
        else
        {
			$this->load->model('Estado_model');
			$data['all_estado'] = $this->Estado_model->get_all_estado();
            
            $data['_view'] = 'tipo_usuario/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a tipo_usuario
     */
    function edit($tipousuario_id)
    {   
        // check if the tipo_usuario exists before trying to edit it
        $data['tipo_usuario'] = $this->Tipo_usuario_model->get_tipo_usuario($tipousuario_id);
        
        if(isset($data['tipo_usuario']['tipousuario_id']))
        {
            $this->load->library('form_validation');

			$this->form_validation->set_rules('tipousuario_descripcion','Tipousuario Descripcion','required');
		
			if($this->form_validation->run())     
            {   
                $params = array(
					'estado_id' => $this->input->post('estado_id'),
					'tipousuario_descripcion' => $this->input->post('tipousuario_descripcion'),
                );

                $this->Tipo_usuario_model->update_tipo_usuario($tipousuario_id,$params);            
                redirect('tipo_usuario/index');
            }
            else
            {
				$this->load->model('Estado_model');
				$data['all_estado'] = $this->Estado_model->get_all_estado();

                $data['_view'] = 'tipo_usuario/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The tipo_usuario you are trying to edit does not exist.');
    } 

    /*
     * Deleting tipo_usuario
     */
    function remove($tipousuario_id)
    {
        $tipo_usuario = $this->Tipo_usuario_model->get_tipo_usuario($tipousuario_id);

        // check if the tipo_usuario exists before trying to delete it
        if(isset($tipo_usuario['tipousuario_id']))
        {
            $this->Tipo_usuario_model->delete_tipo_usuario($tipousuario_id);
            redirect('tipo_usuario/index');
        }
        else
            show_error('The tipo_usuario you are trying to delete does not exist.');
    }
    
}
