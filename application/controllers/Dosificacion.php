<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Dosificacion extends CI_Controller{

    private $session_data = "";
    function __construct()
    {
        parent::__construct();
        $this->load->model('Dosificacion_model');            
        //$this->load->library('lib_nusoap/nusoap');    
    
        
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    }
    /* *****Funcion que verifica el acceso al sistema**** */
    private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }
    /*
     * Listing of dosificacion
     */
    function index()
    {
        if($this->acceso(149)){
           
            $config['total_rows'] = $this->Dosificacion_model->get_all_dosificacion_count();
            $this->pagination->initialize($config);
            if($config['total_rows'] > 0){
                $data['newdosif'] = 1;
            }else{ $data['newdosif'] =0; }

            $data['dosificacion'] = $this->Dosificacion_model->get_this_dosificacion();

            $data['_view'] = 'dosificacion/index';
            $this->load->view('layouts/main',$data);
        }
    }

    /*
     * Adding a new dosificacion
     */
    function add()
    {
        if($this->acceso(150)){
            $data['page_title'] = "Dosificación";
        if(isset($_POST) && count($_POST) > 0)     
        {   
            //estado activo al crear
            $estado_id = 1;
            $params = array(
                'estado_id' => $estado_id,
                'empresa_id' => $this->input->post('empresa_id'),
                //'dosificacion_fechahora' => $this->input->post('dosificacion_fechahora'),
                'dosificacion_nitemisor'    => $this->input->post('dosificacion_nitemisor'),
                'dosificacion_autorizacion' => $this->input->post('dosificacion_autorizacion'),
                'dosificacion_llave'       => $this->input->post('dosificacion_llave'),
                'dosificacion_fechalimite' => $this->input->post('dosificacion_fechalimite'),
                'dosificacion_numfact'     => $this->input->post('dosificacion_numfact'),
                'dosificacion_leyenda1'    => $this->input->post('dosificacion_leyenda1'),
                'dosificacion_leyenda2'    => $this->input->post('dosificacion_leyenda2'),
                'dosificacion_leyenda3'    => $this->input->post('dosificacion_leyenda3'),
                'dosificacion_leyenda4'    => $this->input->post('dosificacion_leyenda4'),
                'dosificacion_leyenda5'    => $this->input->post('dosificacion_leyenda5'),
                'dosificacion_sucursal'    => $this->input->post('dosificacion_sucursal'),
                'dosificacion_sfc'         => $this->input->post('dosificacion_sfc'),
                'dosificacion_actividad'   => $this->input->post('dosificacion_actividad'),
                'dosificasion_actividadsec' => $this->input->post('dosificacion_actividadsec'),
                'dosificacion_tokendelegado' => $this->input->post('dosificacion_tokendelegado'),
                'dosificacion_ambiente' => $this->input->post('dosificacion_ambiente'),
                'dosificacion_cuis' => $this->input->post('dosificacion_cuis'),
                'dosificacion_cufd' => $this->input->post('dosificacion_cufd'),
                'dosificacion_modalidad' => $this->input->post('dosificacion_modalidad'),
                'dosificacion_codsistema' => $this->input->post('dosificacion_codsistema'),
                'dosificacion_puntoventa' => $this->input->post('dosificacion_puntoventa'),
                'dosificacion_sectoreconomico' => $this->input->post('dosificacion_sectoreconomico'),
                'dosificacion_email' => $this->input->post('dosificacion_email'),
            );
            
            $dosificacion_id = $this->Dosificacion_model->add_dosificacion($params);
            redirect('dosificacion/index');
        }
        else
        {
			$this->load->model('Empresa_model');
			$data['all_empresa'] = $this->Empresa_model->get_all_empresa();
            
            $data['_view'] = 'dosificacion/add';
            $this->load->view('layouts/main',$data);
        }
        }
    }  

    /*
     * Editing a dosificacion
     */
    function edit($dosificacion_id)
    {
        if($this->acceso(151)){
            $data['page_title'] = "Dosificación";
        // check if the dosificacion exists before trying to edit it
        $data['dosificacion'] = $this->Dosificacion_model->get_dosificacion($dosificacion_id);
        
        if(isset($data['dosificacion']['dosificacion_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
                    'estado_id' => $this->input->post('estado_id'),
                    'empresa_id' => $this->input->post('empresa_id'),
                    //'dosificacion_fechahora' => $this->input->post('dosificacion_fechahora'),
                    'dosificacion_nitemisor' => $this->input->post('dosificacion_nitemisor'),
                    'dosificacion_autorizacion' => $this->input->post('dosificacion_autorizacion'),
                    'dosificacion_llave' => $this->input->post('dosificacion_llave'),
                    'dosificacion_numfact' => $this->input->post('dosificacion_numfact'),
                    'dosificacion_leyenda1' => $this->input->post('dosificacion_leyenda1'),
                    'dosificacion_leyenda2' => $this->input->post('dosificacion_leyenda2'),
                    'dosificacion_leyenda3' => $this->input->post('dosificacion_leyenda3'),
                    'dosificacion_leyenda4' => $this->input->post('dosificacion_leyenda4'),
                    'dosificacion_leyenda5' => $this->input->post('dosificacion_leyenda5'),
                    'dosificacion_sucursal' => $this->input->post('dosificacion_sucursal'),
                    'dosificacion_sfc' => $this->input->post('dosificacion_sfc'),
                    'dosificacion_actividad' => $this->input->post('dosificacion_actividad'),
                    'dosificacion_fechalimite' => $this->input->post('dosificacion_fechalimite'),
                    'dosificasion_actividadsec' => $this->input->post('dosificasion_actividadsec'),
                    'dosificacion_tokendelegado' => $this->input->post('dosificacion_tokendelegado'),
                    'dosificacion_ambiente' => $this->input->post('dosificacion_ambiente'),
                    'dosificacion_cuis' => $this->input->post('dosificacion_cuis'),
                    'dosificacion_cufd' => $this->input->post('dosificacion_cufd'),
                    'dosificacion_modalidad' => $this->input->post('dosificacion_modalidad'),
                    'dosificacion_codsistema' => $this->input->post('dosificacion_codsistema'),
                    'dosificacion_puntoventa' => $this->input->post('dosificacion_puntoventa'),
                    'dosificacion_sectoreconomico' => $this->input->post('dosificacion_sectoreconomico'),
                    'dosificacion_email' => $this->input->post('dosificacion_email'),
                );

                $this->Dosificacion_model->update_dosificacion($dosificacion_id,$params);            
                redirect('dosificacion/index');
            }
            else
            {
                $this->load->model('Estado_model');
                $data['all_estado'] = $this->Estado_model->get_all_estado_activo_inactivo();

                $this->load->model('Empresa_model');
                $data['all_empresa'] = $this->Empresa_model->get_all_empresa();

                $data['_view'] = 'dosificacion/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The dosificacion you are trying to edit does not exist.');
        }
    } 

    /*
     * Deleting dosificacion
     */
    function remove($dosificacion_id)
    {
        if($this->acceso(149)){
        $dosificacion = $this->Dosificacion_model->get_dosificacion($dosificacion_id);

        // check if the dosificacion exists before trying to delete it
        if(isset($dosificacion['dosificacion_id']))
        {
            $this->Dosificacion_model->delete_dosificacion($dosificacion_id);
            redirect('dosificacion/index');
        }
        else
            show_error('The dosificacion you are trying to delete does not exist.');
        }
    }

//prueba nusoap
    function prueba_soap(){
        
        
        $cliente = new SoapClient('http://www.dneonline.com/calculator.asmx?wsdl');
        $numeroA = 15;
        $numeroB = 7;
        
        
        $resultado = $cliente->Add([
            "intA"=>$numeroA,
            "intB"=>$numeroB]);
        echo "La suma es: ".$resultado->AddResult."<br>";        
        
        
        $resultado = $cliente->Subtract([
            "intA"=>$numeroA,
            "intB"=>$numeroB]);
        echo "La resta es: ".$resultado->SubtractResult."<br>";
        
        
        $resultado = $cliente->Multiply([
            "intA"=>$numeroA,
            "intB"=>$numeroB]);
        echo "El producto es: ".$resultado->MultiplyResult."<br>";        
        
    }
    
    function cufd(){
        
        //try{
        
        
                $dosificacion_id = 1;
                $dosificacion = $this->Dosificacion_model->get_dosificacion(1);

                $cliente = new SoapClient($dosificacion['dosificacion_obtencioncodigos'], array(
                        "trace"      => 1,
                        "exceptions" => 1,
                        "cache_wsdl" => 1));


              /*  $cabecera = new SoapHeader("ApiKey", "TokenApi ".$dosificacion['dosificacion_tokendelegado']);
                $cliente->__setSoapHeaders($cabecera); */
                
               /* $auth = array(
                    'UserName'=>'USERNAME',
                    'Password'=>'PASSWORD',
                    'SystemId'=> array('_'=>'DATA','Param'=>'PARAM'),
                    );
              $header = new SoapHeader('NAMESPACE','Auth',$auth,false);
              $cliente->__setSoapHeaders($header);*/
                
                //$auth         = new ChannelAdvisorAuth("ApiKey", "TokenApi ".$dosificacion['dosificacion_tokendelegado']);
                $header     = new SoapHeader("http://www.example.com/webservices/", "APICredentials", "TokenApi ".$dosificacion['dosificacion_tokendelegado'], false);

                
                // apikey es el token delegado
               // $cliente.header("apikey", "TokenApi " +$dosificacion['dosificacion_tokendelegado']);

                $codigoAmbiente = $dosificacion['dosificacion_ambiente'];
                $codigoModalidad = $dosificacion['dosificacion_modalidad'];
                $codigoPuntoVenta = $dosificacion['dosificacion_puntoventa'];
                $codigoSistema = $dosificacion['dosificacion_codsistema'];
                $codigoSucursal = $dosificacion['dosificacion_codsucursal'];
                $cuis = $dosificacion['dosificacion_cuis'];
                $nit = $dosificacion['dosificacion_nitemisor'];

                //echo $codigoAmbiente.",".$codigoModalidad.",".$codigoPuntoVenta.",".$codigoSistema.",".$codigoSucursal.",".$cuis.",".$nit;
               echo "REQUEST HEADERS:\n".$cliente->__getLastRequestHeaders();

                $parametros = ["SolicitudCufd" => [
                    "codigoAmbiente"=>$codigoAmbiente,
                    "codigoModalidad"=>$codigoModalidad,
                    "codigoPuntoVenta"=>$codigoPuntoVenta,
                    "codigoSistema"=>$codigoSistema,
                    "codigoSucursal"=>$codigoSucursal,
                    "cuis"=>$cuis,
                    "nit"=>$nit ]];

                $resultado = $cliente->cufd($parametros);
              
                $result = $cliente->__soapCall("DeleteMarketplaceAd",$parametros, NULL, $header);

                //echo "Advertencia: ".$resultado->faultstring; 

        /*} catch (Exception $ex){
            
            echo "Algo esta mal";
        }*/
        
            
    }
    
    
}
