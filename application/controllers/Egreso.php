<?php
/* 
 * Generated by CRUDigniter v3.0 Beta 
 * www.crudigniter.com
 */
 
class Egreso extends CI_Controller{
    private $session_data = "";
    function __construct()
    {
        parent::__construct();
        $this->load->model('Egreso_model');
        $this->load->model('Categoria_egreso_model'); 
        $this->load->model('Empresa_model');
        $this->load->model('Usuario_model');   
        $this->load->helper('numeros');
        $this->load->model('Parametro_model');
        if ($this->session->userdata('logged_in')) {
            $this->session_data = $this->session->userdata('logged_in');
        }else {
            redirect('', 'refresh');
        }
    }
    /* *****Funcion que verifica el acceso al sistema**** */
    private function acceso($id_rol){
        $rolusuario = $this->session_data['rol'];
        if($rolusuario[$id_rol-1]['rolusuario_asignado'] == 1){
            return true;
        }else{
            $data['_view'] = 'login/mensajeacceso';
            $this->load->view('layouts/main',$data);
        }
    }
     
    /*  
     * Listegr of egreso
     */
    function index()
    {
        if($this->acceso(59)){
            $data['page_title'] = "Egreso";
            $data['rol'] = $this->session_data['rol'];
            $data['egreso'] = $this->Egreso_model->get_all_egreso();
            $data['categoria_egreso'] = $this->Categoria_egreso_model->get_all_categoria_egreso();
            $data['empresa'] = $this->Empresa_model->get_empresa(1);    
            $data['_view'] = 'egreso/index';
            $this->load->view('layouts/main',$data);
        }
    }

    function buscarfecha()
    {
        if($this->acceso(59)){
        if ($this->input->is_ajax_request()) {
            
            $filtro = $this->input->post('filtro');
            
           if ($filtro == null){
            $result = $this->Egreso_model->get_all_egreso($params);
            }
            else{
            $result = $this->Egreso_model->fechaegreso($filtro);            
            }
           echo json_encode($result);
            
        }
        else
        {                 
                    show_404();
        }          
        }
    }

    
    function add()
    {   
        if($this->acceso(60)){
            $data['page_title'] = "Egreso";
                $usuario_id = $this->session_data['usuario_id'];
                
      $this->load->library('form_validation');
      $this->form_validation->set_rules(
        'egreso_nombre', 'egreso_nombre',
        'required');
       
       if($this->form_validation->run())      
        {   
          $numrec = $this->Egreso_model->numero();
           $numero = $numrec[0]['parametro_numrecegr'] + 1;
           

            $params = array(
        'usuario_id' => $usuario_id,
        'egreso_categoria' => $this->input->post('egreso_categoria'),
        'egreso_numero' => $numero,
        'egreso_nombre' => $this->input->post('egreso_nombre'),
        'egreso_monto' => $this->input->post('egreso_monto'),
        'egreso_moneda' => $this->input->post('egreso_moneda'),
        'egreso_concepto' => $this->input->post('egreso_concepto'),
        'egreso_fecha' => $this->input->post('egreso_fecha'),
        
            );

            
            
            $egreso_id = $this->Egreso_model->add_egreso($params);
            $sql = "UPDATE parametros SET parametro_numrecegr=parametro_numrecegr+1 WHERE parametro_id = '1'"; 
            $this->db->query($sql);
            redirect('egreso/index');
           
        }
        else
        {
         $this->load->model('Categoria_egreso_model');
           $data['all_categoria_egreso'] = $this->Categoria_egreso_model->get_all_categoria_egreso();
           $this->load->model('Parametro_model');
           $data['parametro'] = $this->Parametro_model->get_all_parametro();
            $data['_view'] = 'egreso/add';
            $this->load->view('layouts/main',$data);
        }
            }
    } 

    /*
     * Editegr a egreso
     */
    function edit($egreso_id)
    {   
        if($this->acceso(61)){
            $data['page_title'] = "Egreso";
            $usuario_id = $this->session_data['usuario_id'];
        // check if the egreso exists before tryegr to edit it
        $data['egreso'] = $this->Egreso_model->get_egreso($egreso_id);
        $data['tipousuario_id'] = $this->session_data['tipousuario_id'];
        
        if(isset($data['egreso']['egreso_id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'usuario_id' => $usuario_id,
        'egreso_categoria' => $this->input->post('egreso_categoria'),
        'egreso_numero' => $this->input->post('egreso_numero'),
        'egreso_nombre' => $this->input->post('egreso_nombre'),
        'egreso_monto' => $this->input->post('egreso_monto'),
        'egreso_moneda' => $this->input->post('egreso_moneda'),
        'egreso_concepto' => $this->input->post('egreso_concepto'),
        'egreso_fecha' => $this->input->post('egreso_fecha'),
				
                );

                $this->Egreso_model->update_egreso($egreso_id,$params);            
                redirect('egreso/index');
            }
            else
            {
	
                $this->load->model('Categoria_egreso_model');
           $data['all_categoria_egreso'] = $this->Categoria_egreso_model->get_all_categoria_egreso();
                $data['_view'] = 'egreso/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The egreso you are tryegr to edit does not exist.');
            }
    }

    /*
     * Deletegr egreso
     */

public function pdf($egreso_id){
    if($this->acceso(64)){
        $data['page_title'] = "Egreso";
      $data['egresos'] = $this->Egreso_model->get_egresos($egreso_id);
      $data['empresa'] = $this->Empresa_model->get_empresa(1);    
             $data['_view'] = 'egreso/recibo';
            $this->load->view('layouts/main',$data);
       
        }
    }


    public function boucher($egreso_id){
        if($this->acceso(64)){
            $data['page_title'] = "Egreso";
      $data['egreso'] = $this->Egreso_model->get_egresos($egreso_id);
      $data['empresa'] = $this->Empresa_model->get_empresa(1);    
             $data['_view'] = 'egreso/reciboboucher';
            $this->load->view('layouts/main',$data);
            }
    }

    function remove($egreso_id)
    {
        if($this->acceso(62)){
            $egreso = $this->Egreso_model->get_egreso($egreso_id);

            // check if the egreso exists before tryegr to delete it
            if(isset($egreso['egreso_id']))
            {
                $this->Egreso_model->delete_egreso($egreso_id);
                redirect('egreso/index');
            }
            else
                show_error('The egreso you are tryegr to delete does not exist.');
        }
    }
    

    public function convertir()
    {
        if($this->acceso(59)){
        $egreso_monto = trim($this->input->post('egreso_monto'));

        if (empty($egreso_monto)) {
            echo json_encode(array('leyenda' => 'Debe introducir una egreso_monto.'));
            
            return;
        }
        
        # verificar si el número no tiene caracteres no númericos, con excepción
        # del punto decimal
        $xegreso_monto = str_replace('.', '', $egreso_monto);
        
        if (FALSE === ctype_digit($xegreso_monto)){
            echo json_encode(array('leyenda' => 'La egreso_monto introducida no es válida.'));
            
            return;
        }

        # procedemos a covertir la egreso_monto en letras
        $this->load->helper('numeros');
        $response = array(
            'leyenda' => num_to_letras($egreso_monto)
            , 'egreso_monto' => $egreso_monto
            );  
        echo json_encode($response);
        }
    }


}
